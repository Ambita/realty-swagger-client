{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for EDR REST service",
    "version" : "1.0",
    "title" : "Realty",
    "contact" : {
      "name" : "info@ambita.com"
    },
    "license" : {
      "name" : "",
      "url" : "http://licenseUrl"
    }
  },
  "host" : "api.ambita.com",
  "basePath" : "/",
  "tags" : [ {
    "name" : "Offices"
  }, {
    "name" : "Persons"
  }, {
    "name" : "Deprecated"
  }, {
    "name" : "Share Liens Calculations"
  }, {
    "name" : "Share Housing Values"
  }, {
    "name" : "Cultural Heritages"
  }, {
    "name" : "Points of Conveyances"
  }, {
    "name" : "Cadastre Liens Calculations"
  }, {
    "name" : "Share Rights"
  }, {
    "name" : "Cadastre Ownerships"
  }, {
    "name" : "Streets Search"
  }, {
    "name" : "Cadastre Housing Values"
  }, {
    "name" : "Customers"
  }, {
    "name" : "Scope"
  }, {
    "name" : "Building Changes"
  }, {
    "name" : "Geometries"
  }, {
    "name" : "Users"
  }, {
    "name" : "Code Fields"
  }, {
    "name" : "Shares"
  }, {
    "name" : "Share Scores"
  }, {
    "name" : "Share Conveyances"
  }, {
    "name" : "Cadastre Conveyances"
  }, {
    "name" : "Streets"
  }, {
    "name" : "Persons Search"
  }, {
    "name" : "Cadastres Search"
  }, {
    "name" : "Districts"
  }, {
    "name" : "Customer Scores"
  }, {
    "name" : "Creation Of Rights"
  }, {
    "name" : "Shares Search"
  }, {
    "name" : "Addresses Search"
  }, {
    "name" : "Cadastres"
  }, {
    "name" : "Validate Cadastre Land Registry"
  }, {
    "name" : "Affairs"
  }, {
    "name" : "Coop Internals"
  }, {
    "name" : "Single Heritages"
  }, {
    "name" : "Municipalities"
  }, {
    "name" : "PDF Orders"
  }, {
    "name" : "Coordinates"
  }, {
    "name" : "Home Equities"
  }, {
    "name" : "Buildings"
  }, {
    "name" : "Floors"
  }, {
    "name" : "Realty Estate Units"
  }, {
    "name" : "Housing Cooperatives Search"
  }, {
    "name" : "Cadastre Scores"
  }, {
    "name" : "Unregistered Ownerships"
  }, {
    "name" : "Places Search"
  }, {
    "name" : "Cadastre Land Registry"
  }, {
    "name" : "Cadastre Rights"
  }, {
    "name" : "Housing Cooperatives"
  }, {
    "name" : "Sectionings"
  }, {
    "name" : "Share Land Registry"
  }, {
    "name" : "Cadastre Document Copy Existence"
  }, {
    "name" : "Soil Contaminations"
  }, {
    "name" : "Share Document Copy Existence"
  }, {
    "name" : "Plots"
  }, {
    "name" : "Addresses"
  }, {
    "name" : "Share Ownerships"
  }, {
    "name" : "Systemping"
  }, {
    "name" : "Complaints"
  }, {
    "name" : "Dictionary"
  }, {
    "name" : "Separately Occupied Units"
  } ],
  "paths" : {
    "/realty/v1/cadastre/offices/{cadastreDocumentKey}" : {
      "get" : {
        "tags" : [ "Offices" ],
        "summary" : "Get document ident based on key",
        "description" : "Returns document ident based on key",
        "operationId" : "offices",
        "parameters" : [ {
          "name" : "cadastreDocumentKey",
          "in" : "path",
          "description" : "Returns documentIdent for provided document key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOfficeItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/owners/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the owners of a cadastre",
        "description" : "",
        "operationId" : "listOwnersOfCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns persons who owns the cadastre with max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/owners/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the owners of a share",
        "description" : "",
        "operationId" : "listOwnersOfShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/conveyances/{conveyanceKey}/buyers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the buyers participating in a conveyance  of cadastres",
        "description" : "",
        "operationId" : "listBuyersOfConveyanceOfCadastres",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/conveyances/{conveyanceKey}/sellers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the sellers participating in a conveyance of cadastres",
        "description" : "",
        "operationId" : "listSellersOfConveyanceOfCadastres",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/conveyances/{conveyanceKey}/buyers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the buyers participating in a conveyance of shares",
        "description" : "",
        "operationId" : "listBuyersOfConveyanceOfShares",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/conveyances/{conveyanceKey}/sellers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the sellers participating in a conveyance of shares",
        "description" : "",
        "operationId" : "listSellersOfConveyanceOfShares",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/developers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get persons with a role as developer of a building",
        "description" : "",
        "operationId" : "listDevelopersOfBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/contacts/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get persons with the role as contact person of a building",
        "description" : "",
        "operationId" : "listContactsOfBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/developers/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get persons with a role as developer of a building change",
        "description" : "",
        "operationId" : "listDevelopersOfBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/contacts/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get persons with the role as contact person of a building change",
        "description" : "",
        "operationId" : "listContactsOfBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/ownerships/{ownershipKey}/owningperson/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the owning person for a cadastre ownership",
        "description" : "",
        "operationId" : "uniqueOwnerOfOwnershipOnCadastres",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Ownership key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/ownerships/{ownershipKey}/owningperson/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get the owning person for a share ownership",
        "description" : "",
        "operationId" : "uniqueOwnerOfOwnershipOnShares",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Ownership key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get person",
        "description" : "Get person",
        "operationId" : "person",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Official key<br />Example of official key for a person <official personal number> - length 11<br />Example of official id for organisation '948946645 S' - length 9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "hasProperty",
          "in" : "query",
          "description" : "Filter person without a property (not filtered if false)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/" : {
      "get" : {
        "tags" : [ "Persons" ],
        "summary" : "Get persons",
        "description" : "Returns persons",
        "operationId" : "persons",
        "parameters" : [ {
          "name" : "ownsCadastreKey",
          "in" : "query",
          "description" : "Returns persons who owns the cadastre for provided cadastre key, for example (1201-10-1-0-0)",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "ownsShareKey",
          "in" : "query",
          "description" : "Returns persons who owns the share for provided share key, for example (948946645-1)",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "conveyanceOfCadastreKey",
          "in" : "query",
          "description" : "Returns persons who participated in a conveyance of cadastre for provided conveyance key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "conveyanceOfShareKey",
          "in" : "query",
          "description" : "Returns persons who participated in a conveyance of share for provided conveyance key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns persons who participated in building construction for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingChangeKey",
          "in" : "query",
          "description" : "Returns persons who participated in building construction for provided building change key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Returns persons of specified role who participated in a conveyance (seller, purchaser) or building construction (constructor, developer)",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns persons who owns the cadastre with max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/property/lienscalculations/{cadastreKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get liens calculation",
        "description" : "DEPRECATED: see Cadastre Liens Calculations",
        "operationId" : "lienscalculationcadastreDeprecated",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns liens calculation for cadastre for provided official id<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Filter on the cadastre's max cadastre-level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "ignoreInterpretationFaults",
          "in" : "query",
          "description" : "Ignore interpretation faults",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreLiensCalculationItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/shares/{shareKey}/lienscalculation/" : {
      "get" : {
        "tags" : [ "Share Liens Calculations" ],
        "summary" : "Get liens calculation for a share",
        "description" : "",
        "operationId" : "getByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns liens calculation having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "ignoreInterpretationFaults",
          "in" : "query",
          "description" : "Ignore interpretation faults",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareLiensCalculationItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/housingvalue/" : {
      "get" : {
        "tags" : [ "Share Housing Values" ],
        "summary" : "Get housing value for a share",
        "description" : "",
        "operationId" : "getHousingValueForShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareHousingValueItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/culturalheritages/" : {
      "get" : {
        "tags" : [ "Cultural Heritages" ],
        "summary" : "Get cultural heritages related to a building",
        "description" : "",
        "operationId" : "listHeritageByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CulturalHeritageListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/culturalheritages/{culturalHeritageKey}" : {
      "get" : {
        "tags" : [ "Cultural Heritages" ],
        "summary" : "Get cultural heritage",
        "description" : "Returns cultural heritage",
        "operationId" : "culturalheritage",
        "parameters" : [ {
          "name" : "culturalHeritageKey",
          "in" : "path",
          "description" : "Returns cultural heritage for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CulturalHeritageItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/culturalheritages/" : {
      "get" : {
        "tags" : [ "Cultural Heritages" ],
        "summary" : "Get cultural heritages",
        "description" : "Returns cultural heritages",
        "operationId" : "culturalheritages",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns cultural heritages for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CulturalHeritageListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pocs/{pocId}" : {
      "get" : {
        "tags" : [ "Points of Conveyances" ],
        "summary" : "Get POC",
        "description" : "Returns POC",
        "operationId" : "poc",
        "parameters" : [ {
          "name" : "pocId",
          "in" : "path",
          "description" : "Returns POC for provided POC id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POCItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pocs/" : {
      "get" : {
        "tags" : [ "Points of Conveyances" ],
        "summary" : "Get POCs",
        "description" : "Returns POCs",
        "operationId" : "pocs",
        "parameters" : [ {
          "name" : "eastingMin",
          "in" : "query",
          "description" : "Minimum easting for provided extent",
          "required" : true,
          "type" : "number",
          "default" : -59448.67,
          "format" : "double"
        }, {
          "name" : "northingMin",
          "in" : "query",
          "description" : "Minimum northing for provided extent",
          "required" : true,
          "type" : "number",
          "default" : 6779504.82,
          "format" : "double"
        }, {
          "name" : "eastingMax",
          "in" : "query",
          "description" : "Maximum easting for provided extent",
          "required" : true,
          "type" : "number",
          "default" : -57557.26,
          "format" : "double"
        }, {
          "name" : "northingMax",
          "in" : "query",
          "description" : "Maximum northing for provided extent",
          "required" : true,
          "type" : "number",
          "default" : 6782860.09,
          "format" : "double"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "From date<br />Use the ISO 8601 date format (YYYY-MM-DD or YYYYMMDD)",
          "required" : false,
          "type" : "string",
          "default" : "2010"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "To date<br />Use the ISO 8601 date format (YYYY-MM-DD or YYYYMMDD)",
          "required" : false,
          "type" : "string",
          "default" : "2019"
        }, {
          "name" : "groundUsage",
          "in" : "query",
          "description" : "Usage of ground<br />Use a combination of three characters: 'B' for residential or 'F' for recreational or 'A' for other",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POCListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/lienscalculation/" : {
      "get" : {
        "tags" : [ "Cadastre Liens Calculations" ],
        "summary" : "Get liens calculation for cadastre",
        "description" : "",
        "operationId" : "getByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Filter on the cadastre's max cadastre-level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "ignoreInterpretationFaults",
          "in" : "query",
          "description" : "Ignore interpretation faults",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreLiensCalculationItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/creationofrights/" : {
      "get" : {
        "tags" : [ "Share Rights" ],
        "summary" : "Get easements for cadastre",
        "description" : "",
        "operationId" : "rightsForShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "What group of rights to filter on",
          "required" : true,
          "type" : "string",
          "enum" : [ "avtaler", "heftelser" ]
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Filter on the share's max share-level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Include details for each right",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeFormatted",
          "in" : "query",
          "description" : "Include formatted data for each right",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeRelatedRights",
          "in" : "query",
          "description" : "Include relatedRights for each right",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RightsItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/ownershipsowningthiscadastre/" : {
      "get" : {
        "tags" : [ "Cadastre Ownerships" ],
        "summary" : "Get ownerships by cadastre",
        "description" : "",
        "operationId" : "listOwnershipsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/ownershipsownedbythiscadastre/" : {
      "get" : {
        "tags" : [ "Cadastre Ownerships" ],
        "summary" : "Get ownerships owned by this cadastre",
        "description" : "",
        "operationId" : "listOwnershipsOwnedByThisCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Owned by this cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/cadastreownerships/" : {
      "get" : {
        "tags" : [ "Cadastre Ownerships" ],
        "summary" : "Get ownerships by person",
        "description" : "",
        "operationId" : "listOwnershipsByPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          },
          "413" : {
            "description" : "Request entity too large"
          }
        }
      }
    },
    "/realty/v1/cadastre/ownerships/{ownershipKey}" : {
      "get" : {
        "tags" : [ "Cadastre Ownerships" ],
        "summary" : "Get ownership",
        "description" : "Returns ownership",
        "operationId" : "propertyOwnership",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Returns ownership for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/search/streets/" : {
      "get" : {
        "tags" : [ "Streets Search" ],
        "summary" : "Get streets",
        "description" : "Search for streets",
        "operationId" : "streetsSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum (currently not in use)",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StreetSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/surroundinghousingvalues/" : {
      "get" : {
        "tags" : [ "Cadastre Housing Values" ],
        "summary" : "Get surrounding housing values for a cadastre",
        "description" : "Returns housing values",
        "operationId" : "getSurroundingHousingValuesForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreHousingValueListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/housingvalue/" : {
      "get" : {
        "tags" : [ "Cadastre Housing Values" ],
        "summary" : "Get housing value for a cadastre",
        "description" : "",
        "operationId" : "getHousingValueForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreHousingValueItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/customers/{customerId}" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get customer",
        "description" : "Returns  customer",
        "operationId" : "customer",
        "parameters" : [ {
          "name" : "customerId",
          "in" : "path",
          "description" : "Returns customer for customer id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "isExternalId",
          "in" : "query",
          "description" : "Provided customerId is external",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/customers/" : {
      "get" : {
        "tags" : [ "Customers" ],
        "summary" : "Get customers",
        "description" : "Returns customers",
        "operationId" : "customers",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/scopes/" : {
      "get" : {
        "tags" : [ "Scope" ],
        "summary" : "Get scope list",
        "description" : "Returns scope list",
        "operationId" : "scope",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Scope"
            }
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/changes/" : {
      "get" : {
        "tags" : [ "Building Changes" ],
        "summary" : "Get building changes for building",
        "description" : "",
        "operationId" : "changeByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyIncludeUnderConstruction",
          "in" : "query",
          "description" : "Only include changes under construction",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingChangeListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{unitKey}/buildingchange/" : {
      "get" : {
        "tags" : [ "Building Changes" ],
        "summary" : "Get the building change for a separately occupied unit",
        "description" : "",
        "operationId" : "uniqueChangeByUnit",
        "parameters" : [ {
          "name" : "unitKey",
          "in" : "path",
          "description" : "Separately occupied unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingChangeItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/changes/{version}" : {
      "get" : {
        "tags" : [ "Building Changes" ],
        "summary" : "Get building change",
        "description" : "Returns building change",
        "operationId" : "buildingchangeold",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "path",
          "description" : "Returns building change for provided building version",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingChangeItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}" : {
      "get" : {
        "tags" : [ "Building Changes" ],
        "summary" : "Get building change",
        "description" : "Returns building change",
        "operationId" : "buildingchange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "Returns building change for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingChangeItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/" : {
      "get" : {
        "tags" : [ "Building Changes" ],
        "summary" : "Get building changes",
        "description" : "Returns building changes",
        "operationId" : "buildingchanges",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns building changes for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyIncludeUnderConstruction",
          "in" : "query",
          "description" : "Only include changes under construction",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingChangeListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/positions/{x},{y},{datum}/plot/polygon/" : {
      "get" : {
        "tags" : [ "Geometries" ],
        "summary" : "Get plot-polygons by position",
        "description" : "Returns polygons as geojson",
        "operationId" : "plotPolygonsByPosition",
        "parameters" : [ {
          "name" : "x",
          "in" : "path",
          "description" : "X/ easting",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "y",
          "in" : "path",
          "description" : "Y/ northing",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "datum",
          "in" : "path",
          "description" : "Geodetic datum",
          "required" : true,
          "type" : "string",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/polygon/" : {
      "get" : {
        "tags" : [ "Geometries" ],
        "summary" : "Get polygons for cadastre",
        "description" : "Returns polygons as geojson",
        "operationId" : "polygonsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/user" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get logged in user",
        "description" : "Returns logged in user",
        "operationId" : "user",
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/codefields/{codefieldKey}" : {
      "get" : {
        "tags" : [ "Code Fields" ],
        "summary" : "Get codefield",
        "description" : "Returns codefield",
        "operationId" : "codefield",
        "parameters" : [ {
          "name" : "codefieldKey",
          "in" : "path",
          "description" : "Returns the codefield for the provided codefield key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "languageForm",
          "in" : "query",
          "description" : "The language form of the content",
          "required" : false,
          "type" : "string",
          "default" : "B",
          "enum" : [ "B", "N" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The required state of each code",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CodeFieldItemResponse"
            }
          }
        }
      }
    },
    "/realty/v1/codefields/" : {
      "get" : {
        "tags" : [ "Code Fields" ],
        "summary" : "Get all codefields",
        "description" : "Returns all codefields",
        "operationId" : "codefields",
        "parameters" : [ {
          "name" : "languageForm",
          "in" : "query",
          "description" : "The language form of the content",
          "required" : false,
          "type" : "string",
          "default" : "B",
          "enum" : [ "B", "N" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The required state of each code",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CodeFieldListResponse"
            }
          }
        }
      }
    },
    "/realty/v1/pocs/{pocKey}/shares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares for a pocId",
        "description" : "",
        "operationId" : "listSharesByPoc",
        "parameters" : [ {
          "name" : "pocKey",
          "in" : "path",
          "description" : "Poc key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns shares from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/shares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares for a address",
        "description" : "",
        "operationId" : "listSharesByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "Address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/housingcooperatives/{cooperativeKey}/shares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares for a cooperative",
        "description" : "",
        "operationId" : "listSharesByCooperative",
        "parameters" : [ {
          "name" : "cooperativeKey",
          "in" : "path",
          "description" : "Cooperative key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/ownerships/{ownershipKey}/ownedshare/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get the owned share for an ownership",
        "description" : "",
        "operationId" : "uniqueShareByOwnership",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Ownership key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/positions/{x},{y},{inputDatum}/nearbyshares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares near position",
        "description" : "The list is sorted by distance",
        "operationId" : "sharesNearbyPosition",
        "parameters" : [ {
          "name" : "x",
          "in" : "path",
          "description" : "X/ easting",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "y",
          "in" : "path",
          "description" : "Y/ northing",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "inputDatum",
          "in" : "path",
          "description" : "The positions geodetic datum",
          "required" : true,
          "type" : "string",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "maxDistance",
          "in" : "query",
          "description" : "Max distance",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Geodetic datum in response. If not provided the inputDatum will be the default.",
          "required" : false,
          "type" : "string",
          "default" : "null",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/conveyances/{conveyanceKey}/shares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares for a conveyance",
        "description" : "",
        "operationId" : "listSharesByConveyance",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "Conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/ownedshares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares owned by a person",
        "description" : "",
        "operationId" : "listByOwningPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Owned by person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{unitKey}/share/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get the share for a separately occupied unit",
        "description" : "",
        "operationId" : "uniqueShareByUnit",
        "parameters" : [ {
          "name" : "unitKey",
          "in" : "path",
          "description" : "Separately occupied unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get share",
        "description" : "Returns share",
        "operationId" : "share",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Returns share for provided official id<br />Example of official id for housing cooperative share '948946645-2'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/" : {
      "get" : {
        "tags" : [ "Shares" ],
        "summary" : "Get shares",
        "description" : "Returns shares",
        "operationId" : "shares",
        "parameters" : [ {
          "name" : "ownedByPersonKey",
          "in" : "query",
          "description" : "Returns shares owned by person for provided person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "DEPRECATED. Returns shares for provided address id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns shares for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "pocId",
          "in" : "query",
          "description" : "Returns shares for provided poc id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "conveyanceKey",
          "in" : "query",
          "description" : "Returns shares for provided conveyance key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cooperativeKey",
          "in" : "query",
          "description" : "Returns shares for provided cooperative key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns shares from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/geojson/pocs/{pocId}" : {
      "get" : {
        "tags" : [ "Points of Conveyances" ],
        "summary" : "Get POC GeoJSON",
        "description" : "Returns POC GeoJSON",
        "operationId" : "pocGeoJSON",
        "parameters" : [ {
          "name" : "pocId",
          "in" : "path",
          "description" : "Returns POC for provided POC id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POCGeoJSONResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/geojson/pocs/" : {
      "get" : {
        "tags" : [ "Points of Conveyances" ],
        "summary" : "Get POCs GeoJSON",
        "description" : "Returns POCs GeoJSON",
        "operationId" : "pocsGeoJSON",
        "parameters" : [ {
          "name" : "eastingMin",
          "in" : "query",
          "description" : "Minimum easting for provided extent",
          "required" : true,
          "type" : "number",
          "default" : -59448.67,
          "format" : "double"
        }, {
          "name" : "northingMin",
          "in" : "query",
          "description" : "Minimum northing for provided extent",
          "required" : true,
          "type" : "number",
          "default" : 6779504.82,
          "format" : "double"
        }, {
          "name" : "eastingMax",
          "in" : "query",
          "description" : "Maximum easting for provided extent",
          "required" : true,
          "type" : "number",
          "default" : -57557.26,
          "format" : "double"
        }, {
          "name" : "northingMax",
          "in" : "query",
          "description" : "Maximum northing for provided extent",
          "required" : true,
          "type" : "number",
          "default" : 6782860.09,
          "format" : "double"
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "From date<br />Use the ISO 8601 date format (YYYY-MM-DD or YYYYMMDD)",
          "required" : false,
          "type" : "string",
          "default" : "2010"
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "To date<br />Use the ISO 8601 date format (YYYY-MM-DD or YYYYMMDD)",
          "required" : false,
          "type" : "string",
          "default" : "2019"
        }, {
          "name" : "groundUsage",
          "in" : "query",
          "description" : "Usage of ground<br />Use a combination of three characters: 'B' for residential or 'F' for recreational or 'A' for other",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/POCGeoJSONResponseCollection"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/objectscores/{cadastreKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get object score for a cadastre",
        "description" : "DEPRECATED: see Cadastre Scores",
        "operationId" : "scoreGetDeprecated",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns cadastre score for provided official id<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cooperative/lienscalculations/{shareKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get liens calculation",
        "description" : "DEPRECATED: see Share Liens Calculations",
        "operationId" : "lienscalculationshareDeprecated",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Returns liens calculation for share for provided official id<br />Example of official id for housing cooperative share '948946645-2'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns liens calculation having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "ignoreInterpretationFaults",
          "in" : "query",
          "description" : "Ignore interpretation faults",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareLiensCalculationItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/shares/{shareKey}/objectscore/" : {
      "get" : {
        "tags" : [ "Share Scores" ],
        "summary" : "Get object score for a share",
        "description" : "",
        "operationId" : "uniqueScoreByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Returns share score for provided official id<br />Example of official id for share '948946645-2'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns share score having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/poc/{pocKey}/shareconveyances/" : {
      "get" : {
        "tags" : [ "Share Conveyances" ],
        "summary" : "Get conveyances for a poc",
        "description" : "",
        "operationId" : "listCoopConveyancesByPoc",
        "parameters" : [ {
          "name" : "pocKey",
          "in" : "path",
          "description" : "Poc key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/conveyances/" : {
      "get" : {
        "tags" : [ "Share Conveyances" ],
        "summary" : "Get conveyances for a share",
        "description" : "",
        "operationId" : "listConveyancesByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns conveyances having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/conveyances/{conveyanceKey}" : {
      "get" : {
        "tags" : [ "Share Conveyances" ],
        "summary" : "Get conveyance",
        "description" : "Returns conveyance",
        "operationId" : "coopConveyance",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "Returns conveyance for provided conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareConveyanceItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/conveyances/" : {
      "get" : {
        "tags" : [ "Cadastre Conveyances" ],
        "summary" : "Get conveyances for a cadastre",
        "description" : "",
        "operationId" : "listConveyancesByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns conveyances for a cadastre with max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort results by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pocs/{pocKey}/cadastreconveyances/" : {
      "get" : {
        "tags" : [ "Cadastre Conveyances" ],
        "summary" : "Get conveyances for a poc",
        "description" : "",
        "operationId" : "listConveyancesByPoc",
        "parameters" : [ {
          "name" : "pocKey",
          "in" : "path",
          "description" : "Poc key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort results by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/conveyances/{conveyanceKey}" : {
      "get" : {
        "tags" : [ "Cadastre Conveyances" ],
        "summary" : "Get conveyance",
        "description" : "Returns conveyance",
        "operationId" : "propertyConveyance",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "Returns conveyance for provided conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreConveyanceItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/streets/" : {
      "get" : {
        "tags" : [ "Streets" ],
        "summary" : "Get streets for an address",
        "description" : "",
        "operationId" : "listStreetsByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "Address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StreetListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/districts/{districtKey}/streets/" : {
      "get" : {
        "tags" : [ "Streets" ],
        "summary" : "Get streets for a district",
        "description" : "",
        "operationId" : "listStreetsByDistrict",
        "parameters" : [ {
          "name" : "districtKey",
          "in" : "path",
          "description" : "District key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StreetListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/streets/{streetKey}" : {
      "get" : {
        "tags" : [ "Streets" ],
        "summary" : "Get street",
        "description" : "Returns street",
        "operationId" : "street",
        "parameters" : [ {
          "name" : "streetKey",
          "in" : "path",
          "description" : "Returns street for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StreetItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/streets/" : {
      "get" : {
        "tags" : [ "Streets" ],
        "summary" : "Get streets",
        "description" : "Returns streets",
        "operationId" : "streets",
        "parameters" : [ {
          "name" : "districtKey",
          "in" : "query",
          "description" : "Returns streets for provided district key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns street for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StreetListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/search/persons/" : {
      "get" : {
        "tags" : [ "Persons Search" ],
        "summary" : "Get persons",
        "description" : "Search for persons.  Requires at least one letter in query string to do search.",
        "operationId" : "personsSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "byType",
          "in" : "query",
          "description" : "Returns persons for provided type (F - Official person, L - Unofficial person, S - Organisation)",
          "required" : true,
          "type" : "string",
          "default" : "F",
          "enum" : [ "F", "L", "S" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "hasProperty",
          "in" : "query",
          "description" : "Filter out persons without a property (not filtered if false)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PersonSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/search/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres Search" ],
        "summary" : "Get cadastres",
        "description" : "Search for cadastres",
        "operationId" : "cadastresSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search<br />Example for cadastre '1201 10 3' - finds cadastres starting with provided official id (matrikkel id)",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/districts/" : {
      "get" : {
        "tags" : [ "Districts" ],
        "summary" : "Get districts related to a address",
        "description" : "",
        "operationId" : "listDistrictsByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "Address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DistrictListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/streets/{streetKey}/districts/" : {
      "get" : {
        "tags" : [ "Districts" ],
        "summary" : "Get districts related to a street",
        "description" : "",
        "operationId" : "listDistrictsByStreet",
        "parameters" : [ {
          "name" : "streetKey",
          "in" : "path",
          "description" : "Street key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DistrictListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/districts/{districtKey}" : {
      "get" : {
        "tags" : [ "Districts" ],
        "summary" : "Get district",
        "description" : "Returns district",
        "operationId" : "district",
        "parameters" : [ {
          "name" : "districtKey",
          "in" : "path",
          "description" : "Returns district for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DistrictItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/districts/" : {
      "get" : {
        "tags" : [ "Districts" ],
        "summary" : "Get districts",
        "description" : "Returns districts",
        "operationId" : "districts",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "query",
          "description" : "DEPRECATED. Returns districts for provided address id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns districts for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetKey",
          "in" : "query",
          "description" : "Returns districts for provided street key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DistrictListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/customerscore/" : {
      "get" : {
        "tags" : [ "Customer Scores" ],
        "summary" : "Get customerscore by person",
        "description" : "",
        "operationId" : "uniqueCustomerScoreByPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Official key<br />Example of official key for a person <official personal number> - length 11<br />Example of official id for organisation '948946645 S' - length 9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "yearsOfHistory",
          "in" : "query",
          "description" : "Only retrieve data for given number of years",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "focus",
          "in" : "query",
          "description" : "What to focus on",
          "required" : false,
          "type" : "string",
          "default" : "person",
          "enum" : [ "person", "object" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/creationofrights/{rightKey}" : {
      "get" : {
        "tags" : [ "Creation Of Rights" ],
        "summary" : "Get creation of right",
        "description" : "",
        "operationId" : "creationOfRight",
        "parameters" : [ {
          "name" : "rightKey",
          "in" : "path",
          "description" : "Creation of right key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Include details about this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeFormatted",
          "in" : "query",
          "description" : "Include formatted data for this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeRelatedRights",
          "in" : "query",
          "description" : "Include relatedRights for this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreationOfRightItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/documents/{documentKey}/creationofrights/" : {
      "get" : {
        "tags" : [ "Creation Of Rights" ],
        "summary" : "Get creation of rights by document key",
        "description" : "",
        "operationId" : "creationOfRightByDocument",
        "parameters" : [ {
          "name" : "documentKey",
          "in" : "path",
          "description" : "Document key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Include details about this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeFormatted",
          "in" : "query",
          "description" : "Include formatted data for this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeRelatedRights",
          "in" : "query",
          "description" : "Include relatedRights for this CreationOfRight",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreationOfRightItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cooperative/conveyances/{conveyanceKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get conveyance",
        "description" : "DEPRECATED: see Share Conveyances",
        "operationId" : "oldCoopConveyanceDeprecated",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareConveyanceItemResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cooperative/conveyances/" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get conveyances",
        "description" : "DEPRECATED: see Share Conveyances",
        "operationId" : "coopConveyancesDeprecated",
        "parameters" : [ {
          "name" : "pocId",
          "in" : "query",
          "description" : "Returns conveyances for provided poc id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "shareKey",
          "in" : "query",
          "description" : "Returns conveyances for provided share key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns conveyances having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "municipalities",
          "in" : "query",
          "description" : "Returns conveyances for provided list of municipality numbers",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/search/shares/" : {
      "get" : {
        "tags" : [ "Shares Search" ],
        "summary" : "Get shares",
        "description" : "Search for shares",
        "operationId" : "sharesSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search<br />Example for housing cooperative shares 'SMIBERG 7' - finds housing cooperative shares starting with provided name and share number",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cooperative/ownerships/{ownershipKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get ownership",
        "description" : "DEPRECATED: see Share Ownerships",
        "operationId" : "oldCoopOwnershipDeprecated",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareOwnershipItemResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cooperative/ownerships/" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get ownerships",
        "description" : "DEPRECATED: see Share Ownerships",
        "operationId" : "coopOwnershipsDeprecated",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "query",
          "description" : "Returns ownership for provided share key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "personKey",
          "in" : "query",
          "description" : "Returns ownership for provided person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns ownership having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/search/addresses/" : {
      "get" : {
        "tags" : [ "Addresses Search" ],
        "summary" : "Get addresses",
        "description" : "Search for addresses",
        "operationId" : "addressesSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetKey",
          "in" : "query",
          "description" : "Optional parameter to search addresses by street key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "exactAddressNumber",
          "in" : "query",
          "description" : "Optional parameter to  search only by exact address number (if not exact matches found, partial results will be returned)",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pocs/{pocKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres with conveyance related to the location(address or plot) of the provided POC(Point of Conveyance)",
        "description" : "",
        "operationId" : "listCadastresByPoc",
        "parameters" : [ {
          "name" : "pocKey",
          "in" : "path",
          "description" : "Poc key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns cadastres from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres related to a building",
        "description" : "",
        "operationId" : "listCadastresByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres related to a building change",
        "description" : "",
        "operationId" : "listCadastresByBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres related to an address",
        "description" : "",
        "operationId" : "listCadastresByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/streets/{streetKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres related to a street",
        "description" : "",
        "operationId" : "listCadastresByStreet",
        "parameters" : [ {
          "name" : "streetKey",
          "in" : "path",
          "description" : "Street key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/conveyances/{conveyanceKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres that are part of the conveyance",
        "description" : "",
        "operationId" : "listCadastresByConveyance",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "description" : "conveyance key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/ownedcadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres that are part of the conveyance",
        "description" : "",
        "operationId" : "listCadastresByOwningPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/singleheritages/{singleHeritageKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres related to a single heritage",
        "description" : "",
        "operationId" : "listCadastresBySingleHeritage",
        "parameters" : [ {
          "name" : "singleHeritageKey",
          "in" : "path",
          "description" : "singleHeritage key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/maincadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get main cadastres for a section",
        "description" : "",
        "operationId" : "listMainCadastresBySection",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre section key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/soilcontaminations/{soilContaminationKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for a soil contamination",
        "description" : "",
        "operationId" : "listCadastresBySoilcontamination",
        "parameters" : [ {
          "name" : "soilContaminationKey",
          "in" : "path",
          "description" : "Soil contamination key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/complaints/{complaintKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for a complaint",
        "description" : "",
        "operationId" : "listCadastresByComplaint",
        "parameters" : [ {
          "name" : "complaintKey",
          "in" : "path",
          "description" : "Complaint key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/sectionings/{sectioningKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for a sectioning",
        "description" : "",
        "operationId" : "listCadastresBySectioning",
        "parameters" : [ {
          "name" : "sectioningKey",
          "in" : "path",
          "description" : "Sectioning key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/plots/{plotKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for a plot",
        "description" : "",
        "operationId" : "listCadastresByPlot",
        "parameters" : [ {
          "name" : "plotKey",
          "in" : "path",
          "description" : "Plot key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/realtyestateunits/{realtyEstateUnitKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for a realty estate unit",
        "description" : "",
        "operationId" : "listCadastresByRealtyEstateUnit",
        "parameters" : [ {
          "name" : "realtyEstateUnitKey",
          "in" : "path",
          "description" : "Realty estate unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/affairs/{affairKey}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres for an affair",
        "description" : "",
        "operationId" : "listCadastresByAffair",
        "parameters" : [ {
          "name" : "affairKey",
          "in" : "path",
          "description" : "Affair key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roleInAffair",
          "in" : "query",
          "description" : "The cadastres role in provided affair",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{unitKey}/cadastre/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get the cadastre for a separately occupied unit",
        "description" : "",
        "operationId" : "uniqueCadastreByUnit",
        "parameters" : [ {
          "name" : "unitKey",
          "in" : "path",
          "description" : "Separately occupied unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/landlot/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get the land lot (cadastre) for a housing cooperative share",
        "description" : "",
        "operationId" : "uniqueLandLotForShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/ownerships/{ownershipKey}/ownedcadastre/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get the owned cadastre for an ownership",
        "description" : "",
        "operationId" : "uniqueCadastreOwnedByOwnership",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Ownership key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/ownerships/{ownershipKey}/owningcadastre/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get the owning cadastre for an ownership",
        "description" : "",
        "operationId" : "uniqueCadastreOwningByOwnership",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Ownership key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/positions/{x},{y},{inputDatum}/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres by position",
        "description" : "Returns cadastres at position",
        "operationId" : "cadastresByPosition",
        "parameters" : [ {
          "name" : "x",
          "in" : "path",
          "description" : "X/ easting",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "y",
          "in" : "path",
          "description" : "Y/ northing",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "inputDatum",
          "in" : "path",
          "description" : "Geodetic datum",
          "required" : true,
          "type" : "string",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Geodetic datum in response. If not provided the inputDatum will be the default.",
          "required" : false,
          "type" : "string",
          "default" : "null",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/sections/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get all sections for any given cadastre",
        "description" : "",
        "operationId" : "sectionsForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns cadastre for provided official id, only works for cadastres that can be sectioned<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastre",
        "description" : "Returns cadastre",
        "operationId" : "cadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns cadastre for provided official id<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/" : {
      "get" : {
        "tags" : [ "Cadastres" ],
        "summary" : "Get cadastres",
        "description" : "Returns cadastres",
        "operationId" : "cadastres",
        "parameters" : [ {
          "name" : "ownedByPersonKey",
          "in" : "query",
          "description" : "Returns cadastres owned by person for provided person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "DEPRECATED. Returns cadastres for provided address id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns cadastres for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "pocId",
          "in" : "query",
          "description" : "Returns cadastres for provided poc id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "conveyanceKey",
          "in" : "query",
          "description" : "Returns cadastres for provided conveyance key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns cadastres for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingChangeKey",
          "in" : "query",
          "description" : "Returns cadastres for provided building change key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "singleHeritageKey",
          "in" : "query",
          "description" : "Returns cadastres for provided single heritage key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "soilContaminationId",
          "in" : "query",
          "description" : "Returns cadastres for provided soil contamination id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "complaintKey",
          "in" : "query",
          "description" : "Returns cadastres for provided complaint key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "sectioningId",
          "in" : "query",
          "description" : "Returns cadastres for provided sectioning id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "plotKey",
          "in" : "query",
          "description" : "Returns cadastres for provided plot key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "realtyEstateUnitKey",
          "in" : "query",
          "description" : "Returns cadastres for provided realty estate unit key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "affairKey",
          "in" : "query",
          "description" : "Returns cadastres for provided affair key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetKey",
          "in" : "query",
          "description" : "Returns cadastres for provided street key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "mainCadastresBySectionKey",
          "in" : "query",
          "description" : "Returns main-cadastres for the provided cadastre-section key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "roleInAffair",
          "in" : "query",
          "description" : "Returns cadastres for specified role who participated in provided affair",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns cadastres from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/validation/" : {
      "get" : {
        "tags" : [ "Validate Cadastre Land Registry" ],
        "summary" : "Validate the cadastre",
        "description" : "",
        "operationId" : "validateCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeInfo",
          "in" : "query",
          "description" : "Include info messages like previous cadastre",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ValidateCadastreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cooperative/housingvalues/{shareKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get housing value for a share",
        "description" : "DEPRECATED: see Share Housing Values",
        "operationId" : "getHousingValueForShareDeprecated",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareHousingValueItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/affairs/" : {
      "get" : {
        "tags" : [ "Affairs" ],
        "summary" : "Get affairs for a cadastre",
        "description" : "",
        "operationId" : "listAffairsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AffairListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/affairs/{affairKey}" : {
      "get" : {
        "tags" : [ "Affairs" ],
        "summary" : "Get affair",
        "description" : "Returns affair",
        "operationId" : "affair",
        "parameters" : [ {
          "name" : "affairKey",
          "in" : "path",
          "description" : "Returns affair for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AffairItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/affairs/" : {
      "get" : {
        "tags" : [ "Affairs" ],
        "summary" : "Get affairs",
        "description" : "Returns affairs",
        "operationId" : "affairs",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns affairs for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AffairListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/coopinternals/{coopInternalKey}" : {
      "get" : {
        "tags" : [ "Coop Internals" ],
        "summary" : "Get coop internal",
        "description" : "Returns coop internal - Internal index-data for housing cooperative holders",
        "operationId" : "coopinternal",
        "parameters" : [ {
          "name" : "coopInternalKey",
          "in" : "path",
          "description" : "Returns coop internal for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CoopInternalItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/coopinternals/" : {
      "get" : {
        "tags" : [ "Coop Internals" ],
        "summary" : "Get coop internals",
        "description" : "Returns coop internals - Internal index-data for housing cooperative holders",
        "operationId" : "coopinternals",
        "parameters" : [ {
          "name" : "ownerOfficialNumber",
          "in" : "query",
          "description" : "Returns coop internals related to an owner with the provided official number (personalNumber or organizationNumber)",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "ownerKey",
          "in" : "query",
          "description" : "Returns coop internals related to an owner with provided internal person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cooperativeKey",
          "in" : "query",
          "description" : "Returns coop internals related to the cooperative holder with the provided key (organizationNumber)",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CoopInternalListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/singleheritages/" : {
      "get" : {
        "tags" : [ "Single Heritages" ],
        "summary" : "Get single heritages related to a cadastre",
        "description" : "",
        "operationId" : "listSingleHeritageByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SingleHeritageListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/singleheritages/" : {
      "get" : {
        "tags" : [ "Single Heritages" ],
        "summary" : "Get single heritages related to a building",
        "description" : "",
        "operationId" : "listSingleHeritageByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SingleHeritageListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/singleheritages/{singleHeritageKey}" : {
      "get" : {
        "tags" : [ "Single Heritages" ],
        "summary" : "Get single heritage",
        "description" : "Returns single heritage",
        "operationId" : "singleheritage",
        "parameters" : [ {
          "name" : "singleHeritageKey",
          "in" : "path",
          "description" : "Returns single heritage for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SingleHeritageItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/singleheritages/" : {
      "get" : {
        "tags" : [ "Single Heritages" ],
        "summary" : "Get single heritages",
        "description" : "Returns single heritages",
        "operationId" : "singleheritages",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns single heritages for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns single heritages for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SingleHeritageListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/municipalities/{municipalityKey}" : {
      "get" : {
        "tags" : [ "Municipalities" ],
        "summary" : "Get municipality",
        "description" : "Returns municipality",
        "operationId" : "municipality",
        "parameters" : [ {
          "name" : "municipalityKey",
          "in" : "path",
          "description" : "Returns municipality for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MunicipalityItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/municipalities/" : {
      "get" : {
        "tags" : [ "Municipalities" ],
        "summary" : "Get municipalities",
        "description" : "Returns municipalities",
        "operationId" : "municipalities",
        "parameters" : [ {
          "name" : "municipalityName",
          "in" : "query",
          "description" : "Returns municipalities for provided region name",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "regionNumber",
          "in" : "query",
          "description" : "Returns municipalities for provided region number",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MunicipalityListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/oldcadastre/{cadastreKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Old Cadastre PDF ByCadastre",
        "description" : "",
        "operationId" : "getOldCadastrePDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/historicaltitlepdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get historical title for Share PDF by share",
        "description" : "",
        "operationId" : "getHistoricalTitleSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/historicalmortgagepdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get historical mortgage for Share PDF by share",
        "description" : "",
        "operationId" : "getHistoricalMortgageSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/historicalshareinfopdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get historical share info PDF by share",
        "description" : "",
        "operationId" : "getHistoricalShareInfoPDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/coordinates/" : {
      "get" : {
        "tags" : [ "Coordinates" ],
        "summary" : "Get coordinates for cadastre",
        "description" : "Returns coordinates for a given cadastre",
        "operationId" : "coordinatesForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns cadastre for provided official id<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeInteriors",
          "in" : "query",
          "description" : "Include interiors",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Return file format",
          "required" : false,
          "type" : "string",
          "default" : "KOF"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/homeequities/{personKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get home equity",
        "description" : "DEPRECATED: see Home Equities",
        "operationId" : "homeequitypersonDeprecated",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Official key<br />Example of official key for a person <official personal number> - length 11<br />Example of official id for organisation '948946645 S' - length 9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HomeEquityItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cooperative/objectscores/{shareKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get object score for a share",
        "description" : "DEPRECATED: see Share Scores",
        "operationId" : "getDeprecated",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Returns share for provided official id<br />Example of official id for housing cooperative share '948946645-2'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns share score having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/property/ownerships/{ownershipKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get ownership",
        "description" : "DEPRECATED",
        "operationId" : "oldOwnershipDeprecated",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipItemResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/property/ownerships/" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get ownerships",
        "description" : "DEPRECATED: see Cadastre Ownerships",
        "operationId" : "propertyOwnershipsDeprecated",
        "parameters" : [ {
          "name" : "ownedByCadastreKey",
          "in" : "query",
          "description" : "Returns ownerships owned by provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "ownedCadastreKey",
          "in" : "query",
          "description" : "Returns ownerships for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "personKey",
          "in" : "query",
          "description" : "Returns ownerships for provided person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/property/conveyances/{conveyanceKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get conveyance",
        "description" : "DEPRECATED: see Cadastre Conveyances",
        "operationId" : "oldConveyanceDeprecated",
        "parameters" : [ {
          "name" : "conveyanceKey",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreConveyanceItemResponse"
            }
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/property/conveyances/" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get conveyances",
        "description" : "DEPRECATED: see Cadastre Conveyances",
        "operationId" : "propertyConveyancesDeprecated",
        "parameters" : [ {
          "name" : "pocId",
          "in" : "query",
          "description" : "Returns conveyances for provided poc id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns conveyances for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "municipalities",
          "in" : "query",
          "description" : "Returns conveyances for provided list of municipality numbers",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns conveyances for a cadastre with max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "freeMarketOnly",
          "in" : "query",
          "description" : "Returns conveyances from free market only",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "sortByDateDescending",
          "in" : "query",
          "description" : "Sort results by date in descending order",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreConveyanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/customerscores/{personKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get customerscore",
        "description" : "DEPRECATED: see Customer Scores",
        "operationId" : "customerscorepersonDeprecated",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Official key<br />Example of official key for a person <official personal number> - length 11<br />Example of official id for organisation '948946645 S' - length 9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/shares/{shareKey}/titlepdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get title for Share PDF by share",
        "description" : "",
        "operationId" : "getTitleSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/mortgagepdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get mortgage for Share PDF by share",
        "description" : "",
        "operationId" : "getMortgageSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/shareinfopdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get share info PDF by share",
        "description" : "",
        "operationId" : "getShareInfoPDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/creationofrights/{shareRightKey}/pdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get CreationOfRight for share PDF by rightKey",
        "description" : "",
        "operationId" : "getPDFByShareCreationOfRight",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareRightKey",
          "in" : "path",
          "description" : "Right key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/creationofrights/{cadastreRightKey}/pdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get CreationOfRight for cadastre PDF by rightKey",
        "description" : "",
        "operationId" : "getPDFByCadastreCreationOfRight",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreRightKey",
          "in" : "path",
          "description" : "Right key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/homeequity/" : {
      "get" : {
        "tags" : [ "Home Equities" ],
        "summary" : "Get home equity by person",
        "description" : "",
        "operationId" : "uniqueEquititesByPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Official key<br />Example of official key for a person <official personal number> - length 11<br />Example of official id for organisation '948946645 S' - length 9",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HomeEquityItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/buildings/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get buildings for a cadastre",
        "description" : "",
        "operationId" : "listBuildingsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "includeSections",
          "in" : "query",
          "description" : "Include sections",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/buildings/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get buildings for an address",
        "description" : "",
        "operationId" : "listBuildingsByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "Address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/singleheritages/{singleHeritageKey}/buildings/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get buildings for a single heritage",
        "description" : "",
        "operationId" : "listBuildingsBySingleHeritage",
        "parameters" : [ {
          "name" : "singleHeritageKey",
          "in" : "path",
          "description" : "Single heritage key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{unitKey}/building/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get the building for a separately occupied unit",
        "description" : "",
        "operationId" : "uniqueBuildingByUnit",
        "parameters" : [ {
          "name" : "unitKey",
          "in" : "path",
          "description" : "Separately occupied unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/culturalheritages/{culturalHeritageKey}/buildings/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get buildings for a cultural heritage",
        "description" : "",
        "operationId" : "listBuildingsByCulturalHeritage",
        "parameters" : [ {
          "name" : "culturalHeritageKey",
          "in" : "path",
          "description" : "Cultural heritage key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/building/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get the building for a building change",
        "description" : "",
        "operationId" : "uniqueBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "Building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get building",
        "description" : "Returns building",
        "operationId" : "building",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Returns building for provided official id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/" : {
      "get" : {
        "tags" : [ "Buildings" ],
        "summary" : "Get buildings",
        "description" : "Returns buildings",
        "operationId" : "buildings",
        "parameters" : [ {
          "name" : "singleHeritageKey",
          "in" : "query",
          "description" : "Returns buildings for provided single heritage key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns buildings for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "culturalHeritageKey",
          "in" : "query",
          "description" : "Returns buildings for provided cultural heritage key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "unitKey",
          "in" : "query",
          "description" : "Returns buildings for provided separately occupied unit key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "DEPRECATED. Returns buildings for provided address id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns buildings for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "floorId",
          "in" : "query",
          "description" : "Returns buildings for provided floor id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/BuildingListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/floors/" : {
      "get" : {
        "tags" : [ "Floors" ],
        "summary" : "Get floors related to a building",
        "description" : "",
        "operationId" : "listFloorsByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FloorListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/floors/" : {
      "get" : {
        "tags" : [ "Floors" ],
        "summary" : "Get floors related to a buildingchange",
        "description" : "",
        "operationId" : "listFloorsByBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "Building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FloorListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/floors/{floorKey}" : {
      "get" : {
        "tags" : [ "Floors" ],
        "summary" : "Get floor",
        "description" : "Returns floor",
        "operationId" : "floor",
        "parameters" : [ {
          "name" : "floorKey",
          "in" : "path",
          "description" : "Returns floor for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FloorItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/floors/" : {
      "get" : {
        "tags" : [ "Floors" ],
        "summary" : "Get floors",
        "description" : "Returns floors",
        "operationId" : "floors",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns floors for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingChangeKey",
          "in" : "query",
          "description" : "Returns floors for provided building change key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FloorListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/realtyestateunits/" : {
      "get" : {
        "tags" : [ "Realty Estate Units" ],
        "summary" : "Get realty estate units for a cadastre",
        "description" : "",
        "operationId" : "listEstateByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RealtyEstateUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/realtyestateunits/{realtyEstateUnitKey}" : {
      "get" : {
        "tags" : [ "Realty Estate Units" ],
        "summary" : "Get realty estate unit",
        "description" : "Returns realty estate unit",
        "operationId" : "realtyestateunit",
        "parameters" : [ {
          "name" : "realtyEstateUnitKey",
          "in" : "path",
          "description" : "Returns realty estate unit for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RealtyEstateUnitItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/realtyestateunits/" : {
      "get" : {
        "tags" : [ "Realty Estate Units" ],
        "summary" : "Get realty estate unit",
        "description" : "Returns realty estate unit",
        "operationId" : "realtyestateunits",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns realty estate units for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RealtyEstateUnitItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/search/housingcooperatives/" : {
      "get" : {
        "tags" : [ "Housing Cooperatives Search" ],
        "summary" : "Get housing cooperatives",
        "description" : "Search for housing cooperatives",
        "operationId" : "housingcooperativesSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search<br />Search using housing cooperative name or organization number",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HousingCooperativeSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v2/shares/{shareKey}/objectscore/" : {
      "get" : {
        "tags" : [ "Share Scores" ],
        "summary" : "Get object score for a share",
        "description" : "",
        "operationId" : "uniqueScoreByShareV2",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Returns share score for provided official id<br />Example of official id for share '948946645-2'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns share score having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareScoreItemResponseV2"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/objectscore/" : {
      "get" : {
        "tags" : [ "Cadastre Scores" ],
        "summary" : "Get object score for a cadastre",
        "description" : "",
        "operationId" : "uniqueScoreByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Returns cadastre score for provided official id<br />Example of official id for cadastre '1201-10-650-0-0'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CustomerScoreItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/unregisteredownershipsowningthiscadastre/" : {
      "get" : {
        "tags" : [ "Unregistered Ownerships" ],
        "summary" : "Get unregistered ownerships by cadastre",
        "description" : "",
        "operationId" : "listOwnedCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnregisteredOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/unregisteredownershipsownedbythiscadastre/" : {
      "get" : {
        "tags" : [ "Unregistered Ownerships" ],
        "summary" : "Get unregistered ownerships owned by this cadastre",
        "description" : "",
        "operationId" : "listOwnedByThisCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Owned by this cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnregisteredOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/unregisteredcadastreownerships/" : {
      "get" : {
        "tags" : [ "Unregistered Ownerships" ],
        "summary" : "Get unregistered ownerships by person",
        "description" : "",
        "operationId" : "listUnregisteredByPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "callback",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnregisteredOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/unregisteredownerships/{unregisteredOwnershipKey}" : {
      "get" : {
        "tags" : [ "Unregistered Ownerships" ],
        "summary" : "Get unregistered ownership",
        "description" : "Returns unregistered ownership",
        "operationId" : "unregisteredownership",
        "parameters" : [ {
          "name" : "unregisteredOwnershipKey",
          "in" : "path",
          "description" : "Returns unregistered ownership for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnregisteredOwnershipItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/unregisteredownerships/" : {
      "get" : {
        "tags" : [ "Unregistered Ownerships" ],
        "summary" : "Get unregistered ownerships",
        "description" : "Returns unregistered ownerships",
        "operationId" : "unregisteredownerships",
        "parameters" : [ {
          "name" : "ownedByCadastreKey",
          "in" : "query",
          "description" : "Returns unregistered ownerships owned by provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "ownedCadastreKey",
          "in" : "query",
          "description" : "Returns unregistered ownerships for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "personKey",
          "in" : "query",
          "description" : "Returns unregistered ownerships for provided person key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Returns unregistered ownerships having the max cadastre level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UnregisteredOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/search/places/" : {
      "get" : {
        "tags" : [ "Places Search" ],
        "summary" : "Get places",
        "description" : "Search for places",
        "operationId" : "placesSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "Free text search",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlaceSearchListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/creationofrights/" : {
      "get" : {
        "tags" : [ "Creation Of Rights" ],
        "summary" : "Get creation of rights for a person",
        "description" : "",
        "operationId" : "rightsForPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "What group of rights to filter on",
          "required" : true,
          "type" : "string",
          "enum" : [ "hjemmel", "heftelser" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreationOfRightsListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/historicalcadastre/{cadastreKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Historical Cadastre PDF by cadastre",
        "description" : "",
        "operationId" : "getHistoricalCadastrePDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/historicalshare/{shareKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Historical Share PDF by share",
        "description" : "",
        "operationId" : "getHistoricalSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/landregistry/" : {
      "get" : {
        "tags" : [ "Cadastre Land Registry" ],
        "summary" : "Generates a Land Registry report for the cadastre",
        "description" : "",
        "operationId" : "landRegistryForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "parts",
          "in" : "query",
          "description" : "Comma separated list of which parts of the Land Registy report should be included. If parameter is not supplied, a complete report will be generated",
          "required" : true,
          "type" : "string",
          "default" : "all",
          "enum" : [ "monetary_encumbrances", "easements", "titles", "landdata", "privileges", "leasehold_agreements", "encumbrances", "all" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights in report",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreLandRegistryItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/creationofrights/" : {
      "get" : {
        "tags" : [ "Cadastre Rights" ],
        "summary" : "Get creation of rights related to a cadastre",
        "description" : "",
        "operationId" : "rightsForCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "What group of rights to filter on",
          "required" : true,
          "type" : "string",
          "enum" : [ "leieavtaler", "grunndata", "heftelser", "hjemmel", "paategning_paa_eiere", "uraadigheter", "frivillig_pant", "tvangsforretninger", "rettigheter", "festeavtaler", "servitutter" ]
        }, {
          "name" : "onlyMaxCadastreLevel",
          "in" : "query",
          "description" : "Filter on the share's max cadastre-level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeDetails",
          "in" : "query",
          "description" : "Include details for each right",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeFormatted",
          "in" : "query",
          "description" : "Include formatted data for each right",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "includeRelatedRights",
          "in" : "query",
          "description" : "Include relatedRights for each right",
          "required" : true,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RightsItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/housingcooperatives/{housingCooperativeKey}" : {
      "get" : {
        "tags" : [ "Housing Cooperatives" ],
        "summary" : "Get housing cooperative",
        "description" : "Search for housing cooperative",
        "operationId" : "housingcooperative",
        "parameters" : [ {
          "name" : "housingCooperativeKey",
          "in" : "path",
          "description" : "Returns housing cooperative for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/HousingCooperativeListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/sectionings/" : {
      "get" : {
        "tags" : [ "Sectionings" ],
        "summary" : "Get sectionings for a cadastre",
        "description" : "",
        "operationId" : "listSectioningsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SectioningListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/sectionings/{sectioningKey}" : {
      "get" : {
        "tags" : [ "Sectionings" ],
        "summary" : "Get sectioning",
        "description" : "Returns sectioning",
        "operationId" : "sectioning",
        "parameters" : [ {
          "name" : "sectioningKey",
          "in" : "path",
          "description" : "Returns sectioning for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SectioningItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/sectionings/" : {
      "get" : {
        "tags" : [ "Sectionings" ],
        "summary" : "Get sectioning",
        "description" : "Returns sectioning",
        "operationId" : "sectionings",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns sectionings for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SectioningItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/landregistry/" : {
      "get" : {
        "tags" : [ "Share Land Registry" ],
        "summary" : "Generates a Land Registry report for the share",
        "description" : "",
        "operationId" : "landRegistryForShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "parts",
          "in" : "query",
          "description" : "Comma separated list of which parts of the Land Registy report should be included.",
          "required" : false,
          "type" : "string",
          "enum" : [ "hjemmel", "heftelser", "andelsopplysninger" ]
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Filter on the state of the rights in report",
          "required" : false,
          "type" : "string",
          "default" : "active",
          "enum" : [ "active", "historical", "active_and_historical" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareLandRegistryItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastre/documentcopyexistence/{cadastreDocumentKey}" : {
      "get" : {
        "tags" : [ "Cadastre Document Copy Existence" ],
        "summary" : "Get document copy existence",
        "description" : "Returns document copy existence for property",
        "operationId" : "documentcopyexistence",
        "parameters" : [ {
          "name" : "cadastreDocumentKey",
          "in" : "path",
          "description" : "Returns document copy existence for office number or municipality number - document year - document number '200-2010-650' or 'K200-2010-650'",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreDocumentCopyExistenceItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/simplemappdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Simple Technical PDF by cadastre",
        "description" : "",
        "operationId" : "getSimpleMapPDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/mappdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Technical PDF by cadastre",
        "description" : "",
        "operationId" : "getMapPDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/cadastre/{cadastreKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Cadastre PDF by cadastre",
        "description" : "",
        "operationId" : "getCadastrePDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/cadastrewithprivilegespdf/" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Cadastre PDF by cadastre with privileges",
        "description" : "",
        "operationId" : "getCadastrePDFByCadastreWithPrivileges",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/share/{shareKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Share PDF by share",
        "description" : "",
        "operationId" : "getSharePDFByShare",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/property/housingvalues/{cadastreKey}" : {
      "get" : {
        "tags" : [ "Deprecated" ],
        "summary" : "Get housing value for a cadastre",
        "description" : "DEPRECATED: see Cadastre Housing Values",
        "operationId" : "getHousingValueForCadastreDeprecated",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "roundEstimates",
          "in" : "query",
          "description" : "Round estimated value to nearest thousand",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CadastreHousingValueItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "deprecated" : true
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/soilcontaminations/" : {
      "get" : {
        "tags" : [ "Soil Contaminations" ],
        "summary" : "Get soil contamination items for a cadastre",
        "description" : "",
        "operationId" : "listContaminationsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SoilContaminationListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/soilcontaminations/{soilContaminationKey}" : {
      "get" : {
        "tags" : [ "Soil Contaminations" ],
        "summary" : "Get soil contamination",
        "description" : "Returns soil contamination",
        "operationId" : "soilcontamination",
        "parameters" : [ {
          "name" : "soilContaminationKey",
          "in" : "path",
          "description" : "Returns soil contamination for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SoilContaminationItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/soilcontaminations/" : {
      "get" : {
        "tags" : [ "Soil Contaminations" ],
        "summary" : "Get soil contamination items",
        "description" : "Returns soil contamination items",
        "operationId" : "soilcontaminations",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns soil contamination items for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SoilContaminationListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/documentcopyexistence/{shareDocumentKey}" : {
      "get" : {
        "tags" : [ "Share Document Copy Existence" ],
        "summary" : "Get document copy existences",
        "description" : "Returns document copy existences",
        "operationId" : "documentcopyexistences",
        "parameters" : [ {
          "name" : "shareDocumentKey",
          "in" : "path",
          "description" : "Returns document copy existence for provided document year and document number (document year - document number) ",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareDocumentCopyExistenceItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/plots/" : {
      "get" : {
        "tags" : [ "Plots" ],
        "summary" : "Get plots for a cadastre",
        "description" : "",
        "operationId" : "listPlotsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlotListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/plots/{plotKey}" : {
      "get" : {
        "tags" : [ "Plots" ],
        "summary" : "Get plot",
        "description" : "Returns plot",
        "operationId" : "plot",
        "parameters" : [ {
          "name" : "plotKey",
          "in" : "path",
          "description" : "Returns plot for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlotItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/plots/" : {
      "get" : {
        "tags" : [ "Plots" ],
        "summary" : "Get plot",
        "description" : "Returns plot",
        "operationId" : "plots",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns plots for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PlotItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/technical/{cadastreKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Technical PDF by cadastre",
        "description" : "",
        "operationId" : "getTechnicalPDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/pdfs/simpletechnical/{cadastreKey}" : {
      "get" : {
        "tags" : [ "PDF Orders" ],
        "summary" : "Get Simple Technical PDF by cadastre",
        "description" : "",
        "operationId" : "getSimpleTechnicalPDFByCadastre",
        "produces" : [ "application/pdf" ],
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "infolandOrderKey",
          "in" : "query",
          "description" : "Infoland order key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses related to a cadastre",
        "description" : "",
        "operationId" : "listAddressesByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses related to a building",
        "description" : "",
        "operationId" : "listAddressesByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses related to a building change",
        "description" : "",
        "operationId" : "listAddressesByBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "Building Change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/streets/{streetKey}/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses in a street",
        "description" : "",
        "operationId" : "listAddressesByStreet",
        "parameters" : [ {
          "name" : "streetKey",
          "in" : "path",
          "description" : "Street key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/districts/{districtKey}/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses in a district",
        "description" : "",
        "operationId" : "listAddressesByDistrict",
        "parameters" : [ {
          "name" : "districtKey",
          "in" : "path",
          "description" : "Street key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/positions/{x},{y},{inputDatum}/nearbyaddresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses near position",
        "description" : "The list is sorted by distance",
        "operationId" : "addressesNearestPosition",
        "parameters" : [ {
          "name" : "x",
          "in" : "path",
          "description" : "X/ easting",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "y",
          "in" : "path",
          "description" : "Y/ northing",
          "required" : true,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "inputDatum",
          "in" : "path",
          "description" : "The positions geodetic datum",
          "required" : true,
          "type" : "string",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "maxDistance",
          "in" : "query",
          "description" : "Max distance",
          "required" : false,
          "type" : "integer",
          "default" : 50,
          "format" : "int32"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Geodetic datum in response. If not provided the inputDatum will be the default.",
          "required" : false,
          "type" : "string",
          "default" : "null",
          "enum" : [ "UTM33", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{unitKey}/address/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get the address for a separately occupied unit",
        "description" : "The address for the unit is not always present",
        "operationId" : "uniqueByUnit",
        "parameters" : [ {
          "name" : "unitKey",
          "in" : "path",
          "description" : "Separately occupied unit key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/address/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get the address for a housing cooperative share",
        "description" : "The address for the share is not always present",
        "operationId" : "uniqueByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Housing cooperative share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/presentationaddress/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get the presentation address for a cadastre",
        "description" : "The presentation address for the cadastre is not always present",
        "operationId" : "presentationAddressByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressId}" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get a unique address",
        "description" : "Returns address",
        "operationId" : "unique",
        "parameters" : [ {
          "name" : "addressId",
          "in" : "path",
          "description" : "Returns address for provided official id or database id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "searchByDatabaseId",
          "in" : "query",
          "description" : "The provided id is interpreted as a database id",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/" : {
      "get" : {
        "tags" : [ "Addresses" ],
        "summary" : "Get addresses by other keys",
        "description" : "Returns addresses",
        "operationId" : "addresses",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns addresses for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "shareKey",
          "in" : "query",
          "description" : "Returns addresses for provided share key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns addresses for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingChangeKey",
          "in" : "query",
          "description" : "Returns addresses for provided building change key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "unitKey",
          "in" : "query",
          "description" : "Returns addresses for provided separately occupied unit key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "districtKey",
          "in" : "query",
          "description" : "Returns addresses for provided district key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetKey",
          "in" : "query",
          "description" : "Returns addresses for provided street key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetNumber",
          "in" : "query",
          "description" : "Returns addresses for provided street number",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "streetName",
          "in" : "query",
          "description" : "Returns addresses for provided street name",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "positions",
          "in" : "query",
          "description" : "Include positions in the result",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "datum",
          "in" : "query",
          "description" : "Set the geodetic datum",
          "required" : false,
          "type" : "string",
          "default" : "UTM",
          "enum" : [ "UTM", "WGS84" ]
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddressListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/ownershipsowningthisshare/" : {
      "get" : {
        "tags" : [ "Share Ownerships" ],
        "summary" : "Get ownerships by share",
        "description" : "",
        "operationId" : "listByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/persons/{personKey}/shareownerships/" : {
      "get" : {
        "tags" : [ "Share Ownerships" ],
        "summary" : "Get ownerships by person",
        "description" : "",
        "operationId" : "listByPerson",
        "parameters" : [ {
          "name" : "personKey",
          "in" : "path",
          "description" : "Person key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "onlyMaxShareLevel",
          "in" : "query",
          "description" : "Returns ownerships having the max share level",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareOwnershipListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/share/ownerships/{ownershipKey}" : {
      "get" : {
        "tags" : [ "Share Ownerships" ],
        "summary" : "Get ownership",
        "description" : "Returns ownership",
        "operationId" : "coopOwnership",
        "parameters" : [ {
          "name" : "ownershipKey",
          "in" : "path",
          "description" : "Returns ownership for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ShareOwnershipItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/systemping" : {
      "get" : {
        "tags" : [ "Systemping" ],
        "operationId" : "status",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "headers" : { },
            "schema" : {
              "$ref" : "#/definitions/Result"
            }
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/complaints/" : {
      "get" : {
        "tags" : [ "Complaints" ],
        "summary" : "Get complaints for a cadastre",
        "description" : "",
        "operationId" : "complaintsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComplaintListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/complaints/{complaintKey}" : {
      "get" : {
        "tags" : [ "Complaints" ],
        "summary" : "Get complaint",
        "description" : "Returns complaint",
        "operationId" : "complaint",
        "parameters" : [ {
          "name" : "complaintKey",
          "in" : "path",
          "description" : "Returns complaint for provided official id",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComplaintItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/complaints/" : {
      "get" : {
        "tags" : [ "Complaints" ],
        "summary" : "Get complaints",
        "description" : "Returns complaints",
        "operationId" : "complaints",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns complaints for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ComplaintListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/dictionary/" : {
      "get" : {
        "tags" : [ "Dictionary" ],
        "summary" : "Get dictionary",
        "description" : "Returns dictionary",
        "operationId" : "dictionary",
        "parameters" : [ {
          "name" : "languageFrom",
          "in" : "query",
          "description" : "Select the language to be used as keys in the dictionary map",
          "required" : true,
          "type" : "string",
          "default" : "null"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Dictionary"
            }
          }
        }
      }
    },
    "/realty/v1/cadastres/{cadastreKey}/separatelyoccupiedunits/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied units for a cadastre",
        "description" : "",
        "operationId" : "listUnitsByCadastre",
        "parameters" : [ {
          "name" : "cadastreKey",
          "in" : "path",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildings/{buildingKey}/separatelyoccupiedunits/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied units for a building",
        "description" : "",
        "operationId" : "listUnitsByBuilding",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "path",
          "description" : "Building key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Cadastre key",
          "required" : true,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/buildingchanges/{buildingChangeKey}/separatelyoccupiedunits/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get the building for a building change",
        "description" : "",
        "operationId" : "listUnitsByBuildingChange",
        "parameters" : [ {
          "name" : "buildingChangeKey",
          "in" : "path",
          "description" : "Building change key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/addresses/{addressKey}/separatelyoccupiedunits/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied units for an address",
        "description" : "",
        "operationId" : "listUnitsByAddress",
        "parameters" : [ {
          "name" : "addressKey",
          "in" : "path",
          "description" : "Address key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/shares/{shareKey}/separatelyoccupiedunit/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied unit for a share",
        "description" : "",
        "operationId" : "uniqueUnitByShare",
        "parameters" : [ {
          "name" : "shareKey",
          "in" : "path",
          "description" : "Share key",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/{separatelyOccupiedUnitKey}" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied unit",
        "description" : "Returns separately occupied unit",
        "operationId" : "separatelyoccupiedunit",
        "parameters" : [ {
          "name" : "separatelyOccupiedUnitKey",
          "in" : "path",
          "description" : "Returns separately occupied unit for provided official id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitItemResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    },
    "/realty/v1/separatelyoccupiedunits/" : {
      "get" : {
        "tags" : [ "Separately Occupied Units" ],
        "summary" : "Get separately occupied units",
        "description" : "Returns separately occupied units",
        "operationId" : "separatelyoccupiedunits",
        "parameters" : [ {
          "name" : "buildingKey",
          "in" : "query",
          "description" : "Returns separately occupied units for provided building key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "buildingChangeKey",
          "in" : "query",
          "description" : "Returns separately occupied units for provided building change key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "cadastreKey",
          "in" : "query",
          "description" : "Returns separately occupied units for provided cadastre key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "shareKey",
          "in" : "query",
          "description" : "Returns separately occupied units for provided share key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressId",
          "in" : "query",
          "description" : "DEPRECATED. Returns separately occupied units for provided address id",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "addressKey",
          "in" : "query",
          "description" : "Returns separately occupied units for provided address key",
          "required" : false,
          "type" : "string",
          "default" : "null"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Start from page",
          "required" : false,
          "type" : "integer",
          "default" : 1,
          "format" : "int32"
        }, {
          "name" : "pagesize",
          "in" : "query",
          "description" : "Number of rows per page",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "Authorization",
          "in" : "header",
          "description" : "Token for logged in user.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SeparatelyOccupiedUnitListResponse"
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "CadastreOffice" : {
      "type" : "object",
      "required" : [ "documentIdent" ],
      "properties" : {
        "documentIdent" : {
          "$ref" : "#/definitions/DocumentIdent"
        }
      }
    },
    "CadastreOfficeItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreOffice"
        }
      }
    },
    "DocumentIdent" : {
      "type" : "object",
      "required" : [ "documentNumber", "documentYear", "office" ],
      "properties" : {
        "documentYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The year this document was registered"
        },
        "documentNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The serial number of this document"
        },
        "office" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The office number of this document"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "returnCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A predefined error code number, uses HTTP error codes",
          "minimum" : 400,
          "maximum" : 505
        },
        "message" : {
          "type" : "string",
          "description" : "Describes the error situation in detail"
        }
      }
    },
    "Info" : {
      "type" : "object",
      "properties" : {
        "realtyCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A predefined info code",
          "minimum" : 100,
          "maximum" : 999
        },
        "message" : {
          "type" : "string",
          "description" : "Describes the info in detail"
        },
        "links" : {
          "type" : "array",
          "description" : "A list of links to objects referenced in the Info message. It could be one or more cadastres",
          "items" : {
            "$ref" : "#/definitions/Link"
          }
        }
      }
    },
    "Link" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "AddressIdent" : {
      "type" : "object",
      "required" : [ "municipalityNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cadastral-address: A municipality number, the geographically largest part of a cadastral. Street-address: The municipality the street is within. If a street crosses the municipality border it becomes a new street."
        },
        "cadastralUnitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A cadastral unit represents the area of a farm. Filled out for Cadastral Addresses"
        },
        "unitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A unit represents a separate part of the farm area. Filled out for Cadastral Addresses"
        },
        "leaseholdUnitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A leasehold is a contract for the lease of some land. Filled out for Cadastral Addresses"
        },
        "subNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A subnumbering is a serial for separating cadastrals. Filled out for Cadastral Addresses"
        },
        "streetNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The street number. Filled out for Street Addresses"
        },
        "addressNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The address number within a street.  Filled out for Street Addresses"
        },
        "letter" : {
          "type" : "string",
          "description" : "The address letter for an address number. Filled out for Street Addresses"
        }
      }
    },
    "AddressItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ApiDate" : {
      "type" : "object",
      "required" : [ "ddmmyyyy", "isoDateTime", "timestamp" ],
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date as yyyy-MM-dd"
        },
        "ddmmyyyy" : {
          "type" : "string",
          "description" : "The date as dd/MM-yyyy"
        },
        "isoDateTime" : {
          "type" : "string",
          "description" : "Datetime formatted following ISO-8601 with offset formatting rules"
        }
      }
    },
    "CadastralAddressIdent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AddressIdent"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "CadastreConveyanceListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreOwnershipListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "Code" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The code"
        },
        "text" : {
          "type" : "string",
          "description" : "The code description"
        },
        "active" : {
          "type" : "boolean",
          "description" : "true if the code is active, false if it is historical"
        },
        "links" : {
          "$ref" : "#/definitions/CodeLinks"
        }
      }
    },
    "CodeFieldItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CodeLinks" : {
      "type" : "object",
      "properties" : {
        "codeField" : {
          "description" : "A link to the codefield with which the code is associated",
          "$ref" : "#/definitions/CodeFieldItemLink"
        }
      }
    },
    "CustomerScoreItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "GeoJSONCrs" : {
      "type" : "object",
      "required" : [ "properties", "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/GeoJSONProperties"
        }
      }
    },
    "GeoJSONFeature" : {
      "type" : "object",
      "required" : [ "bbox", "crs", "geometry", "properties", "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "geometry" : {
          "$ref" : "#/definitions/Geometry"
        },
        "crs" : {
          "$ref" : "#/definitions/GeoJSONCrs"
        },
        "bbox" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/GeoJSONProperties"
        }
      }
    },
    "GeoJSONObject" : {
      "type" : "object",
      "required" : [ "bbox", "crs", "properties", "type" ],
      "properties" : {
        "crs" : {
          "$ref" : "#/definitions/GeoJSONCrs"
        },
        "bbox" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/GeoJSONProperties"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "GeoJSONProperties" : {
      "type" : "object",
      "required" : [ "href", "id", "links", "name", "realtyType", "sourceOfPosition", "title", "type" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "href" : {
          "type" : "string"
        },
        "title" : {
          "type" : "string"
        },
        "sourceOfPosition" : {
          "type" : "string"
        },
        "realtyType" : {
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/POCLinks"
        }
      }
    },
    "Geometry" : {
      "type" : "object",
      "required" : [ "bbox", "crs", "properties", "type" ],
      "properties" : {
        "crs" : {
          "$ref" : "#/definitions/GeoJSONCrs"
        },
        "bbox" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/GeoJSONProperties"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "HomeEquityItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "Location" : {
      "type" : "object",
      "required" : [ "addressIdent", "addressKey", "alternativeAddress", "shortName", "sourceOfAddressName" ],
      "properties" : {
        "addressIdent" : {
          "description" : "The street address ident",
          "$ref" : "#/definitions/AddressIdent"
        },
        "addressKey" : {
          "type" : "string",
          "description" : "The street address key"
        },
        "street" : {
          "type" : "string",
          "description" : "The street name"
        },
        "addressNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The house number on the street"
        },
        "letter" : {
          "type" : "string",
          "description" : "The house letter"
        },
        "alternativeAddress" : {
          "type" : "string",
          "description" : "An alternate name for the address"
        },
        "shortName" : {
          "type" : "string",
          "description" : "A short name for the address, not unique"
        },
        "sourceOfAddressName" : {
          "description" : "Source of the address name",
          "$ref" : "#/definitions/Code"
        },
        "postalCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The postal code",
          "minimum" : 0,
          "maximum" : 9999
        },
        "postalPlace" : {
          "type" : "string",
          "description" : "The name of the district with this postal code"
        },
        "municipality" : {
          "description" : "Municipality",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "geojson" : {
          "description" : "DEPRECATED. The map coordinates of this location as GeoJSON",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        }
      }
    },
    "MunicipalityData" : {
      "type" : "object",
      "required" : [ "municipalityName", "municipalityNumber", "regionName", "regionNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality number"
        },
        "municipalityName" : {
          "type" : "string",
          "description" : "The municipality name"
        },
        "regionNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The region number"
        },
        "regionName" : {
          "type" : "string",
          "description" : "The region name"
        }
      }
    },
    "POCItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "POCLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "conveyancesOfCadastre", "conveyancesOfShare", "self", "shares" ],
      "properties" : {
        "self" : {
          "$ref" : "#/definitions/POCItemLink"
        },
        "conveyancesOfCadastre" : {
          "$ref" : "#/definitions/CadastreConveyanceListLink"
        },
        "cadastres" : {
          "$ref" : "#/definitions/CadastreListLink"
        },
        "conveyancesOfShare" : {
          "$ref" : "#/definitions/ShareConveyanceListLink"
        },
        "shares" : {
          "$ref" : "#/definitions/ShareListLink"
        }
      }
    },
    "Pagination" : {
      "type" : "object",
      "properties" : {
        "previous" : {
          "type" : "string",
          "description" : "The previous page"
        },
        "next" : {
          "type" : "string",
          "description" : "The next page"
        }
      }
    },
    "Person" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/PersonIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "An anonymous person id"
        },
        "birthday" : {
          "type" : "string",
          "description" : "DEPRECATED. The date of birth for this person"
        },
        "dateOfBirth" : {
          "description" : "The date of birth for this person",
          "$ref" : "#/definitions/ApiDate"
        },
        "organizationNumber" : {
          "type" : "string",
          "description" : "The organization number of this company"
        },
        "personalNumberType" : {
          "description" : "The personal number of this person",
          "$ref" : "#/definitions/Code"
        },
        "sex" : {
          "type" : "string",
          "description" : "The sex of this person"
        },
        "age" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The current age of the person"
        },
        "isNorwegianCitizen" : {
          "type" : "boolean",
          "description" : "If this person has Norwegian citizenship",
          "enum" : [ true, false ]
        },
        "personalNumber" : {
          "type" : "string",
          "description" : "The official personal number of this person"
        },
        "givenName" : {
          "type" : "string",
          "description" : "The first name of this person"
        },
        "middleName" : {
          "type" : "string",
          "description" : "The middle name of this person"
        },
        "familyName" : {
          "type" : "string",
          "description" : "The last name of this person"
        },
        "name" : {
          "type" : "string",
          "description" : "The combined name of this person"
        },
        "location" : {
          "description" : "A location connected to the person based on the living address",
          "$ref" : "#/definitions/Location"
        },
        "businessAddress" : {
          "type" : "string",
          "description" : "The address this organization has registered"
        },
        "postalAddress" : {
          "type" : "string",
          "description" : "The postal address of this person or organization"
        },
        "businessType" : {
          "description" : "The business type of this organization",
          "$ref" : "#/definitions/Code"
        },
        "industrialClassification" : {
          "type" : "array",
          "description" : "The industrial classification of this organization",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "numberMainUnit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of main unit of this organization"
        },
        "deletionDate" : {
          "description" : "The deletion date of this organization",
          "$ref" : "#/definitions/ApiDate"
        },
        "foreignAddress" : {
          "type" : "string",
          "description" : "The foreign address of this person or organization"
        },
        "dsfState" : {
          "description" : "The DSF state of this person",
          "$ref" : "#/definitions/Code"
        },
        "hasProperty" : {
          "type" : "boolean",
          "description" : "If this person has property"
        },
        "links" : {
          "$ref" : "#/definitions/PersonLinks"
        }
      }
    },
    "PersonIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "An anonymous id representing a person or organization"
        }
      }
    },
    "PersonItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "PersonLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "ownedCadastres" : {
          "description" : "The cadastres owned by this person",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "ownedShares" : {
          "description" : "The shares owned by this person",
          "$ref" : "#/definitions/ShareListLink"
        },
        "residence" : {
          "description" : "The place this person lives",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "cadastreOwnerships" : {
          "description" : "The person’s ownerships for owned properties",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "unregisteredCadastreOwnerships" : {
          "description" : "The person’s unregistered ownerships for owned properties",
          "$ref" : "#/definitions/UnregisteredOwnershipListLink"
        },
        "shareOwnerships" : {
          "description" : "The person’s ownerships for owned cooperatives",
          "$ref" : "#/definitions/ShareOwnershipListLink"
        },
        "customerScore" : {
          "description" : "Scoring of this person",
          "$ref" : "#/definitions/CustomerScoreItemLink"
        },
        "homeEquity" : {
          "description" : "The person’s homeequity",
          "$ref" : "#/definitions/HomeEquityItemLink"
        }
      }
    },
    "PersonListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ShareConveyanceListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareOwnershipListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "StreetAddressIdent" : {
      "allOf" : [ {
        "$ref" : "#/definitions/AddressIdent"
      }, {
        "type" : "object",
        "properties" : { }
      } ]
    },
    "UnregisteredOwnershipListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "PersonItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Person"
        }
      }
    },
    "ApiDateTime" : {
      "type" : "object",
      "required" : [ "ddmmyyyyHHmm", "isoDateTime", "timestamp" ],
      "properties" : {
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date as yyyy-MM-dd "
        },
        "ddmmyyyyHHmm" : {
          "type" : "string",
          "description" : "The date as dd/MM-yyyy HH:mm"
        },
        "isoDateTime" : {
          "type" : "string",
          "description" : "Datetime formatted following ISO-8601 with offset formatting rules"
        }
      }
    },
    "CadastreEncumbranceShare" : {
      "type" : "object",
      "required" : [ "fraction", "person" ],
      "properties" : {
        "fraction" : {
          "$ref" : "#/definitions/Fraction"
        },
        "person" : {
          "$ref" : "#/definitions/Person"
        }
      }
    },
    "CadastreIdent" : {
      "type" : "object",
      "required" : [ "cadastralUnitNumber", "leaseholdUnitNumber", "municipalityNumber", "section", "sectionNumber", "unitNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality number"
        },
        "cadastralUnitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The cadastral unit number"
        },
        "unitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unit number"
        },
        "leaseholdUnitNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The leasehold unit number"
        },
        "sectionNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The section number"
        },
        "section" : {
          "type" : "boolean"
        }
      }
    },
    "CadastreItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreLien" : {
      "type" : "object",
      "required" : [ "documentCode", "documentStatus", "documentType", "ident", "isActive", "key", "links", "remarks", "rightType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "registeredDate" : {
          "description" : "The date this lien was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number defining the priority of this lien, lower number having higher priority"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "currentAmounts" : {
          "type" : "array",
          "description" : "The current amount of the lien",
          "items" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "originalAmounts" : {
          "type" : "array",
          "description" : "The original amount of the lien",
          "items" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "description" : "List of the persons holding the mortgage",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "cadastreShares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CadastreEncumbranceShare"
          }
        },
        "remarks" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "plaintiffs" : {
          "type" : "array",
          "description" : "List of the persons suing in this enforcement case",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "defendants" : {
          "type" : "array",
          "description" : "List of the persons prosecuted in this enforcement case",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "legalRepresentatives" : {
          "type" : "array",
          "description" : "List of legal persons registered on the enforcement case",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "attachmentDate" : {
          "description" : "The date the enforcement were held",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "cadastreLevel" : {
          "description" : "The cadastre level this lien was registered on",
          "$ref" : "#/definitions/Code"
        },
        "numberOfCadastres" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of cadastres affected by this lien"
        },
        "links" : {
          "$ref" : "#/definitions/LienLinks"
        }
      }
    },
    "CadastreLiensCalculation" : {
      "type" : "object",
      "required" : [ "hasForeignCurrency", "hasLeaseAgreement", "hasLeaseholdAgreement", "hasMonetaryEncumbranceEasement", "hasSovereigntyLimitation", "ident", "isInterpretable", "key", "liens", "links", "pledge", "reasonsNotInterpretable" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isInterpretable" : {
          "type" : "boolean"
        },
        "hasForeignCurrency" : {
          "type" : "boolean"
        },
        "reasonsNotInterpretable" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "pledge" : {
          "$ref" : "#/definitions/CadastrePledge"
        },
        "liens" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CadastreLien"
          }
        },
        "hasSovereigntyLimitation" : {
          "type" : "boolean"
        },
        "hasMonetaryEncumbranceEasement" : {
          "type" : "boolean"
        },
        "hasLeaseAgreement" : {
          "type" : "boolean"
        },
        "hasLeaseholdAgreement" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreLiensCalculationLinks"
        }
      }
    },
    "CadastreLiensCalculationItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreLiensCalculationItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreLiensCalculation"
        }
      }
    },
    "CadastreLiensCalculationLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/CadastreLiensCalculationItemLink"
        },
        "cadastre" : {
          "description" : "The current cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "cadastrePDF" : {
          "description" : "A PDF of this cadastre from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "CadastrePledge" : {
      "type" : "object",
      "required" : [ "hasPledgeSecuringBond", "hasPledgingStatement", "numberOfEnforcements", "numberOfMortgages", "numberOfPledges", "sumEnforcement", "sumMortgage", "sumPledge" ],
      "properties" : {
        "sumPledge" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum pledge for the ownership in realties. Fractions are taken into account in the calculation."
        },
        "numberOfPledges" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumMortgage" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfMortgages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumEnforcement" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfEnforcements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasPledgeSecuringBond" : {
          "type" : "boolean"
        },
        "hasPledgingStatement" : {
          "type" : "boolean"
        },
        "hasMortgageWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If mortgages in this pledge have currency code <> 'NOK'"
        },
        "hasEnforcementWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If enforcements in this pledge have currency code <> 'NOK'"
        }
      }
    },
    "CreationOfRightIdent" : {
      "type" : "object",
      "required" : [ "documentNumber", "documentYear", "office", "rightNumber", "uniqueKartverketKey" ],
      "properties" : {
        "office" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The juridical office where this document belongs to"
        },
        "documentYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The year this document was registered"
        },
        "documentNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The serial number of this document"
        },
        "rightNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The creation of right number inside this document"
        },
        "uniqueKartverketKey" : {
          "type" : "string"
        }
      }
    },
    "Fraction" : {
      "type" : "object",
      "properties" : {
        "numerator" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The numerator of the fraction"
        },
        "denominator" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The denominator of the fraction"
        }
      }
    },
    "LienLinks" : {
      "type" : "object",
      "properties" : {
        "creationOfRightPDF" : {
          "description" : "PDF for this Creation of right",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "Money" : {
      "type" : "object",
      "required" : [ "amount", "currency", "text" ],
      "properties" : {
        "currency" : {
          "$ref" : "#/definitions/Code"
        },
        "amount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "text" : {
          "type" : "string"
        }
      }
    },
    "PDFItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "LevelCode" : {
      "type" : "object",
      "required" : [ "code" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "The code"
        },
        "registerCode" : {
          "type" : "string",
          "description" : "The register code"
        },
        "text" : {
          "type" : "string",
          "description" : "The code description"
        },
        "active" : {
          "type" : "boolean",
          "description" : "true if the code is active, false if it is historical"
        },
        "links" : {
          "$ref" : "#/definitions/CodeLinks"
        }
      }
    },
    "ShareCreationOfRightIdent" : {
      "type" : "object",
      "required" : [ "documentNumber", "documentYear", "rightNumber" ],
      "properties" : {
        "office" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The office this document was registered in"
        },
        "documentYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The year this document was registered"
        },
        "documentNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The serial number of this document"
        },
        "rightNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The creation of right number inside this document"
        }
      }
    },
    "ShareEncumbranceShare" : {
      "type" : "object",
      "required" : [ "fraction", "person" ],
      "properties" : {
        "fraction" : {
          "$ref" : "#/definitions/Fraction"
        },
        "person" : {
          "$ref" : "#/definitions/Person"
        }
      }
    },
    "ShareIdent" : {
      "type" : "object",
      "required" : [ "organizationNumber", "shareNumber" ],
      "properties" : {
        "organizationNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The organisation that owns the cooperative"
        },
        "shareNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unique share number in a cooperative"
        }
      }
    },
    "ShareItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareLien" : {
      "type" : "object",
      "required" : [ "attachmentDate", "currentAmounts", "defendants", "documentCode", "documentHolder", "documentStatus", "documentType", "ident", "isActive", "key", "legalRepresentatives", "links", "mortgagees", "numberOfShares", "originalAmounts", "plaintiffs", "priority", "registeredDate", "remarks", "rightType", "shares" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareCreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "registeredDate" : {
          "$ref" : "#/definitions/ApiDate"
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "currentAmounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "originalAmounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "remarks" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "plaintiffs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "defendants" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "legalRepresentatives" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "attachmentDate" : {
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "numberOfShares" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shares" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ShareEncumbranceShare"
          }
        },
        "documentHolder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "shareLevel" : {
          "description" : "The share level this lien was registered on",
          "$ref" : "#/definitions/LevelCode"
        },
        "links" : {
          "$ref" : "#/definitions/LienLinks"
        }
      }
    },
    "ShareLiensCalculation" : {
      "type" : "object",
      "required" : [ "hasForeignCurrency", "hasMonetaryEncumbranceEasement", "hasSovereigntyLimitation", "ident", "isInterpretable", "key", "liens", "links", "pledge", "reasonsNotInterpretable" ],
      "properties" : {
        "ident" : {
          "description" : "The ident for the share",
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isInterpretable" : {
          "type" : "boolean"
        },
        "hasForeignCurrency" : {
          "type" : "boolean"
        },
        "reasonsNotInterpretable" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "pledge" : {
          "$ref" : "#/definitions/SharePledge"
        },
        "liens" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ShareLien"
          }
        },
        "hasSovereigntyLimitation" : {
          "type" : "boolean"
        },
        "hasMonetaryEncumbranceEasement" : {
          "type" : "boolean"
        },
        "links" : {
          "$ref" : "#/definitions/ShareLiensCalculationLinks"
        }
      }
    },
    "ShareLiensCalculationItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareLiensCalculationItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareLiensCalculation"
        }
      }
    },
    "ShareLiensCalculationLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/ShareLiensCalculationItemLink"
        },
        "share" : {
          "description" : "The current housing cooperative share",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "sharePDF" : {
          "description" : "A PDF of this housing cooperative share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "SharePledge" : {
      "type" : "object",
      "required" : [ "hasListedEnforcement", "hasListedMortgage", "hasPledgeSecuringBond", "hasPledgingStatement", "numberOfEnforcements", "numberOfMortgages", "numberOfPledges", "sumEnforcement", "sumMortgage", "sumPledge" ],
      "properties" : {
        "sumPledge" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum pledge for the ownership in realties. Fractions are taken into account in the calculation."
        },
        "numberOfPledges" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumMortgage" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfMortgages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumEnforcement" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfEnforcements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasPledgeSecuringBond" : {
          "type" : "boolean"
        },
        "hasPledgingStatement" : {
          "type" : "boolean"
        },
        "hasMortgageWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If mortgages in this pledge have currency code <> 'NOK'"
        },
        "hasEnforcementWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If enforcements in this pledge have currency code <> 'NOK'"
        },
        "hasListedMortgage" : {
          "type" : "boolean"
        },
        "hasListedEnforcement" : {
          "type" : "boolean"
        }
      }
    },
    "Index" : {
      "type" : "object",
      "properties" : {
        "conveyanceIndexDate" : {
          "description" : "Index date for the time the conveyance occured",
          "$ref" : "#/definitions/ApiDate"
        },
        "conveyanceIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "Index value for the time the conveyance occured"
        },
        "currentIndexDate" : {
          "description" : "The current index date",
          "$ref" : "#/definitions/ApiDate"
        },
        "currentIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The current index value"
        },
        "indexRegion" : {
          "type" : "string",
          "description" : "The code of index region"
        },
        "indexRegionName" : {
          "type" : "string",
          "description" : "The name of index region"
        }
      }
    },
    "SeparatelyOccupiedUnitItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareCalculationBasis" : {
      "type" : "object",
      "properties" : {
        "conveyance" : {
          "description" : "Data about the conveyance used in calculation",
          "$ref" : "#/definitions/ShareHousingValueConveyance"
        },
        "area" : {
          "description" : "Data about the area used in calculation",
          "$ref" : "#/definitions/ShareHousingValueArea"
        },
        "index" : {
          "description" : "DEPRECATED. Data about the index used in calculation. Data about the used index is now present in conveyance and /or area",
          "$ref" : "#/definitions/Index"
        },
        "unitType" : {
          "description" : "Type of separately occupied unit",
          "$ref" : "#/definitions/Code"
        },
        "preferredCalculationMethod" : {
          "description" : "Preferred calculation method. Values = area,conveyance",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "ShareConveyanceItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareHousingValue" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isCalculable" : {
          "type" : "boolean",
          "description" : "Indicates if the calculation is possible"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        },
        "indexSupplier" : {
          "description" : "The source of the index. Current possible values=SSB",
          "$ref" : "#/definitions/Code"
        },
        "indexSupplierCode" : {
          "description" : "The supplier code of the used index",
          "$ref" : "#/definitions/Code"
        },
        "calculationText" : {
          "type" : "string",
          "description" : "Fixed text describing the calculation"
        },
        "calculationBasis" : {
          "description" : "Calculation basis containing conveyance and index data",
          "$ref" : "#/definitions/ShareCalculationBasis"
        },
        "links" : {
          "$ref" : "#/definitions/ShareHousingValueLinks"
        }
      }
    },
    "ShareHousingValueArea" : {
      "type" : "object",
      "properties" : {
        "numberOfUnits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of separately occupied units"
        },
        "numberOfBuildings" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of buildings"
        },
        "totalFloorSpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sum of usable area used in calculation for each cadastre"
        },
        "pricePerSquareMeter" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price per square meter"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        },
        "indexRegion" : {
          "type" : "string",
          "description" : "The code of index region"
        },
        "indexRegionName" : {
          "type" : "string",
          "description" : "The name of index region"
        }
      }
    },
    "ShareHousingValueConveyance" : {
      "type" : "object",
      "properties" : {
        "dateRegistered" : {
          "description" : "The date the conveyance was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "documentCode" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        },
        "usedForType" : {
          "description" : "The use of the cadastre as defined by the purchaser",
          "$ref" : "#/definitions/Code"
        },
        "dwellingType" : {
          "description" : "The type of the dwelling as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "purchasePrice" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The purchase price of the conveyance"
        },
        "numberOfSharesInConveyance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of cadastres in the conveyance"
        },
        "appliesToEntireProperty" : {
          "type" : "boolean",
          "description" : "If the conveyance applies to entire cadastre"
        },
        "conveyanceIndexDate" : {
          "description" : "The index date related to the time the conveyance occured",
          "$ref" : "#/definitions/ApiDate"
        },
        "conveyanceIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The index value related to the time the conveyance occured"
        },
        "currentIndexDate" : {
          "description" : "The current index date",
          "$ref" : "#/definitions/ApiDate"
        },
        "currentIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The current index value"
        },
        "indexRegion" : {
          "type" : "string",
          "description" : "The code of index region"
        },
        "indexRegionName" : {
          "type" : "string",
          "description" : "The name of index region"
        },
        "indexSupplier" : {
          "description" : "The source of the index. Current possible values=SSB",
          "$ref" : "#/definitions/Code"
        },
        "indexSupplierCode" : {
          "description" : "The supplier code of the used index",
          "$ref" : "#/definitions/Code"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        }
      }
    },
    "ShareHousingValueItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareHousingValueItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareHousingValue"
        }
      }
    },
    "ShareHousingValueLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/ShareHousingValueItemLink"
        },
        "share" : {
          "description" : "The current share",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "conveyanceInCalculationBasis" : {
          "description" : "Link to the conveyance used in basis for calculation",
          "$ref" : "#/definitions/ShareConveyanceItemLink"
        },
        "conveyances" : {
          "description" : "Link to the conveyances",
          "$ref" : "#/definitions/ShareConveyanceListLink"
        },
        "address" : {
          "description" : "Link to the address",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "unit" : {
          "description" : "Link to the separately occupied unit",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitItemLink"
        }
      }
    },
    "BuildingListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CulturalHeritage" : {
      "type" : "object",
      "required" : [ "ident", "key", "links", "objectName" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CulturalHeritageIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The municipality, district and house serial"
        },
        "objectName" : {
          "type" : "string",
          "description" : "The given name of the heritage"
        },
        "siteDating" : {
          "description" : "How old this heritage is",
          "$ref" : "#/definitions/Code"
        },
        "originalFunction" : {
          "type" : "string",
          "description" : "What function the heritage had"
        },
        "currentFunction" : {
          "type" : "string",
          "description" : "What function the heritage has, might differ from its original function"
        },
        "extension" : {
          "type" : "string",
          "description" : "A description of any changes made to the heritage"
        },
        "appliesToBuildingChange" : {
          "type" : "boolean",
          "description" : "Whether the heritage is connected to a modification on a building, rather than the building itself"
        },
        "links" : {
          "$ref" : "#/definitions/CulturalHeritageLinks"
        }
      }
    },
    "CulturalHeritageIdent" : {
      "type" : "object",
      "required" : [ "houseSerialNumber", "municipalityNumber", "registrationDistrictNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality this heritage belongs to"
        },
        "registrationDistrictNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The district this heritage belongs to"
        },
        "houseSerialNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The serial of the building heritage"
        }
      }
    },
    "CulturalHeritageItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CulturalHeritageLinks" : {
      "type" : "object",
      "required" : [ "buildings", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/CulturalHeritageItemLink"
        },
        "buildings" : {
          "description" : "The buildings connected to this heritage",
          "$ref" : "#/definitions/BuildingListLink"
        }
      }
    },
    "CulturalHeritageListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CulturalHeritage"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CulturalHeritageItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CulturalHeritage"
        }
      }
    },
    "POC" : {
      "type" : "object",
      "required" : [ "id", "links", "realtyType" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "realtyType" : {
          "$ref" : "#/definitions/Code"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of the POC in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/POCLinks"
        }
      }
    },
    "POCItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/POC"
        }
      }
    },
    "POCListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/POC"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "Administration" : {
      "type" : "object",
      "properties" : {
        "administratorType" : {
          "description" : "The type/role of administrators",
          "$ref" : "#/definitions/Code"
        },
        "administrators" : {
          "type" : "array",
          "description" : "The administrators",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        }
      }
    },
    "ApiTime" : {
      "type" : "object",
      "required" : [ "hhmm" ],
      "properties" : {
        "hhmm" : {
          "type" : "string"
        }
      }
    },
    "Appeal" : {
      "type" : "object",
      "properties" : {
        "appealType" : {
          "description" : "Type of appeal",
          "$ref" : "#/definitions/Code"
        },
        "decisionDate" : {
          "description" : "Decision date this appeal applies to",
          "$ref" : "#/definitions/ApiDate"
        },
        "appealDate" : {
          "description" : "Appeal date",
          "$ref" : "#/definitions/ApiDate"
        },
        "denialDate" : {
          "description" : "Denial date",
          "$ref" : "#/definitions/ApiDate"
        }
      }
    },
    "AppliesTo" : {
      "type" : "object",
      "required" : [ "numberOfRealties" ],
      "properties" : {
        "cadastres" : {
          "type" : "array",
          "description" : "List of entire cadastres/cadastreLevel this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "cadastreOwnerships" : {
          "type" : "array",
          "description" : "List of cadastre ownerships this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/CadastreOwnershipRelation"
          }
        },
        "shares" : {
          "type" : "array",
          "description" : "List of entire share/shareLevel this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/ShareLevelRelation"
          }
        },
        "shareOwnerships" : {
          "type" : "array",
          "description" : "List of share ownerships this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/ShareOwnershipRelation"
          }
        },
        "persons" : {
          "type" : "array",
          "description" : "List of person this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "creationOfRights" : {
          "type" : "array",
          "description" : "List of other Creation of rights this Creation of right applies to",
          "items" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        },
        "numberOfRealties" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "CadastreConveyanceItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreLevelRelation" : {
      "type" : "object",
      "required" : [ "cadastreIdent", "cadastreKey", "cadastreLevel", "isActive" ],
      "properties" : {
        "cadastreLevel" : {
          "$ref" : "#/definitions/LevelCode"
        },
        "cadastreIdent" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "cadastreKey" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean"
        }
      }
    },
    "CadastreOwnership" : {
      "type" : "object",
      "required" : [ "cadastreLevel", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CadastreOwnershipIdent"
        },
        "key" : {
          "type" : "string"
        },
        "registered" : {
          "type" : "boolean",
          "description" : "Whether this ownership is registered in the Land Registry"
        },
        "ownedCadastreIdent" : {
          "description" : "Ident of the owned cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "cadastreLevel" : {
          "description" : "Specifies what kind of ownership the owner has on the cadastre",
          "$ref" : "#/definitions/LevelCode"
        },
        "fraction" : {
          "description" : "Specifies the size of an ownership as a fraction",
          "$ref" : "#/definitions/Fraction"
        },
        "useOfCadastre" : {
          "description" : "The use of the realty as defined by the purchaser",
          "$ref" : "#/definitions/Code"
        },
        "dwellingType" : {
          "description" : "The type of the dwelling as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "ownerType" : {
          "description" : "Owner type. Can be CADASTRE or PERSON",
          "$ref" : "#/definitions/Code"
        },
        "owningPerson" : {
          "description" : "If owner type is PERSON then this contains the owning person",
          "$ref" : "#/definitions/Person"
        },
        "owningCadastreIdent" : {
          "description" : "If owner type is CADASTRE then this contains the ident of the owning cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreOwnershipLinks"
        }
      }
    },
    "CadastreOwnershipIdent" : {
      "type" : "object",
      "required" : [ "cadastreIdent", "ownershipNumber" ],
      "properties" : {
        "cadastreIdent" : {
          "description" : "The ident for the cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "ownershipNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A serial for all owners of the same cadastre"
        },
        "cadastreLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number that specifies what part of the cadastre the ownership is connected to"
        }
      }
    },
    "CadastreOwnershipItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreOwnershipLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/CadastreOwnershipItemLink"
        },
        "ownedCadastre" : {
          "description" : "The cadastre being owned",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "owningPerson" : {
          "description" : "The owning person",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "owningCadastre" : {
          "description" : "The owning cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "conveyance" : {
          "description" : "The conveyance that caused this ownership",
          "$ref" : "#/definitions/CadastreConveyanceItemLink"
        }
      }
    },
    "CadastreOwnershipRelation" : {
      "type" : "object",
      "required" : [ "isActive", "ownership" ],
      "properties" : {
        "ownership" : {
          "$ref" : "#/definitions/CadastreOwnership"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if this connection is active. If not its historical"
        },
        "creationOfRight" : {
          "$ref" : "#/definitions/CreationOfRight"
        },
        "role" : {
          "description" : "DEPRECATED. Role for this ownership",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "CreationOfRight" : {
      "type" : "object",
      "required" : [ "documentStatus", "documentType", "ident", "isActive", "key", "links", "presentation" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "presentation" : {
          "description" : "Simple presentation of this object",
          "$ref" : "#/definitions/Presentation"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "details" : {
          "description" : "More details about this right",
          "$ref" : "#/definitions/RightDetails"
        },
        "formatted" : {
          "description" : "Content of this right formatted for presentation",
          "$ref" : "#/definitions/Formatted"
        },
        "relatedRights" : {
          "description" : "Rights with relation to this Creation of right",
          "$ref" : "#/definitions/Rights with relation to this Creation of right"
        },
        "documentCopyExists" : {
          "type" : "boolean",
          "description" : "Whether or not a copy of this document can be ordered"
        },
        "documentCopyReasonNotExists" : {
          "type" : "string",
          "description" : "Explanation for why a document copy does not exist"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/CreationOfRightLinks"
        }
      }
    },
    "CreationOfRightItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CreationOfRightLinks" : {
      "type" : "object",
      "required" : [ "self", "selfHtml" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/CreationOfRightItemLink"
        },
        "selfHtml" : {
          "$ref" : "#/definitions/InternalHtmlLinkCreationOfRight"
        }
      }
    },
    "Downpayment" : {
      "type" : "object",
      "properties" : {
        "amounts" : {
          "type" : "object",
          "description" : "Amounts of downpayment",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        }
      }
    },
    "EncumbranceTransfer" : {
      "type" : "object",
      "properties" : {
        "transfers" : {
          "type" : "array",
          "description" : "List of transfers",
          "items" : {
            "$ref" : "#/definitions/TransferredEncumbrance"
          }
        }
      }
    },
    "Enforcement" : {
      "type" : "object",
      "required" : [ "enforcementHeldDate", "numberOfCadastres" ],
      "properties" : {
        "originalAmounts" : {
          "type" : "object",
          "description" : "The original amount on the enforcement",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "plaintiffs" : {
          "type" : "array",
          "description" : "The plaintiffs in the legal proceeding",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "legalRepresentatives" : {
          "type" : "array",
          "description" : "The legal representatives in the proceeding",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "defendants" : {
          "type" : "array",
          "description" : "The defendants in the legal proceeding",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "listedPledge" : {
          "description" : "Listed pledge information.",
          "$ref" : "#/definitions/ListedPledge"
        },
        "enforcementHeldDate" : {
          "description" : "The date of the proceeding",
          "$ref" : "#/definitions/ApiDate"
        },
        "enforcementHeldDateTime" : {
          "description" : "The date and time of the proceeding. Field only present when a time is present",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "enforcementHeldTime" : {
          "description" : "The time of the proceeding. Field only present when a time is present",
          "$ref" : "#/definitions/ApiTime"
        },
        "encumbrances" : {
          "type" : "array",
          "description" : "DEPRECATED. List of encumbrances for this enforcement",
          "items" : {
            "$ref" : "#/definitions/CadastreOwnershipRelation"
          }
        },
        "numberOfCadastres" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "Exchange" : {
      "type" : "object",
      "properties" : {
        "invokedExchangeWith" : {
          "type" : "array",
          "description" : "Creation of rights invoked exchanged with",
          "items" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        },
        "invokedPriorityFrom" : {
          "description" : "The date this invoked exchange applies to",
          "$ref" : "#/definitions/ApiDate"
        }
      }
    },
    "Formatted" : {
      "type" : "object",
      "properties" : {
        "formattedRights" : {
          "type" : "array",
          "description" : "List of formatted rights",
          "items" : {
            "$ref" : "#/definitions/FormattedRight"
          }
        }
      }
    },
    "FormattedRight" : {
      "type" : "object",
      "required" : [ "headingLine", "isActive", "keyLines", "links", "rightKey", "textLines" ],
      "properties" : {
        "rightKey" : {
          "type" : "string",
          "description" : "The key of this right"
        },
        "keyLines" : {
          "type" : "array",
          "description" : "Text lines for presenting the key-data for this right",
          "items" : {
            "$ref" : "#/definitions/TextLine"
          }
        },
        "headingLine" : {
          "description" : "The heading line of this right",
          "$ref" : "#/definitions/TextLine"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text lines for presenting the content of this right",
          "items" : {
            "$ref" : "#/definitions/TextLine"
          }
        },
        "nestingLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "This value is used to present indenting. If this right is a remark to another right, this value shows how many levels it is up to the main right. 0 is the lowest level."
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if this right is active"
        },
        "links" : {
          "$ref" : "#/definitions/FormattedRightLinks"
        }
      }
    },
    "FormattedRightLinks" : {
      "type" : "object",
      "required" : [ "right", "rightHtml" ],
      "properties" : {
        "right" : {
          "description" : "Link the the Creation of right",
          "$ref" : "#/definitions/CreationOfRightItemLink"
        },
        "rightHtml" : {
          "description" : "HTML for this Creation of right",
          "$ref" : "#/definitions/InternalHtmlLinkCreationOfRight"
        }
      }
    },
    "InternalHtmlLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "InternalHtmlLinkCreationOfRight" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "LandData" : {
      "type" : "object",
      "properties" : {
        "fromCadastres" : {
          "type" : "array",
          "description" : "Original cadastres of this land data right",
          "items" : {
            "$ref" : "#/definitions/LandDataCadastre"
          }
        },
        "toCadastres" : {
          "type" : "array",
          "description" : "Resulting cadastres of this land data right",
          "items" : {
            "$ref" : "#/definitions/LandDataCadastre"
          }
        },
        "fromShare" : {
          "type" : "array",
          "description" : "Original shares of this land data right",
          "items" : {
            "$ref" : "#/definitions/LandDataShare"
          }
        },
        "toShare" : {
          "type" : "array",
          "description" : "Resulting shares of this land data right",
          "items" : {
            "$ref" : "#/definitions/LandDataShare"
          }
        },
        "purchasePrice" : {
          "description" : "The purchase price. Is filled only when this is of type area transfer",
          "$ref" : "#/definitions/Money"
        },
        "hasMarketValue" : {
          "type" : "boolean",
          "description" : "Whether the purchase price was at market value. Is filled only when this is of type area transfer"
        },
        "containsBuilding" : {
          "type" : "boolean",
          "description" : "Whether the realty bought contains one or more buildings. Is filled only when this is of type area transfer"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance. Is filled only when this is of type area transfer",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "LandDataCadastre" : {
      "type" : "object",
      "required" : [ "additionalPart", "cadastreIdent", "cadastreKey", "fraction", "isActive", "purposeSectioning", "roleText" ],
      "properties" : {
        "cadastreIdent" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "cadastreKey" : {
          "type" : "string"
        },
        "roleText" : {
          "type" : "string"
        },
        "fraction" : {
          "$ref" : "#/definitions/Fraction"
        },
        "purposeSectioning" : {
          "$ref" : "#/definitions/Code"
        },
        "additionalPart" : {
          "$ref" : "#/definitions/Code"
        },
        "isActive" : {
          "type" : "boolean"
        }
      }
    },
    "LandDataShare" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "isActive", "referencedShare", "shareIdent" ],
      "properties" : {
        "shareIdent" : {
          "$ref" : "#/definitions/ShareIdentModel"
        },
        "isActive" : {
          "type" : "boolean"
        },
        "housingCooperativeName" : {
          "type" : "string"
        },
        "referencedShare" : {
          "$ref" : "#/definitions/LandDataShare"
        }
      }
    },
    "LeaseAgreement" : {
      "type" : "object",
      "required" : [ "leaseholders" ],
      "properties" : {
        "leaseholders" : {
          "type" : "array",
          "description" : "List of leaseholders",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "amount" : {
          "description" : "Amount",
          "$ref" : "#/definitions/Money"
        },
        "amountPeriodType" : {
          "description" : "Type of period for amount",
          "$ref" : "#/definitions/Code"
        },
        "duration" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Duration"
        },
        "durationPeriodType" : {
          "description" : "Type of periode for duration",
          "$ref" : "#/definitions/Code"
        },
        "fromDate" : {
          "description" : "The date this lease agreement started",
          "$ref" : "#/definitions/ApiDate"
        }
      }
    },
    "LeaseholdAgreement" : {
      "type" : "object",
      "required" : [ "conditions" ],
      "properties" : {
        "conditions" : {
          "type" : "array",
          "description" : "Conditions in this leasehold agreement",
          "items" : {
            "$ref" : "#/definitions/LeaseholdCondition"
          }
        }
      }
    },
    "LeaseholdCondition" : {
      "type" : "object",
      "properties" : {
        "leaseholdTime" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Leasehold time"
        },
        "leaseholdFee" : {
          "description" : "Leasehold fee",
          "$ref" : "#/definitions/Money"
        },
        "landValue" : {
          "description" : "Land value",
          "$ref" : "#/definitions/Money"
        },
        "conclusionDate" : {
          "description" : "Conclusion date",
          "$ref" : "#/definitions/ApiDate"
        }
      }
    },
    "ListedPledge" : {
      "type" : "object",
      "properties" : {
        "notificationDate" : {
          "description" : "Notification date",
          "$ref" : "#/definitions/ApiDate"
        },
        "possessors" : {
          "type" : "array",
          "description" : "The possessors of this listed pledge",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Priority"
        }
      }
    },
    "Mortgage" : {
      "type" : "object",
      "properties" : {
        "originalAmounts" : {
          "type" : "object",
          "description" : "The original amounts on the mortgage document",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "description" : "The mortgagees this mortgage refers to",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "listedPledge" : {
          "description" : "Listed pledge information.",
          "$ref" : "#/definitions/ListedPledge"
        }
      }
    },
    "Office" : {
      "type" : "object",
      "required" : [ "officeName", "officeNumber" ],
      "properties" : {
        "officeNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The juridical office where this document belongs to"
        },
        "officeName" : {
          "type" : "string",
          "description" : "The name of the office this document belongs to"
        }
      }
    },
    "OtherEncumbrance" : {
      "type" : "object",
      "properties" : {
        "personsWithLicense" : {
          "type" : "array",
          "description" : "List of persons that have license",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "deletionNeedsConsentFrom" : {
          "type" : "array",
          "description" : "List of persons that has to consent to the deletion of this right",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "cadastresWithLicense" : {
          "type" : "array",
          "description" : "List of entire cadastres/cadastreLevel that have license",
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "cadastreOwnershipsWithLicense" : {
          "type" : "array",
          "description" : "List of cadastre ownerships that have license",
          "items" : {
            "$ref" : "#/definitions/CadastreOwnershipRelation"
          }
        },
        "sharesWithLicense" : {
          "type" : "array",
          "description" : "List of entire shares/shareLevel that have license",
          "items" : {
            "$ref" : "#/definitions/ShareLevelRelation"
          }
        },
        "shareOwnershipsWithLicense" : {
          "type" : "array",
          "description" : "List of share ownerships that have license",
          "items" : {
            "$ref" : "#/definitions/ShareOwnershipRelation"
          }
        }
      }
    },
    "PersonRelation" : {
      "type" : "object",
      "required" : [ "isActive", "person" ],
      "properties" : {
        "isActive" : {
          "type" : "boolean"
        },
        "person" : {
          "$ref" : "#/definitions/Person"
        }
      }
    },
    "Presentation" : {
      "type" : "object",
      "required" : [ "formatted" ],
      "properties" : {
        "formatted" : {
          "type" : "string",
          "description" : "A formatted presentation string"
        }
      }
    },
    "PriorityAppliesTo" : {
      "type" : "object",
      "properties" : {
        "creationOfRight" : {
          "description" : "The affected creation of right",
          "$ref" : "#/definitions/CreationOfRight"
        },
        "priorityRelationType" : {
          "type" : "string",
          "description" : "The type of the relation"
        },
        "cadastres" : {
          "type" : "array",
          "description" : "Cadastres this priority affect",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "shares" : {
          "type" : "array",
          "description" : "Cadastres this priority affect",
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ShareLevelRelation"
          }
        }
      }
    },
    "PriorityDecision" : {
      "type" : "object",
      "properties" : {
        "priorityRelationType" : {
          "type" : "string",
          "description" : "Contains the text of priority relation type"
        },
        "amounts" : {
          "type" : "object",
          "description" : "The amounts in the decision",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "amountsSubordinatedWith" : {
          "type" : "object",
          "description" : "The amounts that this claim concedes with",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "amountsSubordinatedFor" : {
          "type" : "object",
          "description" : "The amounts that this claim concedes for",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "description" : "Contains the persons that are mortgagees",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "rightsWithOtherPriority" : {
          "type" : "array",
          "description" : "Contains relation about what objects this priority affect",
          "items" : {
            "$ref" : "#/definitions/PriorityAppliesTo"
          }
        }
      }
    },
    "Remark" : {
      "type" : "object",
      "properties" : {
        "reasons" : {
          "type" : "object",
          "description" : "Reasons for this remark",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "downpayment" : {
          "description" : "Downpayment",
          "$ref" : "#/definitions/Downpayment"
        },
        "transport" : {
          "description" : "Transport of document",
          "$ref" : "#/definitions/Transport"
        },
        "exchange" : {
          "description" : "Exchange",
          "$ref" : "#/definitions/Exchange"
        },
        "appeal" : {
          "description" : "Appeal",
          "$ref" : "#/definitions/Appeal"
        },
        "priorityDecision" : {
          "description" : "Unregistered priority decision for encumbrances",
          "$ref" : "#/definitions/PriorityDecision"
        },
        "administration" : {
          "description" : "Administration",
          "$ref" : "#/definitions/Administration"
        }
      }
    },
    "RightCollection" : {
      "type" : "object",
      "required" : [ "rightCollectionLevels" ],
      "properties" : {
        "rightCollectionLevels" : {
          "type" : "object",
          "description" : "This map contains the creation of rights by level.",
          "additionalProperties" : {
            "$ref" : "#/definitions/RightCollectionRightsInLevel"
          }
        }
      }
    },
    "RightCollectionRightsInLevel" : {
      "type" : "object",
      "required" : [ "heading", "level", "rights" ],
      "properties" : {
        "heading" : {
          "type" : "string"
        },
        "level" : {
          "$ref" : "#/definitions/LevelCode"
        },
        "rights" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        }
      }
    },
    "RightDetails" : {
      "type" : "object",
      "required" : [ "detailsType", "textLines" ],
      "properties" : {
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "$ref" : "#/definitions/TextLineDetails"
          }
        },
        "detailsType" : {
          "type" : "string",
          "description" : "Type of details. A corresponding field will be filled with data"
        },
        "leaseAgreement" : {
          "description" : "Lease agreement data. Is filled for detailsType LEASE_AGREEMENT.",
          "$ref" : "#/definitions/LeaseAgreement"
        },
        "leaseholdAgreement" : {
          "description" : "Leasehold agreement data. Is filled for detailsType LEASEHOLD_AGREEMENT.",
          "$ref" : "#/definitions/LeaseholdAgreement"
        },
        "otherEncumbrance" : {
          "description" : "Data for encumbrances other than monetary encumbrances. Is filled for detailsType OTHER_ENCUMBRANCE.",
          "$ref" : "#/definitions/OtherEncumbrance"
        },
        "enforcement" : {
          "description" : "Enforcement data. Is filled for detailsType ENFORCEMENT.",
          "$ref" : "#/definitions/Enforcement"
        },
        "landData" : {
          "description" : "Land data. Is filled for detailsType LAND_DATA.",
          "$ref" : "#/definitions/LandData"
        },
        "title" : {
          "description" : "Title data. Is filled for detailsType TITLE.",
          "$ref" : "#/definitions/Title"
        },
        "mortgage" : {
          "description" : "Mortgage data. Is filled for detailsType MORTGAGE.",
          "$ref" : "#/definitions/Mortgage"
        },
        "remark" : {
          "description" : "Remark data. Is filled for detailsType REMARK.",
          "$ref" : "#/definitions/Remark"
        },
        "office" : {
          "description" : "Office where the document was registered",
          "$ref" : "#/definitions/Office"
        },
        "encumbranceTransfer" : {
          "description" : "Contains data encumbrance transfer for this creation of right",
          "$ref" : "#/definitions/EncumbranceTransfer"
        },
        "appliesTo" : {
          "description" : "Contains data about what objects this Creation of right applies to",
          "$ref" : "#/definitions/AppliesTo"
        }
      }
    },
    "Rights with relation to this Creation of right" : {
      "type" : "object",
      "properties" : {
        "remarks" : {
          "type" : "object",
          "description" : "Remarks on this Creation of right",
          "additionalProperties" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        },
        "encumbrances" : {
          "type" : "object",
          "description" : "Encumbrances on this Creation of right",
          "additionalProperties" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        }
      }
    },
    "RightsItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/RightCollection"
        }
      }
    },
    "ShareIdentModel" : {
      "type" : "object",
      "required" : [ "formattedString", "organizationNumber", "shareNumber", "uniqueKey" ],
      "properties" : {
        "organizationNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "shareNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "formattedString" : {
          "type" : "string"
        },
        "uniqueKey" : {
          "type" : "string"
        }
      }
    },
    "ShareLevelRelation" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "isActive", "shareIdent", "shareKey", "shareLevel" ],
      "properties" : {
        "shareLevel" : {
          "$ref" : "#/definitions/LevelCode"
        },
        "shareIdent" : {
          "$ref" : "#/definitions/ShareIdent"
        },
        "shareKey" : {
          "type" : "string"
        },
        "housingCooperativeName" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean"
        }
      }
    },
    "ShareOwnership" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "ident", "key", "links", "objectTypeName", "registered", "shareLevel" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareOwnershipIdent"
        },
        "key" : {
          "type" : "string"
        },
        "housingCooperativeName" : {
          "type" : "string",
          "description" : "The name of the cooperative"
        },
        "registered" : {
          "type" : "boolean",
          "description" : "Whether this ownership is registered in the Land Registry"
        },
        "ownedShareIdent" : {
          "description" : "Ident of the owned housing cooperative share",
          "$ref" : "#/definitions/ShareIdent"
        },
        "fraction" : {
          "description" : "Specifies the size of an ownership as a fraction",
          "$ref" : "#/definitions/Fraction"
        },
        "usedForType" : {
          "description" : "The type of use of the housing cooperative share as defined by the purchaser",
          "$ref" : "#/definitions/Code"
        },
        "dwellingType" : {
          "description" : "The type of the dwelling as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "shareLevel" : {
          "description" : "Specifies what kind of ownership the owner has on the share",
          "$ref" : "#/definitions/LevelCode"
        },
        "owningPerson" : {
          "description" : "Owning person",
          "$ref" : "#/definitions/Person"
        },
        "links" : {
          "$ref" : "#/definitions/ShareOwnershipLinks"
        },
        "objectTypeName" : {
          "type" : "string"
        }
      }
    },
    "ShareOwnershipIdent" : {
      "type" : "object",
      "required" : [ "ownershipNumber", "shareIdent" ],
      "properties" : {
        "shareIdent" : {
          "description" : "The ident for the share",
          "$ref" : "#/definitions/ShareIdent"
        },
        "ownershipNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A serial for all owners of the same share"
        },
        "shareLevel" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Specifies what kind of ownership the owner has on the share"
        }
      }
    },
    "ShareOwnershipItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareOwnershipLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/ShareOwnershipItemLink"
        },
        "ownedShare" : {
          "description" : "The housing cooperative share being owned",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "owningPerson" : {
          "description" : "The owning person",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "conveyance" : {
          "description" : "The conveyance that caused this ownership",
          "$ref" : "#/definitions/ShareConveyanceItemLink"
        }
      }
    },
    "ShareOwnershipRelation" : {
      "type" : "object",
      "required" : [ "isActive", "ownership" ],
      "properties" : {
        "ownership" : {
          "$ref" : "#/definitions/ShareOwnership"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if this connection is active. If not its historical"
        },
        "role" : {
          "description" : "Role for this ownership",
          "$ref" : "#/definitions/Code"
        },
        "creationOfRight" : {
          "$ref" : "#/definitions/CreationOfRight"
        }
      }
    },
    "TextItem" : {
      "type" : "object",
      "required" : [ "bold", "text" ],
      "properties" : {
        "text" : {
          "type" : "string",
          "description" : "Text"
        },
        "linkToReferencedObject" : {
          "description" : "Link to an object that is referenced in the text",
          "$ref" : "#/definitions/Link"
        },
        "alignment" : {
          "type" : "string",
          "description" : "If set, this indicates that this text should be aligned to the left or right",
          "enum" : [ "left", "right" ]
        },
        "bold" : {
          "type" : "boolean",
          "description" : "Indicates that this text should be presented with a bold text"
        }
      }
    },
    "TextLine" : {
      "type" : "object",
      "required" : [ "items" ],
      "properties" : {
        "items" : {
          "type" : "array",
          "description" : "List of text items on this line",
          "items" : {
            "$ref" : "#/definitions/TextItem"
          }
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the text represents active data. If not, it's historical."
        }
      }
    },
    "TextLineDetails" : {
      "type" : "object",
      "required" : [ "isActive", "text" ],
      "properties" : {
        "isActive" : {
          "type" : "boolean"
        },
        "text" : {
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "Title" : {
      "type" : "object",
      "required" : [ "cadastreSellers", "shareSellers" ],
      "properties" : {
        "cadastreSellers" : {
          "type" : "array",
          "description" : "List of persons that have sold title to cadastre",
          "items" : {
            "$ref" : "#/definitions/CadastreOwnershipRelation"
          }
        },
        "shareSellers" : {
          "type" : "array",
          "description" : "List of persons that have sold title to share",
          "items" : {
            "$ref" : "#/definitions/ShareOwnershipRelation"
          }
        },
        "feeBasis" : {
          "description" : "Basis for calculation of fee",
          "$ref" : "#/definitions/Money"
        },
        "feeCause" : {
          "description" : "Cause of fee",
          "$ref" : "#/definitions/Code"
        },
        "purchasePrice" : {
          "description" : "The purchase price",
          "$ref" : "#/definitions/Money"
        },
        "hasMarketValue" : {
          "type" : "boolean",
          "description" : "Whether the purchase price was at market value"
        },
        "containsBuilding" : {
          "type" : "boolean",
          "description" : "Whether the realty bought contains one or more buildings"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "TransferredEncumbrance" : {
      "type" : "object",
      "required" : [ "isActive" ],
      "properties" : {
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if this connection is active. If not its historical"
        },
        "transferredTo" : {
          "description" : "Contains data about what objects this encumbrance is transferred to",
          "$ref" : "#/definitions/TransferredEncumbranceTo"
        },
        "transferredFrom" : {
          "description" : "Contains data about what objects this encumbrance is transferred from",
          "$ref" : "#/definitions/TransferredEncumbranceFrom"
        }
      }
    },
    "TransferredEncumbranceFrom" : {
      "type" : "object",
      "properties" : {
        "cadastre" : {
          "description" : "Encumbrance is transferred from this entire cadastre/cadastreLevel",
          "$ref" : "#/definitions/CadastreLevelRelation"
        },
        "creationOfRightIdent" : {
          "description" : "Encumbrance is transferred from this creation of right",
          "$ref" : "#/definitions/CreationOfRightIdent"
        }
      }
    },
    "TransferredEncumbranceTo" : {
      "type" : "object",
      "properties" : {
        "cadastre" : {
          "description" : "This encumbrance is transferred to this entire cadastre/cadastreLevel",
          "$ref" : "#/definitions/CadastreLevelRelation"
        },
        "ownership" : {
          "description" : "This encumbrance is transferred to this ownership",
          "$ref" : "#/definitions/CadastreOwnershipRelation"
        }
      }
    },
    "Transport" : {
      "type" : "object",
      "properties" : {
        "fromPerson" : {
          "type" : "array",
          "description" : "Persons that the document is transported from",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "toPerson" : {
          "type" : "array",
          "description" : "Persons that the document is transported to",
          "items" : {
            "$ref" : "#/definitions/PersonRelation"
          }
        },
        "fromCadastreLevel" : {
          "type" : "array",
          "description" : "CadastreLevels the document is transported from",
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "toCadastreLevel" : {
          "type" : "array",
          "description" : "CadastreLevels the document is transported to",
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "fromShareLevel" : {
          "type" : "array",
          "description" : "ShareLevels the document is transported from",
          "items" : {
            "$ref" : "#/definitions/ShareLevelRelation"
          }
        },
        "toShareLevel" : {
          "type" : "array",
          "description" : "ShareLevels the document is transported to",
          "items" : {
            "$ref" : "#/definitions/ShareLevelRelation"
          }
        }
      }
    },
    "CadastreOwnershipListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CadastreOwnership"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreOwnershipItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreOwnership"
        }
      }
    },
    "AddressListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "DistrictListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "Extent" : {
      "type" : "object",
      "required" : [ "nw", "se" ],
      "properties" : {
        "se" : {
          "description" : "The lower left corner on the map",
          "$ref" : "#/definitions/Position"
        },
        "nw" : {
          "description" : "The upper right corner on the map",
          "$ref" : "#/definitions/Position"
        }
      }
    },
    "GeoJSONFeatureCollection" : {
      "type" : "object",
      "required" : [ "bbox", "crs", "features", "properties", "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "bbox" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "features" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GeoJSONFeature"
          }
        },
        "crs" : {
          "$ref" : "#/definitions/GeoJSONCrs"
        },
        "properties" : {
          "$ref" : "#/definitions/GeoJSONProperties"
        }
      }
    },
    "Position" : {
      "type" : "object",
      "properties" : {
        "e" : {
          "type" : "number",
          "format" : "double",
          "description" : "The easting coordinate"
        },
        "n" : {
          "type" : "number",
          "format" : "double",
          "description" : "The northing coordinate"
        }
      }
    },
    "PostalPlace" : {
      "type" : "object",
      "required" : [ "postalCode", "postalPlace" ],
      "properties" : {
        "postalCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The postal code"
        },
        "postalPlace" : {
          "type" : "string",
          "description" : "The postal code name"
        }
      }
    },
    "Street" : {
      "type" : "object",
      "required" : [ "ident", "key", "links", "postalCode", "postalPlace", "postalPlaces", "streetName" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/StreetIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The municipality and street number"
        },
        "streetName" : {
          "type" : "string",
          "description" : "The name of the street"
        },
        "postalCode" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The postal code the street is in"
        },
        "postalPlace" : {
          "type" : "string",
          "description" : "The postal code name"
        },
        "postalPlaces" : {
          "type" : "array",
          "description" : "A list of the postal places this street runs through",
          "items" : {
            "$ref" : "#/definitions/PostalPlace"
          }
        },
        "extent" : {
          "description" : "The extent of this street based on the outer address coordinates connected to the street",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "The extent of this street in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeatureCollection"
        },
        "municipality" : {
          "description" : "The municipality where this street is located",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "links" : {
          "$ref" : "#/definitions/StreetLinks"
        }
      }
    },
    "StreetIdent" : {
      "type" : "object",
      "required" : [ "municipalityNumber", "streetNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality the street is in"
        },
        "streetNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The street number"
        }
      }
    },
    "StreetItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "StreetLinks" : {
      "type" : "object",
      "required" : [ "addresses", "cadastres", "districts", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/StreetItemLink"
        },
        "cadastres" : {
          "description" : "The cadastres related to this street",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "addresses" : {
          "description" : "The addresses related to this street",
          "$ref" : "#/definitions/AddressListLink"
        },
        "districts" : {
          "description" : "The districts this street concerns",
          "$ref" : "#/definitions/DistrictListLink"
        }
      }
    },
    "StreetSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Street"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "AffairListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreCalculationBasis" : {
      "type" : "object",
      "properties" : {
        "conveyance" : {
          "description" : "Data about the conveyance used in calculation",
          "$ref" : "#/definitions/CadastreHousingValueConveyance"
        },
        "area" : {
          "description" : "Data about the area used in calculation",
          "$ref" : "#/definitions/CadastreHousingValueArea"
        },
        "index" : {
          "description" : "DEPRECATED. Data about the index used in calculation. Data about the used index is now present in conveyance and area",
          "$ref" : "#/definitions/Index"
        },
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Municipality number for the cadastre used in calculation"
        },
        "unitType" : {
          "description" : "Type of separately occupied unit",
          "$ref" : "#/definitions/Code"
        },
        "preferredCalculationMethod" : {
          "description" : "Preferred calculation method. Values = area, conveyance",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "CadastreHousingValue" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isCalculable" : {
          "type" : "boolean",
          "description" : "Indicates if the calculation is possible"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        },
        "indexSupplier" : {
          "description" : "The source of the index. Current possible values=SSB",
          "$ref" : "#/definitions/Code"
        },
        "indexSupplierCode" : {
          "description" : "The supplier code of the used index",
          "$ref" : "#/definitions/Code"
        },
        "calculationText" : {
          "type" : "string",
          "description" : "Fixed text describing the calculation"
        },
        "calculationBasis" : {
          "description" : "Calculation basis containing conveyance and index data",
          "$ref" : "#/definitions/CadastreCalculationBasis"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreHousingValueLinks"
        }
      }
    },
    "CadastreHousingValueArea" : {
      "type" : "object",
      "properties" : {
        "numberOfUnits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of separately occupied units"
        },
        "numberOfBuildings" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of buildings"
        },
        "totalFloorSpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The sum of usable area used in calculation for each cadastre"
        },
        "usedDate" : {
          "description" : "Date of the newest building used in calculation",
          "$ref" : "#/definitions/ApiDate"
        },
        "pricePerSquareMeter" : {
          "type" : "number",
          "format" : "double",
          "description" : "Price per square meter"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        },
        "indexRegion" : {
          "type" : "string",
          "description" : "The code of index region"
        },
        "indexRegionName" : {
          "type" : "string",
          "description" : "The name of index region"
        }
      }
    },
    "CadastreHousingValueConveyance" : {
      "type" : "object",
      "properties" : {
        "dateRegistered" : {
          "description" : "The date the conveyance was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "documentCode" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        },
        "useOfCadastre" : {
          "description" : "The use of the cadastre as defined by the purchaser",
          "$ref" : "#/definitions/Code"
        },
        "dwellingType" : {
          "description" : "The type of the dwelling as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "purchasePrice" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The purchase price of the conveyance"
        },
        "numberOfCadastresInConveyance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of cadastres in the conveyance"
        },
        "appliesToEntireProperty" : {
          "type" : "boolean",
          "description" : "If the conveyance applies to entire cadastre"
        },
        "conveyanceIndexDate" : {
          "description" : "The index date related to the time the conveyance occured",
          "$ref" : "#/definitions/ApiDate"
        },
        "conveyanceIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The index value related to the time the conveyance occured"
        },
        "currentIndexDate" : {
          "description" : "The current index date",
          "$ref" : "#/definitions/ApiDate"
        },
        "currentIndexValue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The current index value"
        },
        "indexRegion" : {
          "type" : "string",
          "description" : "The code of index region"
        },
        "indexRegionName" : {
          "type" : "string",
          "description" : "The name of index region"
        },
        "indexSupplier" : {
          "description" : "The source of the index. Current possible values=SSB",
          "$ref" : "#/definitions/Code"
        },
        "indexSupplierCode" : {
          "description" : "The supplier code of the used index",
          "$ref" : "#/definitions/Code"
        },
        "calculatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated value"
        }
      }
    },
    "CadastreHousingValueItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreHousingValueLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/CadastreHousingValueItemLink"
        },
        "cadastre" : {
          "description" : "The current cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "conveyanceInCalculationBasis" : {
          "description" : "Link to the conveyance used in basis for calculation",
          "$ref" : "#/definitions/CadastreConveyanceItemLink"
        },
        "conveyances" : {
          "description" : "Link to the conveyances",
          "$ref" : "#/definitions/CadastreConveyanceListLink"
        },
        "addresses" : {
          "description" : "Link to the addresses",
          "$ref" : "#/definitions/AddressListLink"
        },
        "affairs" : {
          "description" : "Link to the affairs",
          "$ref" : "#/definitions/AffairListLink"
        },
        "buildings" : {
          "description" : "Link to the buildings",
          "$ref" : "#/definitions/BuildingListLink"
        },
        "presentationAddress" : {
          "description" : "Link to presentation address of the current cadastre",
          "$ref" : "#/definitions/AddressItemLink"
        }
      }
    },
    "CadastreHousingValueListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CadastreHousingValue"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreHousingValueItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreHousingValue"
        }
      }
    },
    "Customer" : {
      "type" : "object",
      "required" : [ "active", "activeFrom", "activeTo", "defaultMonthsOfData", "maxMonthsOfData", "showFilter", "userId", "userName", "xMax", "xMin", "yMax", "yMin" ],
      "properties" : {
        "userId" : {
          "type" : "string",
          "description" : "The identifier of the user"
        },
        "externalCustomerId" : {
          "type" : "string",
          "description" : "The external customer id"
        },
        "userName" : {
          "type" : "string",
          "description" : "The name of the user"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Whether the user is active"
        },
        "activeFrom" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The start date of the activation"
        },
        "activeTo" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The end date of the activation"
        },
        "defaultMonthsOfData" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The amount of historical data fetched by default expressed in months"
        },
        "maxMonthsOfData" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum amount of historical data that can be fetched expressed in months"
        },
        "showFilter" : {
          "type" : "boolean",
          "description" : "Whether the filter should be enabled"
        },
        "xMin" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lower left x coordinate"
        },
        "yMin" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lower left y coordinate"
        },
        "xMax" : {
          "type" : "number",
          "format" : "double",
          "description" : "Upper right x coordinate"
        },
        "yMax" : {
          "type" : "number",
          "format" : "double",
          "description" : "Upper right y coordinate"
        },
        "municipalities" : {
          "type" : "array",
          "description" : "A set of defined municipalities for this customer",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "customerCredentials" : {
          "description" : "Credentials for this customer",
          "$ref" : "#/definitions/CustomerCredentials"
        }
      }
    },
    "CustomerCredentials" : {
      "type" : "object",
      "required" : [ "clientId", "clientSecret", "password" ],
      "properties" : {
        "password" : {
          "type" : "string",
          "description" : "The password of the customer"
        },
        "clientId" : {
          "type" : "string",
          "description" : "The clientId for a customer"
        },
        "clientSecret" : {
          "type" : "string",
          "description" : "The clientSecret for a customer"
        },
        "referrerCheck" : {
          "type" : "string",
          "description" : "The referrer check for the iframe parent page"
        }
      }
    },
    "CustomerItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Customer"
        }
      }
    },
    "CustomerListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Customer"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "Scope" : {
      "type" : "object",
      "required" : [ "scopes" ],
      "properties" : {
        "scopes" : {
          "type" : "object",
          "description" : "A list of the resources a scope yields",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "BuildingChange" : {
      "type" : "object",
      "required" : [ "buildingChangeCode", "hasElevator", "ident", "key", "links", "municipalityNumber", "numberOfFloors", "numberOfUnits" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/BuildingChangeIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The building number and serial for a building change"
        },
        "updatedDate" : {
          "description" : "The building change update date",
          "$ref" : "#/definitions/ApiDate"
        },
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality number"
        },
        "municipality" : {
          "description" : "The municipality this building resides in",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "numberOfUnits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of occupied units in this building change"
        },
        "hasElevator" : {
          "type" : "boolean",
          "description" : "If the building has a registered elevator",
          "enum" : [ true, false ]
        },
        "numberOfFloors" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of floors in the building"
        },
        "totalFloorSpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total usable area inside the building change"
        },
        "totalAreaOfPrimarySpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total living area inside the building change"
        },
        "areaOfSecondarySpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area not used for living inside the building change"
        },
        "incompleteArea" : {
          "type" : "boolean",
          "description" : "Whether the area is measured fully or not"
        },
        "builtUpArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "Area that is built on"
        },
        "totalArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building change, including walls"
        },
        "totalAreaHousing" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building change used for living"
        },
        "totalAlternateArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building change not used for living"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "buildingStatus" : {
          "description" : "The building status",
          "$ref" : "#/definitions/Code"
        },
        "typeOfBuilding" : {
          "description" : "The type of this building",
          "$ref" : "#/definitions/Code"
        },
        "industryGroup" : {
          "description" : "The industrial use of this building",
          "$ref" : "#/definitions/Code"
        },
        "waterSupplyType" : {
          "description" : "The source of water used by this building",
          "$ref" : "#/definitions/Code"
        },
        "dischargeType" : {
          "description" : "The type of discharge used by this building",
          "$ref" : "#/definitions/Code"
        },
        "originType" : {
          "description" : "How this building was registered into the system",
          "$ref" : "#/definitions/Code"
        },
        "buildingChangeCode" : {
          "description" : "The type of modifications made to this building",
          "$ref" : "#/definitions/Code"
        },
        "heatingType" : {
          "type" : "array",
          "description" : "The type of heating this building primarily uses",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "energySourceType" : {
          "type" : "array",
          "description" : "The type of energy source this building primarily uses",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "approvedDate" : {
          "description" : "The date the building plans were approved",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredApprovedDate" : {
          "description" : "The registered date the building plans were approved",
          "$ref" : "#/definitions/ApiDate"
        },
        "startedDate" : {
          "description" : "The date the construction of this building started",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredStartedDate" : {
          "description" : "The registered date the construction of this building started",
          "$ref" : "#/definitions/ApiDate"
        },
        "usedDate" : {
          "description" : "The date this building was taken taken into use",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredUsedDate" : {
          "description" : "The registered date this building was taken taken into use",
          "$ref" : "#/definitions/ApiDate"
        },
        "floors" : {
          "type" : "array",
          "description" : "The registered floor information for this building.",
          "items" : {
            "$ref" : "#/definitions/Floor"
          }
        },
        "buildingStatusHistory" : {
          "type" : "array",
          "description" : "The building change status history",
          "items" : {
            "$ref" : "#/definitions/BuildingStatusHistory"
          }
        },
        "links" : {
          "$ref" : "#/definitions/BuildingChangeLinks"
        }
      }
    },
    "BuildingChangeIdent" : {
      "type" : "object",
      "required" : [ "buildingIdent", "buildingNumber", "buildingSerialNumber" ],
      "properties" : {
        "buildingNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A unique number that identifies a building"
        },
        "buildingSerialNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A serial incremented once for each building change"
        },
        "buildingIdent" : {
          "$ref" : "#/definitions/BuildingIdent"
        }
      }
    },
    "BuildingChangeItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "BuildingChangeLinks" : {
      "type" : "object",
      "required" : [ "building", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/BuildingChangeItemLink"
        },
        "building" : {
          "description" : "The building this change affects",
          "$ref" : "#/definitions/BuildingItemLink"
        },
        "cadastres" : {
          "description" : "The cadastre this building is placed upon",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "addresses" : {
          "description" : "The addresses connected to this building",
          "$ref" : "#/definitions/AddressListLink"
        },
        "units" : {
          "description" : "The units inside this building",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitListLink"
        },
        "contacts" : {
          "description" : "The registered contacts to the construction of this building change",
          "$ref" : "#/definitions/PersonListLink"
        },
        "developers" : {
          "description" : "The registered developers of this building change",
          "$ref" : "#/definitions/PersonListLink"
        }
      }
    },
    "BuildingChangeListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/BuildingChange"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "BuildingIdent" : {
      "type" : "object",
      "required" : [ "buildingNumber" ],
      "properties" : {
        "buildingNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A unique number that identifies a building"
        }
      }
    },
    "BuildingItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "BuildingStatusHistory" : {
      "type" : "object",
      "required" : [ "buildingStatus", "buildingStatusDate", "buildingStatusRegisteredDate" ],
      "properties" : {
        "buildingStatus" : {
          "$ref" : "#/definitions/Code"
        },
        "buildingStatusDate" : {
          "$ref" : "#/definitions/ApiDate"
        },
        "buildingStatusRegisteredDate" : {
          "$ref" : "#/definitions/ApiDate"
        }
      }
    },
    "Floor" : {
      "type" : "object",
      "required" : [ "eventStatus", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/FloorIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The building number, floor number and code"
        },
        "eventStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Whether this floor is active (0) or historical (1)",
          "minimum" : 0,
          "maximum" : 1
        },
        "numberOfDwellingUnits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of apartments / dwelling units on the floor"
        },
        "totalAlternateArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of alternative space."
        },
        "totalArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside the housing, including walls"
        },
        "totalAreaHousing" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside the housing, including walls"
        },
        "totalAreaOfPrimarySpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside the primary rooms, excluding walls"
        },
        "totalFloorSpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside the floor, excluding walls"
        },
        "totalUsableArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside the floor, excluding walls"
        },
        "links" : {
          "$ref" : "#/definitions/FloorLinks"
        }
      }
    },
    "FloorIdent" : {
      "type" : "object",
      "required" : [ "buildingNumber", "floorLevelCode", "floorNumber" ],
      "properties" : {
        "buildingNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The building number"
        },
        "floorNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The floor number",
          "minimum" : 0,
          "maximum" : 99
        },
        "floorLevelCode" : {
          "description" : "The floor level code",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "FloorItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "FloorLinks" : {
      "type" : "object",
      "required" : [ "building", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/FloorItemLink"
        },
        "building" : {
          "description" : "The building this floor is within",
          "$ref" : "#/definitions/BuildingItemLink"
        }
      }
    },
    "PersonListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SeparatelyOccupiedUnitListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "BuildingChangeItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/BuildingChange"
        }
      }
    },
    "Cookies" : {
      "type" : "object"
    },
    "HttpEntity" : {
      "type" : "object",
      "required" : [ "knownEmpty" ],
      "properties" : {
        "knownEmpty" : {
          "type" : "boolean"
        }
      }
    },
    "Result" : {
      "type" : "object",
      "required" : [ "body", "cookies", "flash", "session" ],
      "properties" : {
        "body" : {
          "$ref" : "#/definitions/HttpEntity"
        },
        "flash" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "session" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "cookies" : {
          "$ref" : "#/definitions/Cookies"
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "active", "defaultMonthsOfData", "hasMunicipalities", "maxMonthsOfData", "showFilter", "userName", "xMax", "xMin", "yMax", "yMin" ],
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "The name of the user"
        },
        "active" : {
          "type" : "boolean",
          "description" : "Whether the user is active"
        },
        "defaultMonthsOfData" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The amount of historical data fetched by default expressed in months"
        },
        "maxMonthsOfData" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The maximum amount of historical data that can be fetched expressed in months"
        },
        "showFilter" : {
          "type" : "boolean",
          "description" : "Whether the filter should be enabled"
        },
        "xMin" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lower left x coordinate"
        },
        "yMin" : {
          "type" : "number",
          "format" : "double",
          "description" : "Lower left y coordinate"
        },
        "xMax" : {
          "type" : "number",
          "format" : "double",
          "description" : "Upper right x coordinate"
        },
        "yMax" : {
          "type" : "number",
          "format" : "double",
          "description" : "Upper right y coordinate"
        },
        "hasMunicipalities" : {
          "type" : "boolean",
          "description" : "True if the customer has access to municipalities"
        }
      }
    },
    "UserItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/User"
        }
      }
    },
    "CodeField" : {
      "type" : "object",
      "required" : [ "codes", "key", "links" ],
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "The codefield type"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of the codefield"
        },
        "codes" : {
          "type" : "array",
          "description" : "A list containing the various codes that may occur in the codefield",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "links" : {
          "$ref" : "#/definitions/CodeLinks"
        }
      }
    },
    "CodeFieldItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CodeField"
        }
      }
    },
    "CodeFieldListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CodeField"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreReference" : {
      "type" : "object",
      "properties" : {
        "ident" : {
          "description" : "Ident of cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "Key of cadastre"
        }
      }
    },
    "CityDistrict" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Key of city district"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of city district"
        }
      }
    },
    "HousingCooperative" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/HousingCooperativeIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The organization number of the cooperative"
        },
        "housingCooperativeName" : {
          "type" : "string",
          "description" : "The name of the cooperative"
        },
        "numberOfShares" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Amount of shares in housing cooperative"
        },
        "extent" : {
          "description" : "DEPRECATED. The calculated extent of the cooperative",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "The calculated extent of the cooperative as GeoJSON",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/HousingCooperativeLinks"
        }
      }
    },
    "HousingCooperativeIdent" : {
      "type" : "object",
      "required" : [ "organizationNumber" ],
      "properties" : {
        "organizationNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The organisation that owns the cooperative"
        }
      }
    },
    "HousingCooperativeItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "HousingCooperativeLinks" : {
      "type" : "object",
      "required" : [ "ownedCadastres", "owner", "self", "shares" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/HousingCooperativeItemLink"
        },
        "owner" : {
          "description" : "Owner of this housing cooperative",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "shares" : {
          "description" : "Shares in this housing cooperative",
          "$ref" : "#/definitions/ShareListLink"
        },
        "ownedCadastres" : {
          "description" : "Cadastres owned by this housing cooperative",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "Share" : {
      "type" : "object",
      "required" : [ "housingCooperative", "ident", "isHistoricalRegisteredLand", "key", "links", "noHistoryForShare" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "extent" : {
          "description" : "DEPRECATED. The extent of this share",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "DEPRECATED. The extent of this share in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "isHistoricalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether this share is active (false) or historical (true)"
        },
        "noHistoryForShare" : {
          "type" : "boolean",
          "description" : "Is history for share available"
        },
        "housingCooperative" : {
          "description" : "The housing cooperative this share belongs to",
          "$ref" : "#/definitions/HousingCooperative"
        },
        "municipality" : {
          "description" : "The municipality this share belongs to",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "zeroConcession" : {
          "type" : "boolean",
          "description" : "Liability to reside on the share"
        },
        "zeroConcessionMessage" : {
          "type" : "string",
          "description" : "Extra information you should check if share is registered with zeroConcession"
        },
        "maxShareLevel" : {
          "description" : "The maximum share level of this share ownerships",
          "$ref" : "#/definitions/LevelCode"
        },
        "cityDistrict" : {
          "description" : "The city district this share is located in",
          "$ref" : "#/definitions/CityDistrict"
        },
        "landLot" : {
          "description" : "Land lot. A reference to the cadastre at the ground where the share is located",
          "$ref" : "#/definitions/CadastreReference"
        },
        "links" : {
          "$ref" : "#/definitions/ShareLinks"
        }
      }
    },
    "ShareLandRegistryItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareLinks" : {
      "type" : "object",
      "required" : [ "conveyances", "housingCooperative", "owners", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "owners" : {
          "description" : "List of share owners",
          "$ref" : "#/definitions/PersonListLink"
        },
        "conveyances" : {
          "description" : "List of conveyances of this share",
          "$ref" : "#/definitions/ShareConveyanceListLink"
        },
        "address" : {
          "description" : "The address of the share",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "unit" : {
          "description" : "The unit from the technical land registry this share is registered on",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitItemLink"
        },
        "landLot" : {
          "description" : "Land lot. The cadastre at the ground where the share is located",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "ownedByOwnerships" : {
          "description" : "DEPRECATED. Ownerships where this housing cooperative share is being owned",
          "$ref" : "#/definitions/ShareOwnershipListLink"
        },
        "ownershipsOwningThisShare" : {
          "description" : "Ownerships where this housing cooperative share is being owned",
          "$ref" : "#/definitions/ShareOwnershipListLink"
        },
        "housingCooperative" : {
          "description" : "The housing cooperative this share belongs to",
          "$ref" : "#/definitions/HousingCooperativeItemLink"
        },
        "sharePDF" : {
          "description" : "A PDF of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "historicalSharePDF" : {
          "description" : "A historical PDF of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "titlePDF" : {
          "description" : "A PDF of the title of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "historicalTitlePDF" : {
          "description" : "A historical PDF of the title of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "mortgagePDF" : {
          "description" : "A PDF of the mortgages of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "historicalMortgagePDF" : {
          "description" : "A historical PDF of the mortgages of this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "shareInfoPDF" : {
          "description" : "A PDF with info on this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "historicalShareInfoPDF" : {
          "description" : "A historical PDF with info on this share from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "liensCalculation" : {
          "description" : "The lien calculation for this share",
          "$ref" : "#/definitions/ShareLiensCalculationItemLink"
        },
        "housingValue" : {
          "description" : "The housing value for this share",
          "$ref" : "#/definitions/ShareHousingValueItemLink"
        },
        "landRegistry" : {
          "description" : "The presentation of the land registry for this share",
          "$ref" : "#/definitions/ShareLandRegistryItemLink"
        }
      }
    },
    "ShareListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Share"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ShareItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Share"
        }
      }
    },
    "POCGeoJSONResponse" : {
      "type" : "object",
      "required" : [ "geoJSON" ],
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "geojson" : {
          "description" : "Contains the GeoJSON you've searched for",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geoJSON" : {
          "$ref" : "#/definitions/GeoJSONFeature"
        }
      }
    },
    "POCGeoJSONResponseCollection" : {
      "type" : "object",
      "required" : [ "geoJSONCollection" ],
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "geojson" : {
          "description" : "Contains the GeoJSON FeatureCollection you've searched for",
          "$ref" : "#/definitions/GeoJSONFeatureCollection"
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a GeoJSON features list",
          "$ref" : "#/definitions/Pagination"
        },
        "geoJSONCollection" : {
          "$ref" : "#/definitions/GeoJSONFeatureCollection"
        }
      }
    },
    "CadastreScoreRight" : {
      "type" : "object",
      "required" : [ "currentAmounts", "documentCode", "documentStatus", "documentType", "ident", "isActive", "key", "links", "originalAmounts", "rightType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "isEnforcement" : {
          "type" : "boolean",
          "description" : "Indicates if the right is an enforcement"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "deletedDate" : {
          "description" : "Deletion date",
          "$ref" : "#/definitions/ApiDate"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "timeDeleted" : {
          "description" : "Deletion time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "currentAmounts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "originalAmounts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "description" : "The mortgagees",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "plaintiffs" : {
          "type" : "array",
          "description" : "The plaintiffs",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "defendants" : {
          "type" : "array",
          "description" : "The defendants",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "legalRepresentatives" : {
          "type" : "array",
          "description" : "The legal representatives",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "administration" : {
          "description" : "The administrators of the plaintiffs possessions",
          "$ref" : "#/definitions/Administration"
        },
        "personsWithLicense" : {
          "type" : "array",
          "description" : "List of persons that have license",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "cadastresWithLicense" : {
          "type" : "array",
          "description" : "List of cadastres that have license",
          "items" : {
            "$ref" : "#/definitions/CadastreLevelRelation"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ScoreRightLinks"
        }
      }
    },
    "CustomerScore" : {
      "type" : "object",
      "required" : [ "customerName", "ident", "isScorable", "key", "links", "ownedCadastresWithoutPledge", "ownedSharesWithoutPledge" ],
      "properties" : {
        "ident" : {
          "description" : "The ident for this resource",
          "$ref" : "#/definitions/PersonIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for this resource"
        },
        "customerName" : {
          "type" : "string",
          "description" : "The customers name"
        },
        "isScorable" : {
          "type" : "boolean",
          "description" : "Indicates if scoring for this person is possible"
        },
        "reasonNotScorable" : {
          "type" : "string",
          "description" : "If not scorable, this string contains the reason"
        },
        "overallRisk" : {
          "description" : "The overall/total risk of providing a loan to this person",
          "$ref" : "#/definitions/Code"
        },
        "ownedCadastresWithoutPledge" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of cadastres not mortgaged / containing no liens"
        },
        "ownedSharesWithoutPledge" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of shares not mortgaged / containing no liens"
        },
        "highRisks" : {
          "type" : "object",
          "description" : "Collection of all possible high risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/Risk"
          }
        },
        "mediumRisks" : {
          "type" : "object",
          "description" : "Collection of all possible medium risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/Risk"
          }
        },
        "lowRisks" : {
          "type" : "object",
          "description" : "Collection of all possible low risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/Risk"
          }
        },
        "mortgagesSummary" : {
          "description" : "Summary of the persons mortgages",
          "$ref" : "#/definitions/CustomerScoreMortgagesSummary"
        },
        "links" : {
          "$ref" : "#/definitions/CustomerScoreLinks"
        }
      }
    },
    "CustomerScoreItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CustomerScore"
        }
      }
    },
    "CustomerScoreLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/CustomerScoreItemLink"
        },
        "customer" : {
          "description" : "Link to the current customer",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "cadastreOwnerships" : {
          "description" : "The person’s ownerships on cadastres",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "shareOwnerships" : {
          "description" : "The person’s ownerships on housing cooperative shares",
          "$ref" : "#/definitions/ShareOwnershipListLink"
        },
        "homeEquity" : {
          "description" : "The person’s homeequity",
          "$ref" : "#/definitions/HomeEquityItemLink"
        }
      }
    },
    "CustomerScoreMortgagesSummary" : {
      "type" : "object",
      "required" : [ "activeSummary", "historicalSummary" ],
      "properties" : {
        "activeSummary" : {
          "description" : "Summary of active mortgages",
          "$ref" : "#/definitions/CustomerScoreMortgagesSummaryDetails"
        },
        "historicalSummary" : {
          "description" : "Summary of historical mortgages",
          "$ref" : "#/definitions/CustomerScoreMortgagesSummaryDetails"
        }
      }
    },
    "CustomerScoreMortgagesSummaryDetails" : {
      "type" : "object",
      "required" : [ "mortgagesOnCadastres", "mortgagesOnShares" ],
      "properties" : {
        "sumMortgage" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum of mortgages"
        },
        "numberOfMortgages" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of mortgages"
        },
        "sumMortgageCadastre" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum of mortgages on cadastres"
        },
        "numberOfMortgagesOnCadastres" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of mortgages on cadastres"
        },
        "sumMortgageShare" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum of mortgages on housing cooperative shares"
        },
        "numberOfMortgagesOnShares" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of mortgages on housing cooperative shares"
        },
        "hasPledgeSecuringBond" : {
          "type" : "boolean",
          "description" : "If has pledge securing bond"
        },
        "hasActivePledgingStatement" : {
          "type" : "boolean",
          "description" : "If has active pledging statement"
        },
        "hasListedMortgage" : {
          "type" : "boolean",
          "description" : "If has listed mortgage"
        },
        "hasMortgageWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If mortgages have currency code <> 'NOK'"
        },
        "mortgagesOnCadastres" : {
          "type" : "object",
          "description" : "Mortgages on cadastres",
          "additionalProperties" : {
            "$ref" : "#/definitions/CadastreScoreRight"
          }
        },
        "mortgagesOnShares" : {
          "type" : "object",
          "description" : "Mortgages on shares",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareScoreRight"
          }
        }
      }
    },
    "Risk" : {
      "type" : "object",
      "required" : [ "description", "isPresent", "riskOnObject", "shortDescription" ],
      "properties" : {
        "isPresent" : {
          "type" : "boolean",
          "description" : "Indicating whether this risk is present or not"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of this risk"
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "A short description of this risk"
        },
        "riskOnObject" : {
          "type" : "string",
          "description" : "Type of object this risk is related to"
        },
        "cadastreRights" : {
          "type" : "array",
          "description" : "If risk found in the Land Registry for fixed property, this list contains the creation of rights that is the reason for the risk.",
          "items" : {
            "$ref" : "#/definitions/CadastreScoreRight"
          }
        },
        "shareRights" : {
          "type" : "array",
          "description" : "If risk found in the Land Registry for cooperative shares, this list contains the creation of rights that is the reason for the risk.",
          "items" : {
            "$ref" : "#/definitions/ShareScoreRight"
          }
        }
      }
    },
    "ScoreRightLinks" : {
      "type" : "object",
      "properties" : {
        "creationOfRightPDF" : {
          "description" : "PDF for this Creation of right",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "ShareRelation" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "isActive", "shareIdent", "shareKey" ],
      "properties" : {
        "shareIdent" : {
          "$ref" : "#/definitions/ShareIdent"
        },
        "shareKey" : {
          "type" : "string"
        },
        "housingCooperativeName" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean"
        }
      }
    },
    "ShareScoreRight" : {
      "type" : "object",
      "required" : [ "currentAmounts", "documentCode", "documentHolder", "documentStatus", "documentType", "ident", "isActive", "key", "links", "originalAmounts", "rightType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareCreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "isEnforcement" : {
          "type" : "boolean",
          "description" : "Indicates if the right is an enforcement"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "deletedDate" : {
          "description" : "Deletion date",
          "$ref" : "#/definitions/ApiDate"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "currentAmounts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "originalAmounts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Money"
          }
        },
        "mortgagees" : {
          "type" : "array",
          "description" : "The mortgagees",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "plaintiffs" : {
          "type" : "array",
          "description" : "The plaintiffs",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "defendants" : {
          "type" : "array",
          "description" : "The defendants",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "legalRepresentatives" : {
          "type" : "array",
          "description" : "The legal representatives",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "documentHolder" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "administration" : {
          "description" : "The administrators of the plaintiffs possessions",
          "$ref" : "#/definitions/Administration"
        },
        "personsWithLicense" : {
          "type" : "array",
          "description" : "List of persons that have license",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        },
        "sharesWithLicense" : {
          "type" : "array",
          "description" : "List of shares that have license",
          "items" : {
            "$ref" : "#/definitions/ShareRelation"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ShareScoreRightLinks"
        }
      }
    },
    "ShareScoreRightLinks" : {
      "type" : "object",
      "properties" : {
        "creationOfRightPDF" : {
          "description" : "PDF for this Creation of right",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "ShareRisk" : {
      "type" : "object",
      "required" : [ "description", "isPresent", "rights", "riskOnObject", "shortDescription" ],
      "properties" : {
        "isPresent" : {
          "type" : "boolean",
          "description" : "Indicating whether this risk is present or not"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of this risk"
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "A short description of this risk"
        },
        "riskOnObject" : {
          "type" : "string",
          "description" : "Type of object this risk is related to"
        },
        "rights" : {
          "type" : "object",
          "description" : "If risk found in the Land Registry for cooperative shares, this map contains the creation of rights that is the reason for the risk.",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareScoreRight"
          }
        }
      }
    },
    "ShareScore" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "description" : "The ident for this resource",
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for this resource"
        },
        "isScorable" : {
          "type" : "boolean",
          "description" : "Indicates if scoring for this share is possible"
        },
        "reasonNotScorable" : {
          "type" : "string",
          "description" : "If not scorable, this string contains the reason"
        },
        "overallRisk" : {
          "description" : "The overall/total risk of providing a loan to the person owning this share",
          "$ref" : "#/definitions/Code"
        },
        "highRisks" : {
          "type" : "object",
          "description" : "Collection of all possible high risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRisk"
          }
        },
        "mediumRisks" : {
          "type" : "object",
          "description" : "Collection of all possible medium risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRisk"
          }
        },
        "lowRisks" : {
          "type" : "object",
          "description" : "Collection of all possible low risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRisk"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ShareScoreLinks"
        }
      }
    },
    "ShareScoreItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareScoreItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareScore"
        }
      }
    },
    "ShareScoreLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/ShareScoreItemLinkV2"
        },
        "share" : {
          "description" : "Link to the current share",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "liensCalculation" : {
          "description" : "Link to the share's liens calculation",
          "$ref" : "#/definitions/ShareLiensCalculationItemLink"
        }
      }
    },
    "ShareConveyance" : {
      "type" : "object",
      "required" : [ "documentCode", "documentStatus", "documentType", "ident", "isActive", "key", "links", "rightType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareCreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "purchasePrice" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The purchase price"
        },
        "hasMarketValue" : {
          "type" : "boolean",
          "description" : "Whether the purchase price was at market value"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        },
        "numberOfSharesInConveyance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of shares related to this conveyance"
        },
        "appliesToEntireShare" : {
          "type" : "boolean",
          "description" : "If this conveyance applies to entire shares. All ownership fractions are whole."
        },
        "links" : {
          "$ref" : "#/definitions/ShareConveyanveLinks"
        }
      }
    },
    "ShareConveyanceListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/ShareConveyance"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ShareConveyanveLinks" : {
      "type" : "object",
      "required" : [ "self", "shares" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/ShareConveyanceItemLink"
        },
        "buyers" : {
          "description" : "The list of buyers",
          "$ref" : "#/definitions/PersonListLink"
        },
        "sellers" : {
          "description" : "The list of sellers",
          "$ref" : "#/definitions/PersonListLink"
        },
        "shares" : {
          "description" : "The list of housing cooperative shares this conveyance applies to",
          "$ref" : "#/definitions/ShareListLink"
        }
      }
    },
    "ShareConveyanceItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareConveyance"
        }
      }
    },
    "CadastreConveyance" : {
      "type" : "object",
      "required" : [ "documentCode", "documentStatus", "documentType", "ident", "isActive", "key", "links", "rightType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "dateRegistered" : {
          "description" : "Registration date",
          "$ref" : "#/definitions/ApiDate"
        },
        "isActive" : {
          "type" : "boolean",
          "description" : "Indicates if the right is active. If not its historical"
        },
        "rightType" : {
          "description" : "Deprecated. Use document type instead",
          "$ref" : "#/definitions/Code"
        },
        "documentCode" : {
          "description" : "Deprecated. Use documentType instead. After 18/4-2017 code in this field will no longer be unique for identifying the type of document.",
          "$ref" : "#/definitions/Code"
        },
        "documentType" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "documentStatus" : {
          "description" : "The status of the document",
          "$ref" : "#/definitions/Code"
        },
        "timeRegistered" : {
          "description" : "Registration time",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "isElectronicallySubmitted" : {
          "type" : "boolean",
          "description" : "Indicates if the right was submitted electronically"
        },
        "priorityType" : {
          "description" : "Right priority type",
          "$ref" : "#/definitions/Code"
        },
        "textLines" : {
          "type" : "array",
          "description" : "Text embedded on the document",
          "items" : {
            "type" : "string"
          }
        },
        "feeBasis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Basis for calculation of fee"
        },
        "feeCause" : {
          "description" : "Cause of fee",
          "$ref" : "#/definitions/Code"
        },
        "purchasePrice" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The purchase price"
        },
        "currency" : {
          "description" : "The currency of the purchase",
          "$ref" : "#/definitions/Code"
        },
        "hasMarketValue" : {
          "type" : "boolean",
          "description" : "Whether the purchase price was at market value"
        },
        "containsBuilding" : {
          "type" : "boolean",
          "description" : "Whether the realty bought contains one or more buildings"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        },
        "numberOfCadastresInConveyance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of cadastres related to this conveyance"
        },
        "appliesToEntireCadastre" : {
          "type" : "boolean",
          "description" : "If this conveyance applies to entire cadastres. All ownership fractions are whole."
        },
        "links" : {
          "$ref" : "#/definitions/CadastreConveyanceLinks"
        }
      }
    },
    "CadastreConveyanceLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/CadastreConveyanceItemLink"
        },
        "buyers" : {
          "description" : "The list of buyers",
          "$ref" : "#/definitions/PersonListLink"
        },
        "sellers" : {
          "description" : "The list of sellers",
          "$ref" : "#/definitions/PersonListLink"
        },
        "cadastres" : {
          "description" : "The list of cadastres this conveyance applies to",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "CadastreConveyanceListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CadastreConveyance"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreConveyanceItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreConveyance"
        }
      }
    },
    "StreetListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Street"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "StreetItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Street"
        }
      }
    },
    "PersonSearch" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/PersonIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "An anonymous person id"
        },
        "birthday" : {
          "type" : "string",
          "description" : "DEPRECATED The date of birth for this person"
        },
        "dateOfBirth" : {
          "description" : "The date of birth for this person",
          "$ref" : "#/definitions/ApiDate"
        },
        "organizationNumber" : {
          "type" : "string",
          "description" : "The organization number of this company"
        },
        "givenName" : {
          "type" : "string",
          "description" : "The first name of a person"
        },
        "middleName" : {
          "type" : "string",
          "description" : "The middle name of a person"
        },
        "familyName" : {
          "type" : "string",
          "description" : "The last name of a person"
        },
        "name" : {
          "type" : "string",
          "description" : "The combined name of a person"
        },
        "location" : {
          "description" : "A location connected to the person based on the living address",
          "$ref" : "#/definitions/Location"
        },
        "businessaddress" : {
          "type" : "string",
          "description" : "DEPRECATED A business address for an organization"
        },
        "businessAddress" : {
          "type" : "string",
          "description" : "A business address for an organization"
        },
        "dsfState" : {
          "description" : "The DSF state of this person",
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/PersonSearchLinks"
        }
      }
    },
    "PersonSearchLinks" : {
      "type" : "object",
      "required" : [ "ownedCadastres", "ownedShares", "persons" ],
      "properties" : {
        "persons" : {
          "description" : "A lookup link to person",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "ownedCadastres" : {
          "description" : "The cadastres owned by this person",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "ownedShares" : {
          "description" : "The shares owned by this person",
          "$ref" : "#/definitions/ShareListLink"
        },
        "residence" : {
          "description" : "The place this person lives",
          "$ref" : "#/definitions/AddressItemLink"
        }
      }
    },
    "PersonSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/PersonSearch"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreSearch" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "key" : {
          "type" : "string"
        },
        "extent" : {
          "description" : "DEPRECATED. The extent of this cadastre",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "The extent of this cadastre in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "isHistoricalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is historical in the land registry"
        },
        "isHistoricalTechnicalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is historical in the technical land registry"
        },
        "isTechnicalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is registered in the technical land registry"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreSearchLinks"
        }
      }
    },
    "CadastreSearchLinks" : {
      "type" : "object",
      "required" : [ "cadastre" ],
      "properties" : {
        "cadastre" : {
          "description" : "Lookup link to cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "owners" : {
          "description" : "Any owners of this cadastre",
          "$ref" : "#/definitions/PersonListLink"
        },
        "addresses" : {
          "description" : "The addresses of this cadastre",
          "$ref" : "#/definitions/AddressListLink"
        }
      }
    },
    "CadastreSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CadastreSearch"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "District" : {
      "type" : "object",
      "required" : [ "districtName", "eventStatus", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/DistrictIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The district number, code and municipality"
        },
        "eventStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Whether this district is active (0) or historical (1)",
          "minimum" : 0,
          "maximum" : 1
        },
        "municipality" : {
          "description" : "The municipality this building resides in",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "districtName" : {
          "type" : "string",
          "description" : "The name of the district"
        },
        "links" : {
          "$ref" : "#/definitions/DistrictLinks"
        }
      }
    },
    "DistrictIdent" : {
      "type" : "object",
      "required" : [ "districtCode", "districtNumber", "municipalityNumber" ],
      "properties" : {
        "districtNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The district number"
        },
        "districtCode" : {
          "description" : "The district type",
          "$ref" : "#/definitions/Code"
        },
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality the district is contained in"
        }
      }
    },
    "DistrictItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "DistrictLinks" : {
      "type" : "object",
      "required" : [ "addresses", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/DistrictItemLink"
        },
        "addresses" : {
          "description" : "The addresses connected to this district",
          "$ref" : "#/definitions/AddressListLink"
        }
      }
    },
    "DistrictListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/District"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "DistrictItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/District"
        }
      }
    },
    "CreationOfRightItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CreationOfRight"
        }
      }
    },
    "AddressSearch" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "description" : "The street address ident",
          "$ref" : "#/definitions/StreetAddressIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The municipality, street, address and letter"
        },
        "street" : {
          "description" : "The street of this address",
          "$ref" : "#/definitions/Street"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of the address in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/AddressSearchLinks"
        }
      }
    },
    "AddressSearchLinks" : {
      "type" : "object",
      "required" : [ "address" ],
      "properties" : {
        "address" : {
          "description" : "Lookup link to address",
          "$ref" : "#/definitions/AddressItemLink"
        }
      }
    },
    "ShareSearch" : {
      "type" : "object",
      "required" : [ "address", "housingCooperative", "ident", "isHistoricalRegisteredLand", "key", "links", "municipality" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "extent" : {
          "description" : "DEPRECATED. The extent of this share",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "DEPRECATED. The extent of this share in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "isHistoricalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether this share is active (false) or historical (true)"
        },
        "housingCooperative" : {
          "description" : "The housing cooperative this share belongs to",
          "$ref" : "#/definitions/HousingCooperative"
        },
        "address" : {
          "description" : "Whether this share is active (false) or historical (true)",
          "$ref" : "#/definitions/AddressSearch"
        },
        "municipality" : {
          "description" : "The municipality this share belongs to",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "links" : {
          "$ref" : "#/definitions/ShareSearchLinks"
        }
      }
    },
    "ShareSearchLinks" : {
      "type" : "object",
      "required" : [ "share" ],
      "properties" : {
        "share" : {
          "description" : "Lookup link to share",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "owners" : {
          "description" : "Any owners of this share",
          "$ref" : "#/definitions/PersonListLink"
        },
        "address" : {
          "description" : "The address of this share",
          "$ref" : "#/definitions/AddressItemLink"
        }
      }
    },
    "ShareSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/ShareSearch"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ShareOwnershipItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareOwnership"
        }
      }
    },
    "ShareOwnershipListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/ShareOwnership"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "AddressSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/AddressSearch"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "Agriculture" : {
      "type" : "object",
      "properties" : {
        "updatedDate" : {
          "description" : "When was this data updated",
          "$ref" : "#/definitions/ApiDate"
        },
        "agriculturalArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Agricultural area"
        },
        "otherArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Area where the use is not specified"
        },
        "forestArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Forest area"
        },
        "fullGrownArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Full grown areas"
        },
        "cultivatedArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Cultivated area"
        },
        "pastureArea" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Pasture area"
        },
        "companies" : {
          "type" : "array",
          "description" : "Organisation companies connected to cadastre",
          "items" : {
            "$ref" : "#/definitions/AgricultureCompany"
          }
        }
      }
    },
    "AgricultureCompany" : {
      "type" : "object",
      "properties" : {
        "updatedDate" : {
          "description" : "When was this data updated",
          "$ref" : "#/definitions/ApiDate"
        },
        "orgnr" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Organisation number connected to farm"
        },
        "producerNumber8" : {
          "type" : "string",
          "description" : "Eigth digit producer number"
        },
        "producerNumber10" : {
          "type" : "string",
          "description" : "Ten digit producer number"
        }
      }
    },
    "Cadastre" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "key" : {
          "type" : "string"
        },
        "position" : {
          "description" : "The position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "extent" : {
          "description" : "DEPRECATED. The extent of this cadastre",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "DEPRECATED. The extent of this realty in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "municipality" : {
          "description" : "The municipality this cadastre resides in",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "isSectioned" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is sectioned in the technical land registry"
        },
        "isHistoricalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is historical in the land registry"
        },
        "isHistoricalTechnicalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is historical in the technical land registry"
        },
        "isRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is registered in the land registry"
        },
        "isTechnicalRegisteredLand" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is registered in the technical land registry"
        },
        "propertyType" : {
          "description" : "The cadastre type",
          "$ref" : "#/definitions/Code"
        },
        "establishedDate" : {
          "description" : "The date this cadastre was created",
          "$ref" : "#/definitions/ApiDate"
        },
        "unitName" : {
          "type" : "string",
          "description" : "The name of this cadastre unit"
        },
        "specifiedArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of the cadastre that is specified as opposed to measured area"
        },
        "areaSource" : {
          "description" : "The source of the specified area",
          "$ref" : "#/definitions/Code"
        },
        "unregisteredFarmCommonsArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of a unregistered farm commons"
        },
        "areaSourceForUnregisteredFarmCommons" : {
          "description" : "The source of the unregistered farm commons area",
          "$ref" : "#/definitions/Code"
        },
        "disputedPlotArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of a disputed plot"
        },
        "areaSourceForDisputedPlot" : {
          "description" : "The source of the disputed plot area",
          "$ref" : "#/definitions/Code"
        },
        "sharedArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of a shared area"
        },
        "areaSourceForSharedArea" : {
          "description" : "The source of the shared area",
          "$ref" : "#/definitions/Code"
        },
        "areaMainCadastre" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of the main cadastre, only present on sections"
        },
        "areaSourceForMainCadastre" : {
          "description" : "The source of the shared area",
          "$ref" : "#/definitions/Code"
        },
        "landTaxation" : {
          "type" : "number",
          "description" : "The land taxation was an estimate of the size of a new cadastre and was used to calculate the land tax. This law was repealed in 1980"
        },
        "pointHitch" : {
          "type" : "boolean",
          "description" : "Whether a leasehold is tied to a geographic point (true) or is measured land (false)"
        },
        "newRegistration" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is registered from new land. Most cadastres come from other cadastres"
        },
        "agriculturalCadastre" : {
          "type" : "boolean",
          "description" : "Whether the cadastre is an agricultural cadastre"
        },
        "agriculture" : {
          "description" : "Agricultural information about this cadastre",
          "$ref" : "#/definitions/Agriculture"
        },
        "expired" : {
          "type" : "boolean",
          "description" : "Whether this cadastre has expired"
        },
        "hasActiveLeasedLand" : {
          "type" : "boolean",
          "description" : "Whether there are any active leaseholds on this cadastre"
        },
        "hasNotedComplaint" : {
          "type" : "boolean",
          "description" : "Whether there are registered any noted complaints on this cadastre"
        },
        "hasRegisteredLandAcquisition" : {
          "type" : "boolean",
          "description" : "Whether there are registered land acquisition on this cadastre"
        },
        "hasRegisteredLandConsolidationRequired" : {
          "type" : "boolean",
          "description" : "Whether there are registered land consolidation required on this cadastre"
        },
        "hasOldCadastre" : {
          "type" : "boolean",
          "description" : "Whether it is possible to create an Old Cadastre PDF based on this cadastre"
        },
        "includedInTotalRealEstate" : {
          "type" : "boolean",
          "description" : "Whether this cadastre are included in total real estate"
        },
        "hasSingleHeritage" : {
          "type" : "boolean",
          "description" : "Whether there are registered any single heritage on this cadastre"
        },
        "hasSoilContamination" : {
          "type" : "boolean",
          "description" : "Whether there are registered any soil contamination on this cadastre"
        },
        "hasHousing" : {
          "type" : "boolean",
          "description" : "Whether this cadastre has any separately occupied units of type housing"
        },
        "hasHolidayHome" : {
          "type" : "boolean",
          "description" : "Whether this cadastre has any separately occupied units of type holiday home"
        },
        "zeroConcession" : {
          "type" : "boolean",
          "description" : "Liability to reside on the cadastre"
        },
        "zeroConcessionMessage" : {
          "type" : "string",
          "description" : "Extra information you should check if cadastre is registered with zeroConcession"
        },
        "maxCadastreLevel" : {
          "description" : "The maximum cadastre level of this cadastres ownerships",
          "$ref" : "#/definitions/LevelCode"
        },
        "numberOfPlots" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of plots"
        },
        "sourceSystem" : {
          "description" : "The system in which the cadastre was registered",
          "$ref" : "#/definitions/Code"
        },
        "currentSectioning" : {
          "description" : "If this cadastre is a section, this field contains data about the current sectioning",
          "$ref" : "#/definitions/CadastreSectioning"
        },
        "cityDistrict" : {
          "description" : "The city district this cadastre is located in",
          "$ref" : "#/definitions/CityDistrict"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreLinks"
        }
      }
    },
    "CadastreHousingValueListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreLandRegistryItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "owners" : {
          "description" : "The owners of this cadastre",
          "$ref" : "#/definitions/PersonListLink"
        },
        "buildings" : {
          "description" : "The buildings on this cadastre",
          "$ref" : "#/definitions/BuildingListLink"
        },
        "soilContaminations" : {
          "description" : "The contaminations on this cadastre",
          "$ref" : "#/definitions/SoilContaminationListLink"
        },
        "complaints" : {
          "description" : "The registered complaints on this cadastre",
          "$ref" : "#/definitions/ComplaintListLink"
        },
        "sectionings" : {
          "description" : "The sectionings of this cadastre",
          "$ref" : "#/definitions/SectioningListLink"
        },
        "sections" : {
          "description" : "The sections of this cadastre",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "plots" : {
          "description" : "The plots that this cadastre consists of",
          "$ref" : "#/definitions/PlotListLink"
        },
        "realtyEstateUnits" : {
          "description" : "The realty estate this cadastre belongs to",
          "$ref" : "#/definitions/RealtyEstateUnitListLink"
        },
        "conveyances" : {
          "description" : "The conveyances of this cadastre",
          "$ref" : "#/definitions/CadastreConveyanceListLink"
        },
        "addresses" : {
          "description" : "The addresses on this cadastre",
          "$ref" : "#/definitions/AddressListLink"
        },
        "units" : {
          "description" : "The occpupied units on this cadastre",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitListLink"
        },
        "singleHeritages" : {
          "description" : "The heritages on this cadastre",
          "$ref" : "#/definitions/SingleHeritageListLink"
        },
        "ownedByOwnerships" : {
          "description" : "DEPRECATED. Ownerships where this cadastre is being owned",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "ownershipsOwningThisCadastre" : {
          "description" : "Ownerships where this cadastre is being owned",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "ownedOwnerships" : {
          "description" : "DEPRECATED. Ownerships where this cadastre acts as an owner",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "ownershipsOwnedByThisCadastre" : {
          "description" : "Ownerships where this cadastre acts as an owner",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "unregisteredOwnershipsOwnedByThisCadastre" : {
          "description" : "Unregistered ownerships where this cadastre acts as an owner",
          "$ref" : "#/definitions/UnregisteredOwnershipListLink"
        },
        "unregisteredOwnershipsOwningThisCadastre" : {
          "description" : "Unregistered ownerships where this cadastre is being owned",
          "$ref" : "#/definitions/UnregisteredOwnershipListLink"
        },
        "affairs" : {
          "description" : "The affairs on this cadastre",
          "$ref" : "#/definitions/AffairListLink"
        },
        "cadastrePDF" : {
          "description" : "A PDF of this cadastre from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "cadastreWithPrivilegesPDF" : {
          "description" : "A PDF of this cadastre with privileges from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "historicalCadastrePDF" : {
          "description" : "A historical PDF of this cadastre from the Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "oldCadastrePDF" : {
          "description" : "A PDF of this cadastre from the Old Land Registry. These are hand written.",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "technicalPDF" : {
          "description" : "A PDF of this cadastre from the Technical Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "simpleTechnicalPDF" : {
          "description" : "A simpler PDF of this cadastre from the Technical Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "mapPDF" : {
          "description" : "A PDF with map of this cadastre from the Technical Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "simpleMapPDF" : {
          "description" : "A simple PDF with only a map of this cadastre from the Technical Land Registry",
          "$ref" : "#/definitions/PDFItemLink"
        },
        "mainCadastres" : {
          "description" : "The main cadastres of this section",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "liensCalculation" : {
          "description" : "The lien calculation for this cadastre",
          "$ref" : "#/definitions/CadastreLiensCalculationItemLink"
        },
        "housingValue" : {
          "description" : "The housing value for this cadastre",
          "$ref" : "#/definitions/CadastreHousingValueItemLink"
        },
        "surroundingHousingValues" : {
          "description" : "Housing values surrounding this cadastre",
          "$ref" : "#/definitions/CadastreHousingValueListLink"
        },
        "presentationAddress" : {
          "description" : "The presentation address for this cadastre",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "landRegistry" : {
          "description" : "The presentation of the land registry for this cadastre",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        }
      }
    },
    "CadastreListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Cadastre"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreSectioning" : {
      "type" : "object",
      "properties" : {
        "fraction" : {
          "description" : "Specifies the size of an ownership as a fraction",
          "$ref" : "#/definitions/Fraction"
        },
        "purpose" : {
          "description" : "Purpose of this sectioning",
          "$ref" : "#/definitions/Code"
        },
        "additionalPart" : {
          "description" : "Additional part of this sectioning",
          "$ref" : "#/definitions/Code"
        }
      }
    },
    "ComplaintListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "PlotListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "RealtyEstateUnitListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SectioningListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SingleHeritageListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SoilContaminationListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Cadastre"
        }
      }
    },
    "ValidCadastresLinks" : {
      "type" : "object",
      "properties" : {
        "cadastre" : {
          "description" : "The valid cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        }
      }
    },
    "ValidateCadastre" : {
      "type" : "object",
      "required" : [ "links" ],
      "properties" : {
        "validCadastre" : {
          "type" : "boolean",
          "description" : "Tells whether the cadastre is ok"
        },
        "links" : {
          "$ref" : "#/definitions/ValidCadastresLinks"
        }
      }
    },
    "ValidateCadastreItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ValidateCadastre"
        }
      }
    },
    "Affair" : {
      "type" : "object",
      "required" : [ "affairDocumentDate", "cadastreAffairs", "ident", "key", "landRegistryRegisteredDate", "links", "referenceToMunicipalArchive", "typeOfAffair" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/AffairIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The affair key"
        },
        "typeOfAffair" : {
          "description" : "The type of affair",
          "$ref" : "#/definitions/Code"
        },
        "landRegistryRegisteredDate" : {
          "description" : "The date the affair was registered in the Land registry",
          "$ref" : "#/definitions/ApiDate"
        },
        "affairDocumentDate" : {
          "description" : "The document date of the affair",
          "$ref" : "#/definitions/ApiDate"
        },
        "referenceToMunicipalArchive" : {
          "type" : "string",
          "description" : "An reference to the municipal archive"
        },
        "otherReference" : {
          "type" : "string",
          "description" : "Other reference"
        },
        "cadastreAffairs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CadastreAffair"
          }
        },
        "links" : {
          "$ref" : "#/definitions/AffairLinks"
        }
      }
    },
    "AffairIdent" : {
      "type" : "object",
      "required" : [ "affairSerialNumber" ],
      "properties" : {
        "affairSerialNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The unique serialnumber of an affair"
        }
      }
    },
    "AffairItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "AffairLinks" : {
      "type" : "object",
      "required" : [ "affectedCadastres", "cedingCadastres", "receivingCadastres", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/AffairItemLink"
        },
        "cedingCadastres" : {
          "description" : "The ceding cadastres connected to this affair",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "receivingCadastres" : {
          "description" : "The receiving cadastres connected to this affair",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "affectedCadastres" : {
          "description" : "The affected cadastres connected to this affair",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "AffairListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Affair"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreAffair" : {
      "type" : "object",
      "required" : [ "area", "cadastreIdent", "roleInAffair" ],
      "properties" : {
        "cadastreIdent" : {
          "$ref" : "#/definitions/CadastreIdent"
        },
        "roleInAffair" : {
          "description" : "The role of the affair. Ceder, receiver or affected",
          "$ref" : "#/definitions/Code"
        },
        "area" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area that the cadastre has ceded, received or which has been affected by this affair"
        }
      }
    },
    "AffairItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Affair"
        }
      }
    },
    "CoopInternal" : {
      "type" : "object",
      "required" : [ "fixedValues", "ident", "key", "labelValues", "links", "supplierId" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CoopInternalIdent"
        },
        "key" : {
          "type" : "string"
        },
        "supplierId" : {
          "type" : "string"
        },
        "labelValues" : {
          "type" : "object",
          "description" : "Values for this item. The label on each value depends on the format provided by the supplier",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "fixedValues" : {
          "description" : "Values for this item.",
          "$ref" : "#/definitions/FixedValues"
        },
        "links" : {
          "$ref" : "#/definitions/CoopInternalLinks"
        }
      }
    },
    "CoopInternalIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The internal id for this coop internal"
        }
      }
    },
    "CoopInternalItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CoopInternalItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CoopInternal"
        }
      }
    },
    "CoopInternalLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "$ref" : "#/definitions/CoopInternalItemLink"
        }
      }
    },
    "FixedValues" : {
      "type" : "object",
      "properties" : {
        "internAndelshavernr" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Internal shareholder number. Can appear as Andelsnr, Kundenr or Medlemsnr in labeled values."
        },
        "internAndelsnr" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Internal share number. Can appear as Andelsnummer, Bolignr, Enhet or Index in labeled values."
        },
        "internOrgnr" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Internal organization number. Can appear as Klientnr, Selskapnr or Selskapsnr in labeled values."
        },
        "andelshaverNavn" : {
          "type" : "string",
          "description" : "Shareholder name. Can appear as Firma or Navn in labeled values."
        },
        "borettslagNavn" : {
          "type" : "string",
          "description" : "Housing cooperativ name. Can appear as Klientnavn, Selskap or Selskapsnavn in labeled values."
        },
        "adresse" : {
          "type" : "string",
          "description" : "The address. Can appear as Addresse in labeled values."
        },
        "postnrSted" : {
          "type" : "string",
          "description" : "Postal number and postal place."
        },
        "postnr" : {
          "type" : "string",
          "description" : "Postal number. Can appear as Postnr in labeled values."
        },
        "poststed" : {
          "type" : "string",
          "description" : "Postal place. Can appear as Poststed in labeled values."
        },
        "offAndelshavernr" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Public shareholder number. Can appear as IDnummer in labeled values."
        },
        "offOrgnr" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Official organisation number. Can appear as Foretaknr or Organisasjonsnr in labeled values."
        },
        "matrikkel" : {
          "type" : "string",
          "description" : "Cadastre ident. Can appear as Matrikkel in labeled values."
        },
        "regionId" : {
          "type" : "string",
          "description" : "Region ID. Can appear as Regionid in labeled values."
        }
      }
    },
    "CoopInternalListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CoopInternal"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ExternalLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ExternalLinkSingleHeritage" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SingleHeritage" : {
      "type" : "object",
      "required" : [ "categoryCode", "eventStatus", "heritageType", "ident", "key", "lastUpdatedDate", "links", "preservationTypeCode", "registeredDate" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/SingleHeritageIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The unique heritage serial"
        },
        "eventStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Whether this heritage is active (0) or historical (1)",
          "minimum" : 0,
          "maximum" : 1
        },
        "registeredDate" : {
          "description" : "The date the heritage was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "lastUpdatedDate" : {
          "description" : "The date this data was last updated",
          "$ref" : "#/definitions/ApiDate"
        },
        "categoryCode" : {
          "description" : "What category does this heritage belong to. A general categorization",
          "$ref" : "#/definitions/Code"
        },
        "heritageType" : {
          "description" : "What kind of heritage this is. A specialized categorization",
          "$ref" : "#/definitions/Code"
        },
        "preservationTypeCode" : {
          "description" : "What kind of preservation rules applies to this heritage",
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/SingleHeritageLinks"
        }
      }
    },
    "SingleHeritageIdent" : {
      "type" : "object",
      "required" : [ "localityNumber" ],
      "properties" : {
        "localityNumber" : {
          "type" : "string",
          "description" : "An official unique serial for a single heritage"
        }
      }
    },
    "SingleHeritageItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SingleHeritageLinks" : {
      "type" : "object",
      "required" : [ "self", "singleHeritageWebpage" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/SingleHeritageItemLink"
        },
        "buildings" : {
          "description" : "The buildings connected to this heritage",
          "$ref" : "#/definitions/BuildingListLink"
        },
        "cadastres" : {
          "description" : "The cadastres connected to this heritage",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "singleHeritageWebpage" : {
          "description" : "A link to source-register",
          "$ref" : "#/definitions/ExternalLinkSingleHeritage"
        }
      }
    },
    "SingleHeritageListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/SingleHeritage"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "SingleHeritageItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/SingleHeritage"
        }
      }
    },
    "Municipality" : {
      "type" : "object",
      "required" : [ "ident", "links", "municipalityName", "regionName", "regionNumber" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/MunicipalityIdent"
        },
        "municipalityName" : {
          "type" : "string",
          "description" : "The municipality name"
        },
        "regionNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The region number"
        },
        "regionName" : {
          "type" : "string",
          "description" : "The region name"
        },
        "links" : {
          "$ref" : "#/definitions/MunicipalityLinks"
        }
      }
    },
    "MunicipalityIdent" : {
      "type" : "object",
      "required" : [ "municipalityNumber" ],
      "properties" : {
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A number representing a municipality"
        }
      }
    },
    "MunicipalityItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "MunicipalityItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Municipality"
        }
      }
    },
    "MunicipalityLinks" : {
      "type" : "object",
      "required" : [ "conveyances", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/MunicipalityItemLink"
        },
        "conveyances" : {
          "description" : "The conveyances in this municipality",
          "$ref" : "#/definitions/CadastreConveyanceListLink"
        }
      }
    },
    "MunicipalityListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Municipality"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ConveyanceData" : {
      "type" : "object",
      "properties" : {
        "dateRegistered" : {
          "description" : "The date the conveyance was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "documentCode" : {
          "description" : "The type of document",
          "$ref" : "#/definitions/Code"
        },
        "conveyanceType" : {
          "description" : "The type of conveyance",
          "$ref" : "#/definitions/Code"
        },
        "useOfRealty" : {
          "description" : "The use of the realty as defined by the purchaser",
          "$ref" : "#/definitions/Code"
        },
        "dwellingType" : {
          "description" : "The type of the dwelling as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "purchasePrice" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The purchase price of the conveyance"
        },
        "numberOfRealtiesInConveyance" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of realties in the conveyance"
        },
        "appliesToEntireRealty" : {
          "type" : "boolean",
          "description" : "If the conveyance applies to entire realty"
        }
      }
    },
    "HomeEquity" : {
      "type" : "object",
      "required" : [ "calculatedHomeEquity", "ident", "isCalculable", "key", "links", "ownedRealties", "personName", "pledge", "valueEstimation" ],
      "properties" : {
        "ident" : {
          "description" : "The ident for this resource",
          "$ref" : "#/definitions/PersonIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for this resource"
        },
        "personName" : {
          "type" : "string",
          "description" : "The persons name"
        },
        "isCalculable" : {
          "type" : "boolean",
          "description" : "Indicates if the calculation is possible"
        },
        "reasonNotCalculable" : {
          "type" : "string",
          "description" : "If not calculable, this string contains the reason"
        },
        "ownedRealties" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of relevant owned realties (cadastres and housing cooperative shares). Ownerships with fractions less 1/4 is not included"
        },
        "ownedCadastres" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned cadastres"
        },
        "ownedShares" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned housing cooperative shares"
        },
        "calculatedHomeEquity" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Calculated home equity"
        },
        "valueEstimation" : {
          "$ref" : "#/definitions/ValueEstimation"
        },
        "pledge" : {
          "$ref" : "#/definitions/Pledge"
        },
        "latestConveyance" : {
          "description" : "The latest conveyance for this realty",
          "$ref" : "#/definitions/ConveyanceData"
        },
        "remarksOnPerson" : {
          "description" : "A list if the risks that can be on a person",
          "$ref" : "#/definitions/Risk"
        },
        "links" : {
          "$ref" : "#/definitions/HomeEquityLinks"
        }
      }
    },
    "HomeEquityItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/HomeEquity"
        }
      }
    },
    "HomeEquityLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/HomeEquityItemLink"
        },
        "person" : {
          "description" : "Link to the current person",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "cadastreOwnerships" : {
          "description" : "The person’s ownerships on cadastres",
          "$ref" : "#/definitions/CadastreOwnershipListLink"
        },
        "shareOwnerships" : {
          "description" : "The person’s ownerships on housing cooperative shares",
          "$ref" : "#/definitions/ShareOwnershipListLink"
        },
        "customerScore" : {
          "description" : "Scoring of this person",
          "$ref" : "#/definitions/CustomerScoreItemLink"
        },
        "latestConveyancePDF" : {
          "description" : "PDF for the Creation of right representing the latest conveyance",
          "$ref" : "#/definitions/PDFItemLink"
        }
      }
    },
    "Pledge" : {
      "type" : "object",
      "required" : [ "hasListedEnforcement", "hasListedMortgage", "hasPledgeSecuringBond", "hasPledgingStatement", "numberOfEnforcements", "numberOfMortgagees", "numberOfMortgages", "numberOfPledges", "sumEnforcement", "sumMortgage", "sumPledge", "summaryCadastres", "summaryShares" ],
      "properties" : {
        "ownedRealtiesWithPledge" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned realties with pledge"
        },
        "ownedRealtiesWithoutPledge" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned realties without pledge"
        },
        "sumPledge" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum pledge for the persons ownership in realties. Fractions are taken into account in the calculation."
        },
        "numberOfPledges" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumMortgage" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfMortgages" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfMortgagees" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sumEnforcement" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numberOfEnforcements" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasPledgeSecuringBond" : {
          "type" : "boolean"
        },
        "hasPledgingStatement" : {
          "type" : "boolean"
        },
        "hasListedMortgage" : {
          "type" : "boolean"
        },
        "hasListedEnforcement" : {
          "type" : "boolean"
        },
        "hasMortgageWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If mortgages in this pledge have currency code <> 'NOK'"
        },
        "hasEnforcementWithForeignCurrency" : {
          "type" : "boolean",
          "description" : "If enforcements in this pledge have currency code <> 'NOK'"
        },
        "summaryCadastres" : {
          "$ref" : "#/definitions/Pledge"
        },
        "summaryShares" : {
          "$ref" : "#/definitions/Pledge"
        }
      }
    },
    "ValueEstimation" : {
      "type" : "object",
      "required" : [ "ownedRealtiesWithEstimatedValue", "ownedRealtiesWithoutEstimatedValue", "sumEstimatedValue" ],
      "properties" : {
        "ownedRealtiesWithoutEstimatedValue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned realties without an estimated value"
        },
        "ownedRealtiesWithEstimatedValue" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of owned realties with an estimated value"
        },
        "sumEstimatedValue" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Sum of the estimated value for the persons ownership in realties. Fractions are taken into account in the calculation. Realties without estimated value are not included."
        }
      }
    },
    "Building" : {
      "type" : "object",
      "required" : [ "hasElevator", "ident", "key", "links", "municipalityNumber", "numberOfFloors", "numberOfUnits" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/BuildingIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The building number"
        },
        "updatedDate" : {
          "description" : "The building update date",
          "$ref" : "#/definitions/ApiDate"
        },
        "municipalityNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The municipality number"
        },
        "municipality" : {
          "description" : "The municipality this building resides in",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "numberOfUnits" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of occupied units in the building"
        },
        "hasElevator" : {
          "type" : "boolean",
          "description" : "If the building has a registered elevator",
          "enum" : [ true, false ]
        },
        "numberOfFloors" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of floors in the building"
        },
        "totalFloorSpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total usable area inside the building"
        },
        "totalAreaOfPrimarySpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total living area inside the building"
        },
        "areaOfSecondarySpace" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area not used for living inside the building"
        },
        "incompleteArea" : {
          "type" : "boolean",
          "description" : "Whether the area is measured fully or not"
        },
        "builtUpArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "Area that is built on"
        },
        "totalArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building, including walls"
        },
        "totalAreaHousing" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building used for living"
        },
        "totalAlternateArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area of the building not used for living"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of the building in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "buildingStatus" : {
          "description" : "The building status",
          "$ref" : "#/definitions/Code"
        },
        "typeOfBuilding" : {
          "description" : "The type of this building",
          "$ref" : "#/definitions/Code"
        },
        "industryGroup" : {
          "description" : "The industrial use of this building",
          "$ref" : "#/definitions/Code"
        },
        "waterSupplyType" : {
          "description" : "The source of water used by this building",
          "$ref" : "#/definitions/Code"
        },
        "dischargeType" : {
          "description" : "The type of discharge used by this building",
          "$ref" : "#/definitions/Code"
        },
        "originType" : {
          "description" : "How this building was registered into the system",
          "$ref" : "#/definitions/Code"
        },
        "heatingType" : {
          "type" : "array",
          "description" : "The type of heating this building primarily uses",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "energySourceType" : {
          "type" : "array",
          "description" : "The type of energy source this building primarily uses",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "approvedDate" : {
          "description" : "The date the building plans were approved",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredApprovedDate" : {
          "description" : "The registered date the building plans were approved",
          "$ref" : "#/definitions/ApiDate"
        },
        "startedDate" : {
          "description" : "The date the construction of this building started",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredStartedDate" : {
          "description" : "The registered date the construction of this building started",
          "$ref" : "#/definitions/ApiDate"
        },
        "usedDate" : {
          "description" : "The date this building was taken taken into use",
          "$ref" : "#/definitions/ApiDate"
        },
        "registeredUsedDate" : {
          "description" : "The registered date this building was taken taken into use",
          "$ref" : "#/definitions/ApiDate"
        },
        "buildingStatusHistory" : {
          "type" : "array",
          "description" : "The building status history",
          "items" : {
            "$ref" : "#/definitions/BuildingStatusHistory"
          }
        },
        "floors" : {
          "type" : "array",
          "description" : "The registered floor information for this building.",
          "items" : {
            "$ref" : "#/definitions/Floor"
          }
        },
        "links" : {
          "$ref" : "#/definitions/BuildingLinks"
        }
      }
    },
    "BuildingChangeListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "BuildingLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/BuildingItemLink"
        },
        "singleheritages" : {
          "description" : "The single heritages connected to this building",
          "$ref" : "#/definitions/SingleHeritageListLink"
        },
        "buildingchanges" : {
          "description" : "The modifications made to this building",
          "$ref" : "#/definitions/BuildingChangeListLink"
        },
        "culturalheritages" : {
          "description" : "Cultural heritages this building belongs to",
          "$ref" : "#/definitions/CulturalHeritageListLink"
        },
        "cadastres" : {
          "description" : "The cadastre this building is placed upon",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "addresses" : {
          "description" : "The addresses connected to this building",
          "$ref" : "#/definitions/AddressListLink"
        },
        "units" : {
          "description" : "The units inside this building",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitListLink"
        },
        "contacts" : {
          "description" : "The registered contacts to the construction of this building",
          "$ref" : "#/definitions/PersonListLink"
        },
        "developers" : {
          "description" : "The registered developers of this building",
          "$ref" : "#/definitions/PersonListLink"
        },
        "floors" : {
          "description" : "The floors contained in this building",
          "$ref" : "#/definitions/FloorListLink"
        }
      }
    },
    "BuildingListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Building"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CulturalHeritageListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "FloorListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "BuildingItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Building"
        }
      }
    },
    "FloorListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Floor"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "FloorItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Floor"
        }
      }
    },
    "RealtyEstateUnit" : {
      "type" : "object",
      "required" : [ "ident", "key", "links", "reference", "registeredDate" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/RealtyEstateUnitIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The internal id"
        },
        "registeredDate" : {
          "$ref" : "#/definitions/ApiDate"
        },
        "reference" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/RealtyEstateUnitLinks"
        }
      }
    },
    "RealtyEstateUnitIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "An internal id for a realty estate unit"
        }
      }
    },
    "RealtyEstateUnitItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "RealtyEstateUnitLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/RealtyEstateUnitItemLink"
        },
        "cadastres" : {
          "description" : "A link to the cadastres this realty estate unit encompasses",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "RealtyEstateUnitListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/RealtyEstateUnit"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "RealtyEstateUnitItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/RealtyEstateUnit"
        }
      }
    },
    "HousingCooperativeSearch" : {
      "type" : "object",
      "required" : [ "housingCooperativeName", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/HousingCooperativeIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The organization number of the cooperative"
        },
        "housingCooperativeName" : {
          "type" : "string",
          "description" : "The name of the cooperative"
        },
        "extent" : {
          "description" : "DEPRECATED. The calculated extent of the cooperative",
          "$ref" : "#/definitions/Extent"
        },
        "geojson" : {
          "description" : "The calculated extent of the cooperative as GeoJSON",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/HousingCooperativeSearchLinks"
        }
      }
    },
    "HousingCooperativeSearchLinks" : {
      "type" : "object",
      "required" : [ "housingcooperative", "ownedCadastres", "shares" ],
      "properties" : {
        "housingcooperative" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/HousingCooperativeItemLink"
        },
        "shares" : {
          "description" : "Shares in this housing cooperative",
          "$ref" : "#/definitions/ShareListLink"
        },
        "ownedCadastres" : {
          "description" : "Cadastres owned by this housing cooperative",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "HousingCooperativeSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/HousingCooperativeSearch"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ShareRiskV2" : {
      "type" : "object",
      "required" : [ "description", "isPresent", "riskOnObject", "shareRiskV2Levels", "shortDescription" ],
      "properties" : {
        "isPresent" : {
          "type" : "boolean",
          "description" : "Indicating whether this risk is present or not"
        },
        "description" : {
          "type" : "string",
          "description" : "A description of this risk"
        },
        "shortDescription" : {
          "type" : "string",
          "description" : "A short description of this risk"
        },
        "riskOnObject" : {
          "type" : "string",
          "description" : "Type of object this risk is related to"
        },
        "shareRiskV2Levels" : {
          "type" : "object",
          "description" : "If risk found in the Land Registry for cooperative shares, this map contains the creation of rights that is the reason for the risk.",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRiskV2RightsInLevel"
          }
        }
      }
    },
    "ShareRiskV2RightsInLevel" : {
      "type" : "object",
      "required" : [ "rights", "shareLevel" ],
      "properties" : {
        "shareLevel" : {
          "$ref" : "#/definitions/LevelCode"
        },
        "rights" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareScoreRight"
          }
        }
      }
    },
    "ShareScoreItemLinkV2" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareScoreItemResponseV2" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareScoreV2"
        }
      }
    },
    "ShareScoreV2" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "description" : "The ident for this resource",
          "$ref" : "#/definitions/ShareIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for this resource"
        },
        "isScorable" : {
          "type" : "boolean",
          "description" : "Indicates if scoring for this share is possible"
        },
        "reasonNotScorable" : {
          "type" : "string",
          "description" : "If not scorable, this string contains the reason"
        },
        "overallRisk" : {
          "description" : "The overall/total risk of providing a loan to the person owning this share",
          "$ref" : "#/definitions/Code"
        },
        "highRisks" : {
          "type" : "object",
          "description" : "Collection of all possible high risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRiskV2"
          }
        },
        "mediumRisks" : {
          "type" : "object",
          "description" : "Collection of all possible medium risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRiskV2"
          }
        },
        "lowRisks" : {
          "type" : "object",
          "description" : "Collection of all possible low risks",
          "additionalProperties" : {
            "$ref" : "#/definitions/ShareRiskV2"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ShareScoreLinks"
        }
      }
    },
    "UnregisteredOwnership" : {
      "type" : "object",
      "required" : [ "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/UnregisteredOwnershipIdent"
        },
        "key" : {
          "type" : "string"
        },
        "cadastreLevel" : {
          "description" : "Specifies what part of the cadastre the ownership is connected to",
          "$ref" : "#/definitions/LevelCode"
        },
        "fraction" : {
          "description" : "Specifies the size of an unregistered ownership as a fraction",
          "$ref" : "#/definitions/Fraction"
        },
        "links" : {
          "$ref" : "#/definitions/UnregisteredOwnershipLinks"
        }
      }
    },
    "UnregisteredOwnershipIdent" : {
      "type" : "object",
      "required" : [ "cadastreIdent", "ownershipNumber" ],
      "properties" : {
        "cadastreIdent" : {
          "description" : "The ident for the cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "ownershipNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A serial for all owners of the same cadastre"
        },
        "cadastreLevel" : {
          "type" : "string",
          "description" : "A string that specifies what part of the cadastre the ownership is connected to"
        }
      }
    },
    "UnregisteredOwnershipItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "UnregisteredOwnershipLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/UnregisteredOwnershipItemLink"
        },
        "ownedCadastre" : {
          "description" : "The cadastre being owned",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "owningPerson" : {
          "description" : "The owning person",
          "$ref" : "#/definitions/PersonItemLink"
        },
        "owningCadastre" : {
          "description" : "The owning cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        }
      }
    },
    "UnregisteredOwnershipListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/UnregisteredOwnership"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "UnregisteredOwnershipItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/UnregisteredOwnership"
        }
      }
    },
    "Place" : {
      "type" : "object",
      "required" : [ "ident", "key", "placeName", "placeType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/PlaceIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The internal ident as string"
        },
        "placeName" : {
          "type" : "string",
          "description" : "The name of the place"
        },
        "placeType" : {
          "type" : "string",
          "description" : "The type of the place"
        },
        "municipality" : {
          "type" : "string",
          "description" : "The municipality this place is located in"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of this place as GeoJSON",
          "$ref" : "#/definitions/GeoJSONFeatureCollection"
        }
      }
    },
    "PlaceIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "An internal id for a place"
        }
      }
    },
    "PlaceSearchListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Place"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CreationOfRightsListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "CadastreLandRegistry" : {
      "type" : "object",
      "required" : [ "links", "parts" ],
      "properties" : {
        "landRegistryUpToDate" : {
          "description" : "When the data was last updated.",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for the share or cadastre"
        },
        "dateConverted" : {
          "description" : "The date from which historical data is available for the current realty, usually called the conversion date.",
          "$ref" : "#/definitions/ApiDate"
        },
        "eventStatus" : {
          "type" : "string",
          "description" : "The type of request",
          "enum" : [ "active", "historical", "active_and_historical" ]
        },
        "parts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Part"
          }
        },
        "cadastreIdent" : {
          "description" : "The ident for the cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "cadastreKey" : {
          "type" : "string",
          "description" : "The key for the cadastre"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreLandRegistryLinks"
        }
      }
    },
    "CadastreLandRegistryItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreLandRegistry"
        }
      }
    },
    "CadastreLandRegistryLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "cadastre" : {
          "description" : "Link to the current cadastre",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "titles" : {
          "description" : "Hjemmel part of Grunnbok",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "encumbrances" : {
          "description" : "Heftelser part of Grunnbok",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "landData" : {
          "description" : "Andelsopplysninger part of Grunnbok",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "leaseholdAgreements" : {
          "description" : "Leieavtaler part of Grunnbok",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "easements" : {
          "description" : "Servitutter.",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        },
        "privileges" : {
          "description" : "Rettigheter. Eiendommens rettigheter",
          "$ref" : "#/definitions/CadastreLandRegistryItemLink"
        }
      }
    },
    "Level" : {
      "type" : "object",
      "required" : [ "header", "rights", "topText" ],
      "properties" : {
        "header" : {
          "type" : "string"
        },
        "topText" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TextLine"
          }
        },
        "rights" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/CreationOfRight"
          }
        }
      }
    },
    "Part" : {
      "type" : "object",
      "required" : [ "bottomText", "header", "levels", "topText" ],
      "properties" : {
        "header" : {
          "type" : "string"
        },
        "topText" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TextLine"
          }
        },
        "bottomText" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TextLine"
          }
        },
        "levels" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Level"
          }
        }
      }
    },
    "HousingCooperativeListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/HousingCooperative"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "Sectioning" : {
      "type" : "object",
      "required" : [ "denominator", "ident", "key", "links", "numerator", "purposeSectioning" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/SectioningIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The cadastre and sectioning serial"
        },
        "numerator" : {
          "type" : "number",
          "description" : "The numerator of the fraction of this section"
        },
        "denominator" : {
          "type" : "number",
          "description" : "The denominator of the fraction of this section"
        },
        "purposeSectioning" : {
          "description" : "The reason for sectioning",
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/SectioningLinks"
        }
      }
    },
    "SectioningIdent" : {
      "type" : "object",
      "required" : [ "cadastreIdent", "serialNumber" ],
      "properties" : {
        "cadastreIdent" : {
          "description" : "The cadastre",
          "$ref" : "#/definitions/CadastreIdent"
        },
        "serialNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A unique serial for the sectioning of a cadstre"
        }
      }
    },
    "SectioningItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SectioningLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/SectioningItemLink"
        },
        "cadastres" : {
          "description" : "A link to the cadastre this section divides",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "SectioningListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Sectioning"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "SectioningItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Sectioning"
        }
      }
    },
    "ShareLandRegistry" : {
      "type" : "object",
      "required" : [ "links", "parts" ],
      "properties" : {
        "landRegistryUpToDate" : {
          "description" : "When the data was last updated.",
          "$ref" : "#/definitions/ApiDateTime"
        },
        "key" : {
          "type" : "string",
          "description" : "The key for the share or cadastre"
        },
        "dateConverted" : {
          "description" : "The date from which historical data is available for the current realty, usually called the conversion date.",
          "$ref" : "#/definitions/ApiDate"
        },
        "eventStatus" : {
          "type" : "string",
          "description" : "The type of request",
          "enum" : [ "active", "historical", "active_and_historical" ]
        },
        "parts" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Part"
          }
        },
        "shareIdent" : {
          "description" : "The ident for the cadastre",
          "$ref" : "#/definitions/ShareIdent"
        },
        "shareKey" : {
          "type" : "string",
          "description" : "The key for the cadastre"
        },
        "links" : {
          "$ref" : "#/definitions/ShareLandRegistryLinks"
        }
      }
    },
    "ShareLandRegistryItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareLandRegistry"
        }
      }
    },
    "ShareLandRegistryLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/ShareLandRegistryItemLink"
        },
        "share" : {
          "description" : "Link to the current share",
          "$ref" : "#/definitions/ShareItemLink"
        },
        "titles" : {
          "description" : "Hjemmel part of Grunnbok",
          "$ref" : "#/definitions/ShareLandRegistryItemLink"
        },
        "encumbrances" : {
          "description" : "Heftelser part of Grunnbok",
          "$ref" : "#/definitions/ShareLandRegistryItemLink"
        },
        "shareInformation" : {
          "description" : "Andelsopplysninger part of Grunnbok",
          "$ref" : "#/definitions/ShareLandRegistryItemLink"
        }
      }
    },
    "CadastreDocumentCopyExistence" : {
      "type" : "object",
      "required" : [ "exists", "ident", "key", "links", "reasonNotExists" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/DocumentIdent"
        },
        "key" : {
          "type" : "string"
        },
        "exists" : {
          "type" : "boolean"
        },
        "reasonNotExists" : {
          "type" : "string"
        },
        "rights" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreationOfRightCopyExistence"
          }
        },
        "links" : {
          "$ref" : "#/definitions/CadastreDocumentCopyExistenceLinks"
        }
      }
    },
    "CadastreDocumentCopyExistenceItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "CadastreDocumentCopyExistenceItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/CadastreDocumentCopyExistence"
        }
      }
    },
    "CadastreDocumentCopyExistenceLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/CreationOfRightItemLink"
        }
      }
    },
    "CreationOfRightCopyExistence" : {
      "type" : "object",
      "required" : [ "documentName", "documentType", "exists", "ident", "key", "links", "reasonNotExists" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/CreationOfRightIdent"
        },
        "key" : {
          "type" : "string"
        },
        "exists" : {
          "type" : "boolean"
        },
        "reasonNotExists" : {
          "type" : "string"
        },
        "documentType" : {
          "type" : "string"
        },
        "documentName" : {
          "type" : "string"
        },
        "links" : {
          "$ref" : "#/definitions/CadastreDocumentCopyExistenceLinks"
        }
      }
    },
    "ExternalLinkSoilContamination" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SoilContamination" : {
      "type" : "object",
      "required" : [ "authorityType", "degreeOfImpactType", "ident", "key", "lastUpdatedDate", "links", "localityName", "registeredDate" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/SoilContaminationIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The official serial"
        },
        "registeredDate" : {
          "description" : "The date the contamination was registered",
          "$ref" : "#/definitions/ApiDate"
        },
        "degreeOfImpactType" : {
          "description" : "The severity of the contamination",
          "$ref" : "#/definitions/Code"
        },
        "localityName" : {
          "type" : "string",
          "description" : "A name of the location the contamination was located"
        },
        "lastUpdatedDate" : {
          "description" : "The last date this data was updated",
          "$ref" : "#/definitions/ApiDate"
        },
        "authorityType" : {
          "description" : "The authority who registered this contamination",
          "$ref" : "#/definitions/Code"
        },
        "links" : {
          "$ref" : "#/definitions/SoilContaminationLinks"
        }
      }
    },
    "SoilContaminationIdent" : {
      "type" : "object",
      "required" : [ "localityNumber" ],
      "properties" : {
        "localityNumber" : {
          "type" : "string",
          "description" : "An official unique serial for a soil contamination"
        }
      }
    },
    "SoilContaminationItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "SoilContaminationLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "self", "soilContaminationWebpage" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/SoilContaminationItemLink"
        },
        "cadastres" : {
          "description" : "Affected cadastres",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "soilContaminationWebpage" : {
          "description" : "A link to source-register",
          "$ref" : "#/definitions/ExternalLinkSoilContamination"
        }
      }
    },
    "SoilContaminationListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/SoilContamination"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "SoilContaminationItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/SoilContamination"
        }
      }
    },
    "ShareDocumentCopyExistence" : {
      "type" : "object",
      "required" : [ "exists", "ident", "key", "links", "reasonNotExists" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ShareDocumentIdent"
        },
        "key" : {
          "type" : "string"
        },
        "exists" : {
          "type" : "boolean"
        },
        "reasonNotExists" : {
          "type" : "string"
        },
        "rights" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CreationOfRightCopyExistence"
          }
        },
        "links" : {
          "$ref" : "#/definitions/ShareDocumentCopyExistenceLinks"
        }
      }
    },
    "ShareDocumentCopyExistenceItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ShareDocumentCopyExistenceItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/ShareDocumentCopyExistence"
        }
      }
    },
    "ShareDocumentCopyExistenceLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/ShareDocumentCopyExistenceItemLink"
        }
      }
    },
    "ShareDocumentIdent" : {
      "type" : "object",
      "required" : [ "documentNumber", "documentYear" ],
      "properties" : {
        "documentYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The document year"
        },
        "documentNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The document number"
        },
        "office" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The office this document was registered in"
        }
      }
    },
    "Plot" : {
      "type" : "object",
      "required" : [ "eventStatus", "ident", "key", "links" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/PlotIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The internal id of the plot"
        },
        "eventStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Whether this plot is active (0) or historical (1)",
          "minimum" : 0,
          "maximum" : 1
        },
        "area" : {
          "type" : "number",
          "format" : "double",
          "description" : "The area of the plot"
        },
        "areaNotes" : {
          "type" : "array",
          "description" : "Notes to area",
          "items" : {
            "$ref" : "#/definitions/Code"
          }
        },
        "unregisteredFarmCommons" : {
          "type" : "string",
          "description" : "If this is part of a farm commons but not registered as such",
          "enum" : [ "J", "N" ]
        },
        "dispute" : {
          "type" : "string",
          "description" : "If it is a registered dispute for this plot",
          "enum" : [ "J", "N" ]
        },
        "clarifiedOwnership" : {
          "type" : "string",
          "description" : "If this plot has a clear ownership",
          "enum" : [ "J", "N" ]
        },
        "hasSeveralCadastreUnits" : {
          "type" : "string",
          "description" : "If this plot is connected to more than one cadastre",
          "enum" : [ "J", "N" ]
        },
        "dataCaptureDate" : {
          "description" : "The date this data was collected",
          "$ref" : "#/definitions/ApiDate"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of the plot in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/PlotLinks"
        }
      }
    },
    "PlotIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The internal id of the plot"
        }
      }
    },
    "PlotItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "PlotLinks" : {
      "type" : "object",
      "required" : [ "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/PlotItemLink"
        },
        "cadastres" : {
          "description" : "The cadastres containing this plot. Usually only one.",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "PlotListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Plot"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "PlotItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Plot"
        }
      }
    },
    "Address" : {
      "type" : "object",
      "required" : [ "addressType", "alternativeAddress", "eventStatus", "ident", "key", "links", "shortName", "sourceOfAddressName" ],
      "properties" : {
        "ident" : {
          "description" : "The street address or cadastral address ident",
          "$ref" : "#/definitions/AddressIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The address ident"
        },
        "updatedDate" : {
          "description" : "The address update date",
          "$ref" : "#/definitions/ApiDate"
        },
        "addressType" : {
          "description" : "Type of address. Cadastral-address(M) or Street-address(O)",
          "$ref" : "#/definitions/Code"
        },
        "municipality" : {
          "description" : "Municipality",
          "$ref" : "#/definitions/MunicipalityData"
        },
        "position" : {
          "description" : "Position in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONFeature"
        },
        "eventStatus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Whether the address is active (0) or historical (1)",
          "minimum" : 0,
          "maximum" : 1
        },
        "alternativeAddress" : {
          "type" : "string",
          "description" : "An alternate name for the address"
        },
        "shortName" : {
          "type" : "string",
          "description" : "A short name for the address, not unique"
        },
        "sourceOfAddressName" : {
          "description" : "Source of the address name",
          "$ref" : "#/definitions/Code"
        },
        "street" : {
          "description" : "The street if the address has one",
          "$ref" : "#/definitions/Street"
        },
        "geojson" : {
          "description" : "DEPRECATED. The position of the address in GeoJSON format",
          "$ref" : "#/definitions/GeoJSONObject"
        },
        "links" : {
          "$ref" : "#/definitions/AddressLinks"
        }
      }
    },
    "AddressLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "districts", "self", "shares" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "cadastres" : {
          "description" : "The cadastres connected to this address",
          "$ref" : "#/definitions/CadastreListLink"
        },
        "buildings" : {
          "description" : "The buildings connected to this address",
          "$ref" : "#/definitions/BuildingListLink"
        },
        "units" : {
          "description" : "The units connected to this address",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitListLink"
        },
        "districts" : {
          "description" : "The districts this address is contained within",
          "$ref" : "#/definitions/DistrictListLink"
        },
        "shares" : {
          "description" : "The shares this address is contained within",
          "$ref" : "#/definitions/ShareListLink"
        },
        "street" : {
          "description" : "The street of this address",
          "$ref" : "#/definitions/StreetListLink"
        }
      }
    },
    "AddressListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Address"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "StreetListLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "AddressItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Address"
        }
      }
    },
    "PingResponse" : {
      "type" : "object",
      "required" : [ "land_registry_ajour", "latency", "online", "release_time", "started_time", "status_time", "system", "technical_land_registry_ajour", "version" ],
      "properties" : {
        "online" : {
          "type" : "boolean",
          "description" : "Whether realty is ok"
        },
        "statuses" : {
          "type" : "array",
          "description" : "Contains all errors since last reset",
          "items" : {
            "type" : "string"
          }
        },
        "overall_status" : {
          "type" : "string",
          "description" : "A status field",
          "enum" : [ "green", "yellow", "orange", "red" ]
        },
        "status_time" : {
          "type" : "string",
          "description" : "Timestamp created on call"
        },
        "system" : {
          "type" : "string",
          "description" : "Name of system"
        },
        "env" : {
          "type" : "string",
          "description" : "The environment this component runs in, not in use at the moment"
        },
        "version" : {
          "type" : "string",
          "description" : "The version of this component"
        },
        "release_time" : {
          "type" : "string",
          "description" : "Timestamp created when code was released"
        },
        "started_time" : {
          "type" : "string",
          "description" : "Timestamp created when service was last started"
        },
        "latency" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The time it took to respond in milliseconds"
        },
        "land_registry_ajour" : {
          "type" : "string",
          "description" : "How current the land registry is (Elida)"
        },
        "technical_land_registry_ajour" : {
          "type" : "string",
          "description" : "How current the technical land registry is (Matrikkelen)"
        }
      }
    },
    "StatusHeader" : {
      "type" : "object",
      "required" : [ "body", "cookies", "flash", "session" ],
      "properties" : {
        "body" : {
          "$ref" : "#/definitions/HttpEntity"
        },
        "flash" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "session" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "cookies" : {
          "$ref" : "#/definitions/Cookies"
        }
      }
    },
    "Complaint" : {
      "type" : "object",
      "required" : [ "complaintConcerns", "ident", "key", "links", "reference", "registeredDate" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/ComplaintIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The internal complaint id"
        },
        "reference" : {
          "type" : "string",
          "description" : "A reference to a complaint document"
        },
        "complaintConcerns" : {
          "type" : "string",
          "description" : "A short description on what the complaint is about"
        },
        "registeredDate" : {
          "description" : "Registered date of the complaint",
          "$ref" : "#/definitions/ApiDate"
        },
        "links" : {
          "$ref" : "#/definitions/ComplaintLinks"
        }
      }
    },
    "ComplaintIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The internal id of the complaint"
        }
      }
    },
    "ComplaintItemLink" : {
      "type" : "object",
      "required" : [ "href", "rel" ],
      "properties" : {
        "rel" : {
          "type" : "string",
          "description" : "The type of object you can expect when consuming this link"
        },
        "href" : {
          "type" : "string",
          "description" : "The http reference to this link"
        },
        "key" : {
          "type" : "string",
          "description" : "The key used in this link"
        }
      }
    },
    "ComplaintLinks" : {
      "type" : "object",
      "required" : [ "cadastres", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to itself",
          "$ref" : "#/definitions/ComplaintItemLink"
        },
        "cadastres" : {
          "description" : "The cadastre this complaint concerns",
          "$ref" : "#/definitions/CadastreListLink"
        }
      }
    },
    "ComplaintListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/Complaint"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "ComplaintItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/Complaint"
        }
      }
    },
    "Dictionary" : {
      "type" : "object",
      "required" : [ "dictionary", "fromLanguage", "toLanguage" ],
      "properties" : {
        "dictionary" : {
          "type" : "object",
          "description" : "A map containing key/value pairs of the dictionary",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "fromLanguage" : {
          "type" : "string",
          "description" : "The language used in keys"
        },
        "toLanguage" : {
          "type" : "string",
          "description" : "The language used in values"
        }
      }
    },
    "SeparatelyOccupiedUnit" : {
      "type" : "object",
      "required" : [ "buildingChangeCode", "ident", "isBuildingChange", "key", "links", "toBeExpired", "unitType" ],
      "properties" : {
        "ident" : {
          "$ref" : "#/definitions/SeparatelyOccupiedUnitIdent"
        },
        "key" : {
          "type" : "string",
          "description" : "The internal id"
        },
        "floorId" : {
          "type" : "string",
          "description" : "The floor id for this unit"
        },
        "floorNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The floor number this unit is registered inside"
        },
        "floorLevelCode" : {
          "description" : "The floor type this unit is registered inside",
          "$ref" : "#/definitions/Code"
        },
        "apartmentNumber" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The apartment number of this unit"
        },
        "unitNumber" : {
          "type" : "string",
          "description" : "The apartment unitnumber"
        },
        "internalId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The internal id for SeparatelyOccupiedUnit. This id is generated and might change"
        },
        "usableArea" : {
          "type" : "number",
          "format" : "double",
          "description" : "The total area inside this unit excluding walls"
        },
        "numberOfRooms" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "How many rooms this unit has excluding bathroom, WC and kitchen"
        },
        "numberOfBathRooms" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "How many bathrooms this unit has"
        },
        "numberOfWCs" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "How many WCs this unit has"
        },
        "kitchenAccessCode" : {
          "description" : "What type of kitchen this unit has",
          "$ref" : "#/definitions/Code"
        },
        "unitType" : {
          "description" : "The type of unit as defined by the owner",
          "$ref" : "#/definitions/Code"
        },
        "isBuildingChange" : {
          "type" : "boolean",
          "description" : "Whether this unit is connected to a building modification"
        },
        "buildingChangeCode" : {
          "description" : "The type of modifications made to this building",
          "$ref" : "#/definitions/Code"
        },
        "toBeExpired" : {
          "type" : "boolean",
          "description" : "Whether this unit will be removed"
        },
        "links" : {
          "$ref" : "#/definitions/SeparatelyOccupiedUnitLinks"
        }
      }
    },
    "SeparatelyOccupiedUnitIdent" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "An internal id for a separately occupied unit"
        }
      }
    },
    "SeparatelyOccupiedUnitLinks" : {
      "type" : "object",
      "required" : [ "building", "self" ],
      "properties" : {
        "self" : {
          "description" : "A link to self",
          "$ref" : "#/definitions/SeparatelyOccupiedUnitItemLink"
        },
        "building" : {
          "description" : "The building this unit is in",
          "$ref" : "#/definitions/BuildingItemLink"
        },
        "buildingchange" : {
          "description" : "The modifications made to building this unit is in",
          "$ref" : "#/definitions/BuildingChangeItemLink"
        },
        "address" : {
          "description" : "The address of this unit",
          "$ref" : "#/definitions/AddressItemLink"
        },
        "cadastre" : {
          "description" : "The cadastre this unit is on",
          "$ref" : "#/definitions/CadastreItemLink"
        },
        "share" : {
          "description" : "The share connected to this unit if it is a cooperative share",
          "$ref" : "#/definitions/ShareItemLink"
        }
      }
    },
    "SeparatelyOccupiedUnitListResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "items" : {
          "type" : "array",
          "description" : "Contains the items you've searched for",
          "items" : {
            "$ref" : "#/definitions/SeparatelyOccupiedUnit"
          }
        },
        "pagination" : {
          "description" : "Contains http references to the next or previous elements in a list",
          "$ref" : "#/definitions/Pagination"
        }
      }
    },
    "SeparatelyOccupiedUnitItemResponse" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "description" : "Contains error messages",
          "$ref" : "#/definitions/Error"
        },
        "info" : {
          "description" : "Contains info messages",
          "$ref" : "#/definitions/Info"
        },
        "item" : {
          "description" : "Contains the item you've searched for",
          "$ref" : "#/definitions/SeparatelyOccupiedUnit"
        }
      }
    }
  }
}